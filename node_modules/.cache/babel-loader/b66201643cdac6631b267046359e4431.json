{"ast":null,"code":"var _jsxFileName = \"F:\\\\ibs-admin-front\\\\ibs-school-admin\\\\src\\\\components\\\\AddScheduledCourse\\\\courseTypeForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Input, Select, Title } from \"../Input/styles\";\nimport axios from \"axios\";\nimport { link } from \"../../baseLink/link\";\nimport { ButtonBox } from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseTypeForm = () => {\n  _s();\n\n  const [submissionProcess, setSubmissionProcess] = useState({\n    loading: false,\n    error: false,\n    success: false\n  });\n\n  const submitCourseTypeForm = e => {\n    e.preventDefault();\n    const form = {\n      courseName: e.target.courseType.value,\n      category: {\n        id: e.target.categoryType.value // categoryName: e.target\n\n      }\n    };\n    console.log(form);\n    setSubmissionProcess({\n      loading: true,\n      error: false,\n      success: false\n    });\n    axios.post(`${link}/course-type`, form).then(() => {\n      setSubmissionProcess({\n        loading: false,\n        error: false,\n        success: true\n      });\n    }).catch(() => {\n      setSubmissionProcess({\n        loading: false,\n        error: true,\n        success: false\n      });\n    }).finally(() => {\n      setTimeout(() => setSubmissionProcess({\n        loading: false,\n        error: false,\n        success: false\n      }), 3000);\n    });\n  };\n\n  const {\n    loading,\n    error,\n    success\n  } = submissionProcess;\n  const [categories, setCategories] = useState([]);\n\n  const getCategory = () => {\n    axios.get(`${link}/category`).then(res => {\n      setCategories(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getCategory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submitCourseTypeForm,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      onClick: getCategory,\n      children: \"Course Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"categoryType\",\n      children: categories === null || categories === void 0 ? void 0 : categories.map(({\n        id,\n        categoryName\n      }) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: id,\n        children: categoryName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Course Type\",\n      type: \"text\",\n      name: \"courseType\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n      loading: loading,\n      error: error,\n      success: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CourseTypeForm, \"1m+jdidArP/ipI8vZtevCaCnoVI=\");\n\n_c = CourseTypeForm;\nexport default CourseTypeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseTypeForm\");","map":{"version":3,"sources":["F:/ibs-admin-front/ibs-school-admin/src/components/AddScheduledCourse/courseTypeForm.jsx"],"names":["React","useState","useEffect","Button","Form","Input","Select","Title","axios","link","ButtonBox","CourseTypeForm","submissionProcess","setSubmissionProcess","loading","error","success","submitCourseTypeForm","e","preventDefault","form","courseName","target","courseType","value","category","id","categoryType","console","log","post","then","catch","finally","setTimeout","categories","setCategories","getCategory","get","res","data","map","categoryName"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport {Button, Form, Input, Select, Title} from \"../Input/styles\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {ButtonBox} from \"../Input\";\r\n\r\nconst CourseTypeForm = () => {\r\n\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n    const submitCourseTypeForm = (e) => {\r\n        e.preventDefault()\r\n        const form = {\r\n            courseName: e.target.courseType.value,\r\n            category: {\r\n                id: e.target.categoryType.value,\r\n                // categoryName: e.target\r\n            }\r\n        }\r\n        console.log(form)\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        axios.post(`${link}/course-type`, form)\r\n            .then(() => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n            })\r\n            .catch(() => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 3000)\r\n            })\r\n    }\r\n    const {loading, error, success} = submissionProcess\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const getCategory = () => {\r\n        axios.get(`${link}/category`)\r\n            .then((res) => {\r\n                setCategories(res.data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategory()\r\n    }, [])\r\n\r\n    return (\r\n        <Form onSubmit={submitCourseTypeForm}>\r\n            <Title onClick={getCategory}>Course Type</Title>\r\n            <Select name={\"categoryType\"}>\r\n                {categories?.map(({id, categoryName}) =>\r\n                    <option value={id}>{categoryName}</option>\r\n                )}\r\n            </Select>\r\n            {/*<Input placeholder={\"Category\"} name={\"categoryType\"} list={\"category\"}/>*/}\r\n            <Input placeholder={\"Course Type\"} type={\"text\"} name=\"courseType\"/>\r\n            <ButtonBox loading={loading} error={error} success={success}/>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CourseTypeForm"]},"metadata":{},"sourceType":"module"}