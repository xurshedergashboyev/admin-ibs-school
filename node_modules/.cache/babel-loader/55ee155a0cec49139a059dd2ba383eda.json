{"ast":null,"code":"var _jsxFileName = \"F:\\\\ibs-admin-front\\\\ibs-school-admin\\\\src\\\\components\\\\ImagesList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ActionsBox, Add, CopiedMessage, Copy, Delete, DeletionBackground, DeletionImg, DeletionPage, DeletionText, ImageBox, ImageData, ImageId, ImagesBox, Img, ImgBox, NavbarBox, PageTitle } from \"./styles\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; //icon\n\nimport { ReactComponent as CopyIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/copy.svg\";\nimport { ReactComponent as DeleteIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/bin.svg\";\nimport { ReactComponent as PlusIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/plus-img.svg\";\nimport { ReactComponent as Arrow } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/arrow.svg\";\nimport { link } from \"../../baseLink/link\";\nimport PageTitleAdd from \"../PageTitleAdd\";\nimport Loading from \"../Loading\";\nimport ErrorBox from \"../ErrorBox\";\nimport { httpRequest } from \"../../util/httpRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImagesList = () => {\n  _s();\n\n  let ids = [];\n  const [state, setState] = useState([]);\n  const [copied, setCopied] = useState({\n    copied: false,\n    text: ''\n  });\n  const [deletionData, setDeletionData] = useState({\n    popUp: false,\n    id: ''\n  });\n  const [gettingProcess, setGettingProcess] = useState({\n    loading: false,\n    error: false\n  });\n  const {\n    loading,\n    error\n  } = gettingProcess;\n\n  const getImages = () => {\n    setGettingProcess({\n      loading: true,\n      error: false\n    });\n    setState([]);\n    axios(httpRequest(\"images/files\", \"GET\")) // .get(`${link}/images/files`)\n    .then(res => {\n      console.log(res);\n      res.data.map(data => {\n        const url = data.url.split('/');\n        ids.push(url[url.length - 1]);\n        setState(prevState => [...prevState, url[url.length - 1]]);\n      });\n      setGettingProcess({\n        loading: false,\n        error: false\n      });\n    }).catch(err => {\n      setGettingProcess({\n        loading: false,\n        error: true\n      });\n    });\n  };\n\n  useEffect(() => {\n    getImages();\n    console.log(state);\n  }, []);\n\n  const deleteImage = id => {\n    axios(`images/${id}`, \"DELETE\") // .delete(`${link}/images/${id}`)\n    .then(res => {\n      setDeletionData({\n        popUp: false,\n        id: ''\n      });\n      getImages();\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {});\n    console.log(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitleAdd, {\n      title: \"Images\",\n      link: \"/images/add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(ImagesBox, {\n      children: !loading && !error && state.map(id => /*#__PURE__*/_jsxDEV(ImageBox, {\n        children: [/*#__PURE__*/_jsxDEV(ImgBox, {\n          children: /*#__PURE__*/_jsxDEV(Img, {\n            src: `${link}/images/files/${id}`,\n            alt: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ImageData, {\n          className: \"data\",\n          children: [copied.text === id && /*#__PURE__*/_jsxDEV(CopiedMessage, {\n            children: copied.text === id && \"copied\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(ActionsBox, {\n            children: [/*#__PURE__*/_jsxDEV(CopyToClipboard, {\n              text: id,\n              onCopy: () => {\n                setCopied({\n                  copied: true,\n                  text: id\n                });\n                setTimeout(() => setCopied({\n                  copied: false,\n                  text: ''\n                }), 5000);\n              },\n              children: /*#__PURE__*/_jsxDEV(Copy, {\n                children: /*#__PURE__*/_jsxDEV(CopyIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Delete, {\n              onClick: () => setDeletionData({\n                popUp: true,\n                id: id\n              }),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), deletionData.popUp && /*#__PURE__*/_jsxDEV(DeletionBackground, {\n      children: /*#__PURE__*/_jsxDEV(DeletionPage, {\n        children: [/*#__PURE__*/_jsxDEV(DeletionImg, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${link}/images/files/${deletionData.id}`,\n            alt: \"deletion image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeletionText, {\n          children: \"Are you sure. you want to delete this image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionsBox, {\n          children: [/*#__PURE__*/_jsxDEV(Copy, {\n            onClick: () => setDeletionData({\n              popUp: false,\n              id: ''\n            }),\n            children: /*#__PURE__*/_jsxDEV(Arrow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Delete, {\n            onClick: () => {\n              deleteImage(deletionData.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImagesList, \"SWZ0C6db6x4qvW1hwDyvf67zQ3A=\");\n\n_c = ImagesList;\nexport default ImagesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesList\");","map":{"version":3,"sources":["F:/ibs-admin-front/ibs-school-admin/src/components/ImagesList/index.jsx"],"names":["React","useEffect","useState","axios","ActionsBox","Add","CopiedMessage","Copy","Delete","DeletionBackground","DeletionImg","DeletionPage","DeletionText","ImageBox","ImageData","ImageId","ImagesBox","Img","ImgBox","NavbarBox","PageTitle","CopyToClipboard","link","PageTitleAdd","Loading","ErrorBox","httpRequest","ImagesList","ids","state","setState","copied","setCopied","text","deletionData","setDeletionData","popUp","id","gettingProcess","setGettingProcess","loading","error","getImages","then","res","console","log","data","map","url","split","push","length","prevState","catch","err","deleteImage","finally","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,EACgBC,GADhB,EAEIC,aAFJ,EAGIC,IAHJ,EAIIC,MAJJ,EAIYC,kBAJZ,EAIgCC,WAJhC,EAI6CC,YAJ7C,EAI2DC,YAJ3D,EAKIC,QALJ,EAMIC,SANJ,EAOIC,OAPJ,EAQIC,SARJ,EASIC,GATJ,EAUIC,MAVJ,EAWIC,SAXJ,EAWeC,SAXf,QAYO,UAZP;AAaA,SAAQC,eAAR,QAA8B,yBAA9B,C,CAGA;;;;;;AAKA,SAAQC,IAAR,QAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,MAAIC,GAAG,GAAG,EAAV;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC;AAAC6B,IAAAA,MAAM,EAAE,KAAT;AAAgBE,IAAAA,IAAI,EAAE;AAAtB,GAAD,CAApC;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAAC;AAACkC,IAAAA,KAAK,EAAE,KAAR;AAAeC,IAAAA,EAAE,EAAE;AAAnB,GAAD,CAAhD;AAEA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCrC,QAAQ,CAAC;AAACsC,IAAAA,OAAO,EAAE,KAAV;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAAD,CAApD;AACA,QAAM;AAACD,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAmBH,cAAzB;;AACA,QAAMI,SAAS,GAAG,MAAM;AACpBH,IAAAA,iBAAiB,CAAC;AAACC,MAAAA,OAAO,EAAE,IAAV;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAD,CAAjB;AACAX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA3B,IAAAA,KAAK,CAACuB,WAAW,CAAC,cAAD,EAAiB,KAAjB,CAAZ,CAAL,CACI;AADJ,KAEKiB,IAFL,CAEUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAA,MAAAA,GAAG,CAACG,IAAJ,CAASC,GAAT,CAAaD,IAAI,IAAI;AACjB,cAAME,GAAG,GAAGF,IAAI,CAACE,GAAL,CAASC,KAAT,CAAe,GAAf,CAAZ;AACAtB,QAAAA,GAAG,CAACuB,IAAJ,CAASF,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAZ;AACAtB,QAAAA,QAAQ,CAACuB,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeJ,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAlB,CAAd,CAAR;AACH,OAJD;AAKAb,MAAAA,iBAAiB,CAAC;AAACC,QAAAA,OAAO,EAAE,KAAV;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAAD,CAAjB;AACH,KAVL,EAWKa,KAXL,CAWWC,GAAG,IAAI;AACVhB,MAAAA,iBAAiB,CAAC;AAACC,QAAAA,OAAO,EAAE,KAAV;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAAD,CAAjB;AACH,KAbL;AAcH,GAjBD;;AAkBAxC,EAAAA,SAAS,CAAC,MAAM;AACZyC,IAAAA,SAAS;AACTG,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAM2B,WAAW,GAAInB,EAAD,IAAQ;AACxBlC,IAAAA,KAAK,CAAE,UAASkC,EAAG,EAAd,EAAgB,QAAhB,CAAL,CACI;AADJ,KAEKM,IAFL,CAEUC,GAAG,IAAI;AACTT,MAAAA,eAAe,CAAC;AAACC,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,EAAE,EAAE;AAAnB,OAAD,CAAf;AACAK,MAAAA,SAAS;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KANL,EAOKU,KAPL,CAOWC,GAAG,IAAI;AACVV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACH,KATL,EAUKE,OAVL,CAUa,MAAM,CAEd,CAZL;AAaAZ,IAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ;AACH,GAfD;;AAiBA,sBACI;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE,QAArB;AAA+B,MAAA,IAAI,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKG,OAAO,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGKC,KAAK,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHd,eAII,QAAC,SAAD;AAAA,gBACM,CAACD,OAAD,IAAY,CAACC,KAAd,IACDZ,KAAK,CAACmB,GAAN,CAAUX,EAAE,iBACR,QAAC,QAAD;AAAA,gCACI,QAAC,MAAD;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,GAAG,EAAG,GAAEf,IAAK,iBAAgBe,EAAG,EAArC;AAAwC,YAAA,GAAG,EAAEA;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,SAAD;AAAW,UAAA,SAAS,EAAE,MAAtB;AAAA,qBACKN,MAAM,CAACE,IAAP,KAAgBI,EAAhB,iBAAsB,QAAC,aAAD;AAAA,sBAAgBN,MAAM,CAACE,IAAP,KAAgBI,EAAhB,IAAsB;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAD3B,eAEI,QAAC,UAAD;AAAA,oCACI,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAEA,EAAvB;AACiB,cAAA,MAAM,EACF,MAAM;AACFL,gBAAAA,SAAS,CAAC;AAACD,kBAAAA,MAAM,EAAE,IAAT;AAAeE,kBAAAA,IAAI,EAAEI;AAArB,iBAAD,CAAT;AACAqB,gBAAAA,UAAU,CACN,MAAM1B,SAAS,CAAC;AAACD,kBAAAA,MAAM,EAAE,KAAT;AAAgBE,kBAAAA,IAAI,EAAE;AAAtB,iBAAD,CADT,EACsC,IADtC,CAAV;AAGH,eAPtB;AAAA,qCASI,QAAC,IAAD;AAAA,uCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAcI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAME,eAAe,CAAC;AAACC,gBAAAA,KAAK,EAAE,IAAR;AAAcC,gBAAAA,EAAE,EAAEA;AAAlB,eAAD,CAAtC;AAAA,qCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAeA,EAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJJ,EAoCKH,YAAY,CAACE,KAAb,iBACD,QAAC,kBAAD;AAAA,6BACI,QAAC,YAAD;AAAA,gCACI,QAAC,WAAD;AAAA,iCACI;AAAK,YAAA,GAAG,EAAG,GAAEd,IAAK,iBAAgBY,YAAY,CAACG,EAAG,EAAlD;AAAqD,YAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,UAAD;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,OAAO,EAAE,MAAMF,eAAe,CAAC;AAACC,cAAAA,KAAK,EAAE,KAAR;AAAeC,cAAAA,EAAE,EAAE;AAAnB,aAAD,CAApC;AAAA,mCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAM;AACnBmB,cAAAA,WAAW,CAACtB,YAAY,CAACG,EAAd,CAAX;AACH,aAFD;AAAA,mCAGI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArCJ;AAAA,kBADJ;AA6DH,CAhHD;;GAAMV,U;;KAAAA,U;AAkHN,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport axios from \"axios\";\r\nimport {\r\n    ActionsBox, Add,\r\n    CopiedMessage,\r\n    Copy,\r\n    Delete, DeletionBackground, DeletionImg, DeletionPage, DeletionText,\r\n    ImageBox,\r\n    ImageData,\r\n    ImageId,\r\n    ImagesBox,\r\n    Img,\r\n    ImgBox,\r\n    NavbarBox, PageTitle\r\n} from \"./styles\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\n\r\n//icon\r\nimport {ReactComponent as CopyIcon} from \"../../assets/icons/copy.svg\"\r\nimport {ReactComponent as DeleteIcon} from \"../../assets/icons/bin.svg\"\r\nimport {ReactComponent as PlusIcon} from \"../../assets/icons/plus-img.svg\"\r\nimport {ReactComponent as Arrow} from \"../../assets/icons/arrow.svg\"\r\nimport {link} from \"../../baseLink/link\";\r\nimport PageTitleAdd from \"../PageTitleAdd\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst ImagesList = () => {\r\n\r\n    let ids = []\r\n    const [state, setState] = useState([])\r\n\r\n    const [copied, setCopied] = useState({copied: false, text: ''})\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, id: ''})\r\n\r\n    const [gettingProcess, setGettingProcess] = useState({loading: false, error: false})\r\n    const {loading, error} = gettingProcess\r\n    const getImages = () => {\r\n        setGettingProcess({loading: true, error: false})\r\n        setState([])\r\n        axios(httpRequest(\"images/files\", \"GET\"))\r\n            // .get(`${link}/images/files`)\r\n            .then(res => {\r\n                console.log(res)\r\n                res.data.map(data => {\r\n                    const url = data.url.split('/')\r\n                    ids.push(url[url.length - 1])\r\n                    setState(prevState => [...prevState, url[url.length - 1]])\r\n                })\r\n                setGettingProcess({loading: false, error: false})\r\n            })\r\n            .catch(err => {\r\n                setGettingProcess({loading: false, error: true})\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getImages()\r\n        console.log(state)\r\n    }, [])\r\n\r\n    const deleteImage = (id) => {\r\n        axios(`images/${id}`,\"DELETE\")\r\n            // .delete(`${link}/images/${id}`)\r\n            .then(res => {\r\n                setDeletionData({popUp: false, id: ''})\r\n                getImages()\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n\r\n            })\r\n        console.log(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitleAdd title={\"Images\"} link={\"/images/add\"}/>\r\n            {loading && <Loading/>}\r\n            {error && <ErrorBox/>}\r\n            <ImagesBox>\r\n                {(!loading && !error) &&\r\n                state.map(id => (\r\n                    <ImageBox key={id}>\r\n                        <ImgBox>\r\n                            <Img src={`${link}/images/files/${id}`} alt={id}/>\r\n                        </ImgBox>\r\n                        <ImageData className={\"data\"}>\r\n                            {copied.text === id && <CopiedMessage>{copied.text === id && \"copied\"}</CopiedMessage>}\r\n                            <ActionsBox>\r\n                                <CopyToClipboard text={id}\r\n                                                 onCopy={\r\n                                                     () => {\r\n                                                         setCopied({copied: true, text: id});\r\n                                                         setTimeout(\r\n                                                             () => setCopied({copied: false, text: ''}), 5000\r\n                                                         )\r\n                                                     }\r\n                                                 }>\r\n                                    <Copy>\r\n                                        <CopyIcon/>\r\n                                    </Copy>\r\n                                </CopyToClipboard>\r\n                                <Delete onClick={() => setDeletionData({popUp: true, id: id})}>\r\n                                    <DeleteIcon/>\r\n                                </Delete>\r\n                            </ActionsBox>\r\n                        </ImageData>\r\n                    </ImageBox>\r\n                ))}\r\n            </ImagesBox>\r\n\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionImg>\r\n                        <img src={`${link}/images/files/${deletionData.id}`} alt=\"deletion image\"/>\r\n                    </DeletionImg>\r\n                    <DeletionText>\r\n                        Are you sure. you want to delete this image\r\n                    </DeletionText>\r\n                    <ActionsBox>\r\n                        <Copy onClick={() => setDeletionData({popUp: false, id: ''})}>\r\n                            <Arrow/>\r\n                        </Copy>\r\n                        <Delete onClick={() => {\r\n                            deleteImage(deletionData.id)\r\n                        }}>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ImagesList"]},"metadata":{},"sourceType":"module"}