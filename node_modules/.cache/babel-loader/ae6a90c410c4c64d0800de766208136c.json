{"ast":null,"code":"var _jsxFileName = \"F:\\\\ibs-admin-front\\\\ibs-school-admin\\\\src\\\\pages\\\\Dashboard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CardBox, CardTitle, ChartBox, ChartNav, ChartNavbarBox, ChartNavs, ChartTitle, DashboardPageWrapper, Data, DisplayFlex, Icon, Main, Numbers, Secondary, TopCardsBox, TopCardsWrapper } from \"./styles\";\nimport { ReactComponent as UpDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/up-down.svg\";\nimport { Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis } from \"recharts\";\nimport useWindowDimensions from \"../../hooks/useWindowDimentions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDashboard } from \"../../redux/modules/dashboard/dashboardAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  var _document$getElementB;\n\n  const dispatch = useDispatch(); // function getRandomColor() {\n  //     let letters = '0123456789ABCDEF';\n  //     let color = '#';\n  //     for (let i = 0; i < 6; i++) {\n  //         color += letters[Math.floor(Math.random() * 16)];\n  //     }\n  //     return color;\n  // }\n\n  const {\n    width,\n    height\n  } = useWindowDimensions(); // const cardData = [\n  //     {\n  //         all: 650,\n  //         percent: 20,\n  //         name: \"Total number of students\"\n  //     }, {\n  //         all: 5,\n  //         percent: -10,\n  //         name: \" Course stopped students\"\n  //     }, {\n  //         all: 20,\n  //         percent: 10,\n  //         name: \"Course graduated students\"\n  //     }, {\n  //         all: 50,\n  //         percent: -7,\n  //         name: \"New students for academy\"\n  //     },\n  // ]\n  // const courseStudentData = [\n  //     {\n  //         categoryName: \"programming\",\n  //         numberOfStudents: 132,\n  //         courses: [\n  //             {\n  //                 courseName: \"frontend\",\n  //                 numberOfStudent: 13,\n  //                 color: \"var(--green)\"\n  //             }, {\n  //                 courseName: \"backend\",\n  //                 numberOfStudent: 46,\n  //                 color: \"var(--red)\"\n  //             }, {\n  //                 courseName: \"bootcamp\",\n  //                 numberOfStudent: 23,\n  //                 color: \"var(--grey)\"\n  //             }, {\n  //                 courseName: \"mobile\",\n  //                 numberOfStudent: 50,\n  //                 color: \"var(--light-blue)\"\n  //             },\n  //         ]\n  //     },\n  //     {\n  //         categoryName: \"business\",\n  //         numberOfStudents: 94,\n  //         courses: [\n  //             {\n  //                 courseName: \"targeting\",\n  //                 numberOfStudent: 33,\n  //                 color: \"var(--green)\"\n  //             }, {\n  //                 courseName: \"smm\",\n  //                 numberOfStudent: 26,\n  //                 color: \"var(--red)\"\n  //             }, {\n  //                 courseName: \"marketing\",\n  //                 numberOfStudent: 35,\n  //                 color: \"var(--grey)\"\n  //             }\n  //             // , {\n  //             //     courseName: \"mobile\",\n  //             //     numberOfStudent: 50,\n  //             //     color:\"var(--light-blue)\"\n  //             // },\n  //         ]\n  //     },\n  //     {\n  //         categoryName: \"language\",\n  //         numberOfStudents: 100,\n  //         courses: [\n  //             {\n  //                 courseName: \"english\",\n  //                 numberOfStudent: 25,\n  //                 color: \"var(--green)\"\n  //             }, {\n  //                 courseName: \"ielts\",\n  //                 numberOfStudent: 45,\n  //                 color: \"var(--red)\"\n  //             }, {\n  //                 courseName: \"arabic\",\n  //                 numberOfStudent: 30,\n  //                 color: \"var(--grey)\"\n  //             }\n  //             // , {\n  //             //     courseName: \"mobile\",\n  //             //     numberOfStudent: 26,\n  //             //     color:\"var(--light-blue)\"\n  //             // },\n  //         ]\n  //     },\n  // ]\n  // const data01 = [\n  //     {\n  //         \"name\": \"Group A\",\n  //         \"value\": 400\n  //     },\n  //     {\n  //         \"name\": \"Group B\",\n  //         \"value\": 300\n  //     },\n  //     {\n  //         \"name\": \"Group C\",\n  //         \"value\": 300\n  //     },\n  //     {\n  //         \"name\": \"Group D\",\n  //         \"value\": 200\n  //     },\n  //     {\n  //         \"name\": \"Group E\",\n  //         \"value\": 278\n  //     },\n  //     {\n  //         \"name\": \"Group F\",\n  //         \"value\": 189\n  //     }\n  // ];\n  // const data02 = [\n  //     {\n  //         \"name\": \"Group A\",\n  //         \"value\": 2400\n  //     },\n  //     {\n  //         \"name\": \"Group B\",\n  //         \"value\": 4567\n  //     },\n  //     {\n  //         \"name\": \"Group C\",\n  //         \"value\": 1398\n  //     },\n  //     {\n  //         \"name\": \"Group D\",\n  //         \"value\": 9800\n  //     },\n  //     {\n  //         \"name\": \"Group E\",\n  //         \"value\": 3908\n  //     },\n  //     {\n  //         \"name\": \"Group F\",\n  //         \"value\": 4800\n  //     }\n  // ];\n  //\n  // const data = [\n  //     {\n  //         \"name\": \"Page A\",\n  //         \"uv\": 4000,\n  //         \"pv\": 2400,\n  //         \"amt\": 2400\n  //     },\n  //     {\n  //         \"name\": \"Page B\",\n  //         \"uv\": 3000,\n  //         \"pv\": 1398,\n  //         \"amt\": 2210\n  //     },\n  //     {\n  //         \"name\": \"Page C\",\n  //         \"uv\": 2000,\n  //         \"pv\": 9800,\n  //         \"amt\": 2290\n  //     },\n  //     {\n  //         \"name\": \"Page D\",\n  //         \"uv\": 2780,\n  //         \"pv\": 3908,\n  //         \"amt\": 2000\n  //     },\n  //     {\n  //         \"name\": \"Page E\",\n  //         \"uv\": 1890,\n  //         \"pv\": 4800,\n  //         \"amt\": 2181\n  //     },\n  //     {\n  //         \"name\": \"Page F\",\n  //         \"uv\": 2390,\n  //         \"pv\": 3800,\n  //         \"amt\": 2500\n  //     },\n  //     {\n  //         \"name\": \"Page G\",\n  //         \"uv\": 3490,\n  //         \"pv\": 4300,\n  //         \"amt\": 2100\n  //     }\n  // ]\n\n  const category = {\n    programming: {\n      total: 143,\n      data: [{\n        \"name\": \"frontend\",\n        \"uv\": 4000\n      }, {\n        \"name\": \"backend\",\n        \"uv\": 3000\n      }, {\n        \"name\": \"mobile\",\n        \"uv\": 2000\n      }, {\n        \"name\": \"bootcamp\",\n        \"uv\": 2780\n      }]\n    },\n    language: {\n      total: 143,\n      data: [{\n        \"name\": \"arabic\",\n        \"uv\": 4000\n      }, {\n        \"name\": \"english\",\n        \"uv\": 3000\n      }, {\n        \"name\": \"ielts\",\n        \"uv\": 2000\n      }]\n    },\n    design: {\n      total: 143,\n      data: [{\n        \"name\": \"ui & ux design\",\n        \"uv\": 4000\n      }, {\n        \"name\": \"graphic design\",\n        \"uv\": 3000\n      }]\n    },\n    business: {\n      total: 143,\n      data: [{\n        \"name\": \"smm\",\n        \"uv\": 3000\n      }, {\n        \"name\": \"targeting\",\n        \"uv\": 2000\n      }, {\n        \"name\": \"marketing\",\n        \"uv\": 2780\n      }]\n    }\n  }; // const categories = [\n  //     {\n  //         name: \"programming\",\n  //         data: category.programming\n  //     },\n  //     {\n  //         name: \"business\",\n  //         data: category.business\n  //     },\n  //     {\n  //         name: \"design\",\n  //         data: category.design\n  //     },\n  //     {\n  //         name: \"language\",\n  //         data: category.language\n  //     }\n  // ]\n\n  const getDashboardData = () => {\n    dispatch(getDashboard());\n  };\n\n  const dashboardData = useSelector(state => state.dashboardReducer);\n  const {\n    loading,\n    error,\n    dashboard\n  } = dashboardData;\n  const [courseData, setCourseData] = useState([]);\n  const courseCategories = dashboard.categories;\n  const [selectedCategory, setSelectedCategory] = useState({});\n  useEffect(() => {\n    getDashboardData();\n    setTimeout(() => setSelectedCategory({\n      id: 1,\n      categoryName: \"programming\"\n    }), 1000); // getDashboardDataPromise.then(()=>setSelectedCategory(dashboard.categories[0]))\n  }, []);\n\n  const barChartData = () => {\n    setCourseData([]);\n    dashboard === null || dashboard === void 0 ? void 0 : dashboard.byCategory.map(({\n      courseType,\n      numberOfStudent\n    }) => {\n      if (courseType.category.id === selectedCategory.id) {\n        setCourseData(prevState => [...prevState, {\n          name: courseType.courseName,\n          uv: numberOfStudent\n        }]);\n      } // console.log(\"byCategory\", value)\n\n    }); // courseType.map((courseType, index) => {\n    //     if (courseType.category.id === selectedCategory.id) {\n    //         Object?.entries(dashboard?.byCategory).map((item) => {\n    //             console.log(\"item\", item)\n    //             const courseTypeId = parseInt(item[0]);\n    //             const numberOfStudent = item[1];\n    //\n    //             if (courseType.id === courseTypeId) {\n    //                 setCourseData((prevState) => ([...prevState, {name: courseType.courseName, uv: numberOfStudent}]))\n    //                 console.log(\"course data\",courseData)\n    //             } else {\n    //                 setCourseData((prevState) => ([...prevState, {name: courseType.courseName, uv: numberOfStudent}]))\n    //                 console.log(\"else course data\",courseData)\n    //\n    //             }\n    //         })\n    //     }\n    // })\n    // courseCategories?.map((categoryValue, index) => {\n    // dashboard.byCategory\n    // courseType.map((typeValue, index) => {\n    //     // typeValue.id\n    //     typeValue.category.id = selectedCategory.id\n    //     // categoryName\n    //     // setCourseData((prevState) => ({...prevState, [value?.id]: value?.categoryName}))\n    // })\n    // })\n    // console.log(dat)\n    // console.log(d)\n  };\n\n  useEffect(() => {\n    !loading && !error && dashboard.byCategory !== undefined && barChartData();\n  }, [selectedCategory]); // console.log(courseType)\n  // console.log(\"selected category\",selectedCategory)\n  // console.log(\"category\", dashboard.categories[0])\n\n  return /*#__PURE__*/_jsxDEV(DashboardPageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(TopCardsWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TopCardsBox, {\n        children: [/*#__PURE__*/_jsxDEV(CardBox, {\n          children: [/*#__PURE__*/_jsxDEV(Data, {\n            children: [/*#__PURE__*/_jsxDEV(Icon // color={percent > 0}\n            , {\n              children: /*#__PURE__*/_jsxDEV(UpDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n              children: [/*#__PURE__*/_jsxDEV(Main, {\n                children: dashboard.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Secondary // color={percent > 0}\n              , {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Total number of students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardBox, {\n          children: [/*#__PURE__*/_jsxDEV(Data, {\n            children: [/*#__PURE__*/_jsxDEV(Icon // color={percent > 0}\n            , {\n              children: /*#__PURE__*/_jsxDEV(UpDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n              children: [/*#__PURE__*/_jsxDEV(Main, {\n                children: dashboard.stopped\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Secondary // color={percent > 0}\n              , {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Course stopped students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardBox, {\n          children: [/*#__PURE__*/_jsxDEV(Data, {\n            children: [/*#__PURE__*/_jsxDEV(Icon // color={percent > 0}\n            , {\n              children: /*#__PURE__*/_jsxDEV(UpDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n              children: [/*#__PURE__*/_jsxDEV(Main, {\n                children: dashboard.graduated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Secondary // color={percent > 0}\n              , {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Course graduated students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardBox, {\n          children: [/*#__PURE__*/_jsxDEV(Data, {\n            children: [/*#__PURE__*/_jsxDEV(Icon // color={percent > 0}\n            , {\n              children: /*#__PURE__*/_jsxDEV(UpDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n              children: [/*#__PURE__*/_jsxDEV(Main, {\n                children: dashboard.freshman\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Secondary // color={percent > 0}\n              , {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"New students for academy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayFlex, {\n      children: /*#__PURE__*/_jsxDEV(ChartBox, {\n        width: \"65.5%\",\n        id: \"students-chart\",\n        children: [/*#__PURE__*/_jsxDEV(ChartNavbarBox, {\n          children: /*#__PURE__*/_jsxDEV(ChartNavs, {\n            children: courseCategories === null || courseCategories === void 0 ? void 0 : courseCategories.map(value => /*#__PURE__*/_jsxDEV(ChartNav, {\n              clicked: selectedCategory.id === value.id,\n              onClick: () => {\n                setSelectedCategory(value); // barCharData()\n              },\n              children: value.categoryName\n            }, value.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChartTitle, {\n          children: [\"Students of \", selectedCategory.categoryName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n          width: ((_document$getElementB = document.getElementById(\"students-chart\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.clientWidth) - 20 // width > 1150 ? 630 : width > 900 ? 780 : width > 700 ? 580 : width > 600 ? 480 : 300\n          ,\n          height: 200,\n          data: // selectedCategory.data.data\n          courseData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            legendType: \"none\",\n            dataKey: \"uv\",\n            fill: \"#ffbf2b\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"G9gC++qkNrWFqVtww0X/QYsPqeg=\", false, function () {\n  return [useDispatch, useWindowDimensions, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["F:/ibs-admin-front/ibs-school-admin/src/pages/Dashboard/index.jsx"],"names":["React","useEffect","useState","CardBox","CardTitle","ChartBox","ChartNav","ChartNavbarBox","ChartNavs","ChartTitle","DashboardPageWrapper","Data","DisplayFlex","Icon","Main","Numbers","Secondary","TopCardsBox","TopCardsWrapper","Bar","BarChart","CartesianGrid","Legend","Tooltip","XAxis","YAxis","useWindowDimensions","useDispatch","useSelector","getDashboard","Dashboard","dispatch","width","height","category","programming","total","data","language","design","business","getDashboardData","dashboardData","state","dashboardReducer","loading","error","dashboard","courseData","setCourseData","courseCategories","categories","selectedCategory","setSelectedCategory","setTimeout","id","categoryName","barChartData","byCategory","map","courseType","numberOfStudent","prevState","name","courseName","uv","undefined","stopped","graduated","freshman","value","document","getElementById","clientWidth"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport {\r\n    CardBox,\r\n    CardTitle,\r\n    ChartBox,\r\n    ChartNav,\r\n    ChartNavbarBox,\r\n    ChartNavs,\r\n    ChartTitle,\r\n    DashboardPageWrapper,\r\n    Data,\r\n    DisplayFlex,\r\n    Icon,\r\n    Main,\r\n    Numbers,\r\n    Secondary,\r\n    TopCardsBox,\r\n    TopCardsWrapper\r\n} from \"./styles\";\r\nimport {ReactComponent as UpDown} from \"../../assets/icons/up-down.svg\"\r\nimport {Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport useWindowDimensions from \"../../hooks/useWindowDimentions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getDashboard} from \"../../redux/modules/dashboard/dashboardAction\";\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // function getRandomColor() {\r\n    //     let letters = '0123456789ABCDEF';\r\n    //     let color = '#';\r\n    //     for (let i = 0; i < 6; i++) {\r\n    //         color += letters[Math.floor(Math.random() * 16)];\r\n    //     }\r\n    //     return color;\r\n    // }\r\n\r\n    const {width, height} = useWindowDimensions()\r\n\r\n    // const cardData = [\r\n    //     {\r\n    //         all: 650,\r\n    //         percent: 20,\r\n    //         name: \"Total number of students\"\r\n    //     }, {\r\n    //         all: 5,\r\n    //         percent: -10,\r\n    //         name: \" Course stopped students\"\r\n    //     }, {\r\n    //         all: 20,\r\n    //         percent: 10,\r\n    //         name: \"Course graduated students\"\r\n    //     }, {\r\n    //         all: 50,\r\n    //         percent: -7,\r\n    //         name: \"New students for academy\"\r\n    //     },\r\n    // ]\r\n\r\n    // const courseStudentData = [\r\n    //     {\r\n    //         categoryName: \"programming\",\r\n    //         numberOfStudents: 132,\r\n    //         courses: [\r\n    //             {\r\n    //                 courseName: \"frontend\",\r\n    //                 numberOfStudent: 13,\r\n    //                 color: \"var(--green)\"\r\n    //             }, {\r\n    //                 courseName: \"backend\",\r\n    //                 numberOfStudent: 46,\r\n    //                 color: \"var(--red)\"\r\n    //             }, {\r\n    //                 courseName: \"bootcamp\",\r\n    //                 numberOfStudent: 23,\r\n    //                 color: \"var(--grey)\"\r\n    //             }, {\r\n    //                 courseName: \"mobile\",\r\n    //                 numberOfStudent: 50,\r\n    //                 color: \"var(--light-blue)\"\r\n    //             },\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         categoryName: \"business\",\r\n    //         numberOfStudents: 94,\r\n    //         courses: [\r\n    //             {\r\n    //                 courseName: \"targeting\",\r\n    //                 numberOfStudent: 33,\r\n    //                 color: \"var(--green)\"\r\n    //             }, {\r\n    //                 courseName: \"smm\",\r\n    //                 numberOfStudent: 26,\r\n    //                 color: \"var(--red)\"\r\n    //             }, {\r\n    //                 courseName: \"marketing\",\r\n    //                 numberOfStudent: 35,\r\n    //                 color: \"var(--grey)\"\r\n    //             }\r\n    //             // , {\r\n    //             //     courseName: \"mobile\",\r\n    //             //     numberOfStudent: 50,\r\n    //             //     color:\"var(--light-blue)\"\r\n    //             // },\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         categoryName: \"language\",\r\n    //         numberOfStudents: 100,\r\n    //         courses: [\r\n    //             {\r\n    //                 courseName: \"english\",\r\n    //                 numberOfStudent: 25,\r\n    //                 color: \"var(--green)\"\r\n    //             }, {\r\n    //                 courseName: \"ielts\",\r\n    //                 numberOfStudent: 45,\r\n    //                 color: \"var(--red)\"\r\n    //             }, {\r\n    //                 courseName: \"arabic\",\r\n    //                 numberOfStudent: 30,\r\n    //                 color: \"var(--grey)\"\r\n    //             }\r\n    //             // , {\r\n    //             //     courseName: \"mobile\",\r\n    //             //     numberOfStudent: 26,\r\n    //             //     color:\"var(--light-blue)\"\r\n    //             // },\r\n    //         ]\r\n    //     },\r\n    // ]\r\n\r\n    // const data01 = [\r\n    //     {\r\n    //         \"name\": \"Group A\",\r\n    //         \"value\": 400\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group B\",\r\n    //         \"value\": 300\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group C\",\r\n    //         \"value\": 300\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group D\",\r\n    //         \"value\": 200\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group E\",\r\n    //         \"value\": 278\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group F\",\r\n    //         \"value\": 189\r\n    //     }\r\n    // ];\r\n    // const data02 = [\r\n    //     {\r\n    //         \"name\": \"Group A\",\r\n    //         \"value\": 2400\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group B\",\r\n    //         \"value\": 4567\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group C\",\r\n    //         \"value\": 1398\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group D\",\r\n    //         \"value\": 9800\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group E\",\r\n    //         \"value\": 3908\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group F\",\r\n    //         \"value\": 4800\r\n    //     }\r\n    // ];\r\n    //\r\n    // const data = [\r\n    //     {\r\n    //         \"name\": \"Page A\",\r\n    //         \"uv\": 4000,\r\n    //         \"pv\": 2400,\r\n    //         \"amt\": 2400\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page B\",\r\n    //         \"uv\": 3000,\r\n    //         \"pv\": 1398,\r\n    //         \"amt\": 2210\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page C\",\r\n    //         \"uv\": 2000,\r\n    //         \"pv\": 9800,\r\n    //         \"amt\": 2290\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page D\",\r\n    //         \"uv\": 2780,\r\n    //         \"pv\": 3908,\r\n    //         \"amt\": 2000\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page E\",\r\n    //         \"uv\": 1890,\r\n    //         \"pv\": 4800,\r\n    //         \"amt\": 2181\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page F\",\r\n    //         \"uv\": 2390,\r\n    //         \"pv\": 3800,\r\n    //         \"amt\": 2500\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page G\",\r\n    //         \"uv\": 3490,\r\n    //         \"pv\": 4300,\r\n    //         \"amt\": 2100\r\n    //     }\r\n    // ]\r\n    const category = {\r\n        programming: {\r\n            total: 143,\r\n            data: [\r\n                {\r\n                    \"name\": \"frontend\",\r\n                    \"uv\": 4000,\r\n                },\r\n                {\r\n                    \"name\": \"backend\",\r\n                    \"uv\": 3000,\r\n                },\r\n                {\r\n                    \"name\": \"mobile\",\r\n                    \"uv\": 2000,\r\n                },\r\n                {\r\n                    \"name\": \"bootcamp\",\r\n                    \"uv\": 2780,\r\n                }\r\n            ]\r\n        },\r\n        language: {\r\n            total: 143,\r\n            data: [\r\n                {\r\n                    \"name\": \"arabic\",\r\n                    \"uv\": 4000,\r\n                },\r\n                {\r\n                    \"name\": \"english\",\r\n                    \"uv\": 3000,\r\n                },\r\n                {\r\n                    \"name\": \"ielts\",\r\n                    \"uv\": 2000,\r\n                }\r\n            ]\r\n        },\r\n        design: {\r\n            total: 143,\r\n            data: [\r\n                {\r\n                    \"name\": \"ui & ux design\",\r\n                    \"uv\": 4000,\r\n                },\r\n                {\r\n                    \"name\": \"graphic design\",\r\n                    \"uv\": 3000,\r\n                }\r\n            ]\r\n        },\r\n        business: {\r\n            total: 143,\r\n            data: [\r\n                {\r\n                    \"name\": \"smm\",\r\n                    \"uv\": 3000,\r\n                },\r\n                {\r\n                    \"name\": \"targeting\",\r\n                    \"uv\": 2000,\r\n                },\r\n                {\r\n                    \"name\": \"marketing\",\r\n                    \"uv\": 2780,\r\n                }\r\n            ]\r\n        },\r\n    }\r\n\r\n    // const categories = [\r\n    //     {\r\n    //         name: \"programming\",\r\n    //         data: category.programming\r\n    //     },\r\n    //     {\r\n    //         name: \"business\",\r\n    //         data: category.business\r\n    //     },\r\n    //     {\r\n    //         name: \"design\",\r\n    //         data: category.design\r\n    //     },\r\n    //     {\r\n    //         name: \"language\",\r\n    //         data: category.language\r\n    //     }\r\n    // ]\r\n\r\n\r\n    const getDashboardData = () => {\r\n        dispatch(getDashboard())\r\n    }\r\n\r\n    const dashboardData = useSelector(state => state.dashboardReducer)\r\n\r\n    const {loading, error, dashboard} = dashboardData\r\n\r\n    const [courseData, setCourseData] = useState([])\r\n\r\n    const courseCategories = dashboard.categories;\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState({})\r\n\r\n    useEffect(() => {\r\n        getDashboardData();\r\n        setTimeout(() => setSelectedCategory({\r\n            id: 1,\r\n            categoryName: \"programming\"\r\n        }), 1000)\r\n        // getDashboardDataPromise.then(()=>setSelectedCategory(dashboard.categories[0]))\r\n    }, [])\r\n\r\n    const barChartData = () => {\r\n        setCourseData([])\r\n\r\n        dashboard?.byCategory.map(({courseType, numberOfStudent}) => {\r\n            if (courseType.category.id === selectedCategory.id) {\r\n                setCourseData((prevState) => ([...prevState, {name: courseType.courseName, uv: numberOfStudent}]))\r\n            }\r\n            // console.log(\"byCategory\", value)\r\n        })\r\n\r\n        // courseType.map((courseType, index) => {\r\n        //     if (courseType.category.id === selectedCategory.id) {\r\n        //         Object?.entries(dashboard?.byCategory).map((item) => {\r\n        //             console.log(\"item\", item)\r\n        //             const courseTypeId = parseInt(item[0]);\r\n        //             const numberOfStudent = item[1];\r\n        //\r\n        //             if (courseType.id === courseTypeId) {\r\n        //                 setCourseData((prevState) => ([...prevState, {name: courseType.courseName, uv: numberOfStudent}]))\r\n        //                 console.log(\"course data\",courseData)\r\n        //             } else {\r\n        //                 setCourseData((prevState) => ([...prevState, {name: courseType.courseName, uv: numberOfStudent}]))\r\n        //                 console.log(\"else course data\",courseData)\r\n        //\r\n        //             }\r\n        //         })\r\n        //     }\r\n        // })\r\n\r\n\r\n        // courseCategories?.map((categoryValue, index) => {\r\n        // dashboard.byCategory\r\n        // courseType.map((typeValue, index) => {\r\n        //     // typeValue.id\r\n        //     typeValue.category.id = selectedCategory.id\r\n        //     // categoryName\r\n        //     // setCourseData((prevState) => ({...prevState, [value?.id]: value?.categoryName}))\r\n        // })\r\n        // })\r\n\r\n        // console.log(dat)\r\n        // console.log(d)\r\n    }\r\n\r\n    useEffect(() => {\r\n        (!loading && !error && dashboard.byCategory !== undefined) &&\r\n        barChartData()\r\n    }, [selectedCategory])\r\n\r\n    // console.log(courseType)\r\n    // console.log(\"selected category\",selectedCategory)\r\n    // console.log(\"category\", dashboard.categories[0])\r\n\r\n\r\n    return (\r\n        <DashboardPageWrapper>\r\n            <TopCardsWrapper>\r\n                <TopCardsBox>\r\n                    {/*{cardData.map(({all, percent, name}, index) =>*/}\r\n                    <CardBox>\r\n                        <Data>\r\n                            <Icon\r\n                                // color={percent > 0}\r\n                            >\r\n                                <UpDown/>\r\n                            </Icon>\r\n                            <Numbers>\r\n                                <Main>\r\n                                    {dashboard.total}\r\n                                </Main>\r\n                                <Secondary\r\n                                    // color={percent > 0}\r\n                                >\r\n                                    {/*{percent > 0 ? \"+\" : \"\"}{percent}%*/}\r\n                                </Secondary>\r\n                            </Numbers>\r\n                        </Data>\r\n                        <CardTitle>Total number of students</CardTitle>\r\n                    </CardBox>\r\n                    <CardBox>\r\n                        <Data>\r\n                            <Icon\r\n                                // color={percent > 0}\r\n                            >\r\n                                <UpDown/>\r\n                            </Icon>\r\n                            <Numbers>\r\n                                <Main>\r\n                                    {dashboard.stopped}\r\n                                </Main>\r\n                                <Secondary\r\n                                    // color={percent > 0}\r\n                                >\r\n                                    {/*{percent > 0 ? \"+\" : \"\"}{percent}%*/}\r\n                                </Secondary>\r\n                            </Numbers>\r\n                        </Data>\r\n                        <CardTitle>Course stopped students</CardTitle>\r\n                    </CardBox>\r\n                    <CardBox>\r\n                        <Data>\r\n                            <Icon\r\n                                // color={percent > 0}\r\n                            >\r\n                                <UpDown/>\r\n                            </Icon>\r\n                            <Numbers>\r\n                                <Main>\r\n                                    {dashboard.graduated}\r\n                                </Main>\r\n                                <Secondary\r\n                                    // color={percent > 0}\r\n                                >\r\n                                    {/*{percent > 0 ? \"+\" : \"\"}{percent}%*/}\r\n                                </Secondary>\r\n                            </Numbers>\r\n                        </Data>\r\n                        <CardTitle>Course graduated students</CardTitle>\r\n                    </CardBox>\r\n                    <CardBox>\r\n                        <Data>\r\n                            <Icon\r\n                                // color={percent > 0}\r\n                            >\r\n                                <UpDown/>\r\n                            </Icon>\r\n                            <Numbers>\r\n                                <Main>\r\n                                    {dashboard.freshman}\r\n                                </Main>\r\n                                <Secondary\r\n                                    // color={percent > 0}\r\n                                >\r\n                                    {/*{percent > 0 ? \"+\" : \"\"}{percent}%*/}\r\n                                </Secondary>\r\n                            </Numbers>\r\n                        </Data>\r\n                        <CardTitle>New students for academy</CardTitle>\r\n                    </CardBox>\r\n                    {/*)}*/}\r\n\r\n                </TopCardsBox>\r\n            </TopCardsWrapper>\r\n            <DisplayFlex>\r\n\r\n                {/*<CardStudentNumber>*/}\r\n                {/*    {courseStudentData.map(({categoryName, numberOfStudents, courses}) =>*/}\r\n                {/*        <>*/}\r\n                {/*            <Category>{categoryName} <small>{numberOfStudents}</small></Category>*/}\r\n                {/*            <Line>*/}\r\n                {/*                {courses.map(({courseName, numberOfStudent, color}) =>*/}\r\n                {/*                    <InsideLine width={(numberOfStudent / numberOfStudents * 100) + \"%\"}*/}\r\n                {/*                                color={getRandomColor}>*/}\r\n                {/*                        <CourseNumber className={\"course\"}>*/}\r\n                {/*                            <p>*/}\r\n                {/*                                {courseName}*/}\r\n                {/*                            </p>*/}\r\n                {/*                            <p>*/}\r\n                {/*                                {numberOfStudent}*/}\r\n                {/*                            </p>*/}\r\n                {/*                        </CourseNumber>*/}\r\n                {/*                    </InsideLine>*/}\r\n                {/*                )}*/}\r\n                {/*            </Line>*/}\r\n                {/*        </>*/}\r\n                {/*    )}*/}\r\n                {/*</CardStudentNumber>*/}\r\n                <ChartBox width={\"65.5%\"} id={\"students-chart\"}>\r\n                    <ChartNavbarBox>\r\n                        <ChartNavs>\r\n                            {courseCategories?.map(((value) =>\r\n                                    <ChartNav key={value.id} clicked={selectedCategory.id === value.id}\r\n                                              onClick={() => {\r\n                                                  setSelectedCategory(value);\r\n                                                  // barCharData()\r\n                                              }}>\r\n                                        {value.categoryName}\r\n                                    </ChartNav>\r\n                            ))}\r\n                        </ChartNavs>\r\n                    </ChartNavbarBox>\r\n\r\n\r\n                    <ChartTitle>Students of {selectedCategory.categoryName}</ChartTitle>\r\n                    <BarChart\r\n                        width={\r\n                            (document.getElementById(\"students-chart\")?.clientWidth) - 20\r\n                            // width > 1150 ? 630 : width > 900 ? 780 : width > 700 ? 580 : width > 600 ? 480 : 300\r\n                        }\r\n                        height={200}\r\n                        data={\r\n                            // selectedCategory.data.data\r\n                            courseData\r\n                        }\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                        <XAxis dataKey=\"name\"/>\r\n                        <YAxis/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        {/*<Bar dataKey=\"pv\" fill=\"#8884d8\"/>*/}\r\n                        <Bar legendType={\"none\"} dataKey=\"uv\" fill=\"#ffbf2b\"/>\r\n                    </BarChart>\r\n                </ChartBox>\r\n                {/*<ChartBox pieChart>*/}\r\n                {/*    <Center>*/}\r\n                {/*        <PieChart width={250} height={250}>*/}\r\n                {/*            <Pie*/}\r\n                {/*                dataKey=\"value\"*/}\r\n                {/*                isAnimationActive={false}*/}\r\n                {/*                data={data01}*/}\r\n                {/*                cx=\"50%\"*/}\r\n                {/*                cy=\"50%\"*/}\r\n                {/*                outerRadius={60}*/}\r\n                {/*                fill=\"#ffbf4b\"*/}\r\n                {/*                label={{color: \"black\"}}*/}\r\n                {/*            />*/}\r\n                {/*            <Pie dataKey=\"value\" data={data02} cx={400} cy={200} innerRadius={30} outerRadius={80}*/}\r\n                {/*                 fill=\"#82ca9d\"/>*/}\r\n                {/*            <Tooltip/>*/}\r\n                {/*            <LabelList/>*/}\r\n                {/*        </PieChart>*/}\r\n                {/*    </Center>*/}\r\n\r\n                {/*</ChartBox>*/}\r\n            </DisplayFlex>\r\n\r\n        </DashboardPageWrapper>\r\n    )\r\n}\r\n\r\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}