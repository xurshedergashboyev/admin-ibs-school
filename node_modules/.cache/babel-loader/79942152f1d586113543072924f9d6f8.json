{"ast":null,"code":"var _jsxFileName = \"F:\\\\ibs-admin-front\\\\ibs-school-admin\\\\src\\\\components\\\\CourseDurationCard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Circle, CourseDurationBox, CourseMonthBox, CourseName, Date, Icon, PaymentDay, StopFinishBox, StopOrGraduate } from \"./styles\";\nimport { ReactComponent as Stop } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/stop.svg\";\nimport { ReactComponent as Finish } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/finish.svg\";\nimport { ReactComponent as Column } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/column.svg\";\nimport { whichMonth } from \"../../util/whichMonth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CourseDurationCard = ({\n  setPaymentPopUp,\n  payments,\n  scheduledCourse,\n  process\n}) => {\n  _s();\n\n  var _scheduledCourse$days;\n\n  const [toggle, setToggle] = useState(false);\n\n  const stopCourse = () => {};\n\n  const finishCourse = () => {};\n\n  const makeDate = date => {\n    const dateArray = date.split(\"-\");\n    const day = dateArray[2];\n    const month = whichMonth(dateArray[1]);\n    return `${day} ${month}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CourseMonthBox, {\n      children: [/*#__PURE__*/_jsxDEV(CourseName, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setToggle(!toggle),\n          children: `${scheduledCourse.type.courseName} | ${scheduledCourse.type.category.categoryName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), toggle && /*#__PURE__*/_jsxDEV(StopFinishBox, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            onClick: () => stopCourse(),\n            children: /*#__PURE__*/_jsxDEV(Stop, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            onClick: () => finishCourse(),\n            children: /*#__PURE__*/_jsxDEV(Finish, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: scheduledCourse.format.formatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CourseDurationBox, {\n        children: scheduledCourse === null || scheduledCourse === void 0 ? void 0 : (_scheduledCourse$days = scheduledCourse.days) === null || _scheduledCourse$days === void 0 ? void 0 : _scheduledCourse$days.map(({\n          id,\n          day\n        }) => {\n          var _scheduledCourse$days2;\n\n          let active = false;\n          payments === null || payments === void 0 ? void 0 : payments.map(props => {\n            if (props.scheduledCourse.id === scheduledCourse.id) {\n              if (props.coursePaymentDay.id === id) {\n                active = true;\n              }\n            }\n          });\n          return /*#__PURE__*/_jsxDEV(PaymentDay, {\n            active: active,\n            onClick: () => {\n              !active && setPaymentPopUp({\n                popUp: true,\n                data: {\n                  scheduledCourse,\n                  days: {\n                    id,\n                    day\n                  }\n                }\n              });\n            },\n            width: 100 / (scheduledCourse === null || scheduledCourse === void 0 ? void 0 : (_scheduledCourse$days2 = scheduledCourse.days) === null || _scheduledCourse$days2 === void 0 ? void 0 : _scheduledCourse$days2.length),\n            children: [/*#__PURE__*/_jsxDEV(Circle, {\n              active: active,\n              children: /*#__PURE__*/_jsxDEV(Column, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Date, {\n              children: makeDate(day)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), process !== \"learning\" && /*#__PURE__*/_jsxDEV(StopOrGraduate, {\n        process: process,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: process\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CourseDurationCard, \"KMOoc8w16Lq5ZnA3xKzfamBycFo=\");\n\n_c = CourseDurationCard;\nexport default CourseDurationCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseDurationCard\");","map":{"version":3,"sources":["F:/ibs-admin-front/ibs-school-admin/src/components/CourseDurationCard/index.jsx"],"names":["React","useState","Circle","CourseDurationBox","CourseMonthBox","CourseName","Date","Icon","PaymentDay","StopFinishBox","StopOrGraduate","whichMonth","CourseDurationCard","setPaymentPopUp","payments","scheduledCourse","process","toggle","setToggle","stopCourse","finishCourse","makeDate","date","dateArray","split","day","month","type","courseName","category","categoryName","format","formatName","days","map","id","active","props","coursePaymentDay","popUp","data","length"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\nimport {\r\n    Circle,\r\n    CourseDurationBox,\r\n    CourseMonthBox,\r\n    CourseName, Date,\r\n    Icon,\r\n    PaymentDay,\r\n    StopFinishBox, StopOrGraduate\r\n} from \"./styles\";\r\nimport {ReactComponent as Stop} from \"../../assets/icons/stop.svg\";\r\nimport {ReactComponent as Finish} from \"../../assets/icons/finish.svg\";\r\nimport {ReactComponent as Column} from \"../../assets/icons/column.svg\";\r\nimport {whichMonth} from \"../../util/whichMonth\";\r\n\r\nconst CourseDurationCard = ({setPaymentPopUp, payments, scheduledCourse, process}) => {\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const stopCourse = () => {\r\n\r\n    }\r\n\r\n    const finishCourse = () => {\r\n\r\n    }\r\n\r\n    const makeDate = (date) => {\r\n        const dateArray = date.split(\"-\")\r\n        const day = dateArray[2]\r\n        const month = whichMonth(dateArray[1])\r\n        return `${day} ${month}`\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CourseMonthBox>\r\n                <CourseName>\r\n                <span onClick={() => setToggle(!toggle)}>\r\n                    {`${scheduledCourse.type.courseName} | ${scheduledCourse.type.category.categoryName}`}\r\n                </span>\r\n                    {toggle &&\r\n                    <StopFinishBox>\r\n                        <Icon onClick={() => stopCourse()}>\r\n                            <Stop/>\r\n                        </Icon>\r\n                        <Icon onClick={() => finishCourse()}>\r\n                            <Finish/>\r\n                        </Icon>\r\n                    </StopFinishBox>}\r\n                    {/*</span>*/}\r\n                    <small>{scheduledCourse.format.formatName}</small>\r\n                </CourseName>\r\n                <CourseDurationBox>\r\n                    {scheduledCourse?.days?.map(({id, day}) => {\r\n                        let active = false;\r\n                        payments?.map(props => {\r\n                            if (props.scheduledCourse.id === scheduledCourse.id) {\r\n                                if (props.coursePaymentDay.id === id) {\r\n                                    active = true\r\n                                }\r\n                            }\r\n                        })\r\n                        return (\r\n                            <PaymentDay key={id}\r\n                                        active={active}\r\n                                        onClick={() => {\r\n                                            !active && setPaymentPopUp({\r\n                                                popUp: true,\r\n                                                data: {scheduledCourse, days: {id, day}}\r\n                                            })\r\n                                        }}\r\n                                        width={100 / scheduledCourse?.days?.length}>\r\n                                <Circle active={active}>\r\n                                    <Column/>\r\n                                </Circle>\r\n                                <Date>{makeDate(day)}</Date>\r\n                            </PaymentDay>)\r\n                    })}\r\n                </CourseDurationBox>\r\n                {process !== \"learning\" &&\r\n                <StopOrGraduate process={process}>\r\n                    <p>{process}</p>\r\n                </StopOrGraduate>\r\n                }\r\n            </CourseMonthBox>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CourseDurationCard"]},"metadata":{},"sourceType":"module"}