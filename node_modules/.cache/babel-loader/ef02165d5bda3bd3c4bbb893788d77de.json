{"ast":null,"code":"var _jsxFileName = \"F:\\\\ibs-admin-front\\\\ibs-school-admin\\\\src\\\\components\\\\ClientsList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ClientId, Email, FullName, FullNameBox, PhoneNumber, TableRow, TableWrapper, WrapperTeachersList, DeleteBox, DeletionBackground, DeletionPage, DeletionText, ActionsBox, Edit, Delete, TableRowWrapper } from \"./styles\"; // import img from \"../../assets/images/firebird.png\"\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getClientsList } from \"../../redux/modules/clientsList/clientsListAction\"; //icons\n\nimport PageTitleAdd from \"../PageTitleAdd\";\nimport Loading from \"../Loading\";\nimport ErrorBox from \"../ErrorBox\"; // import {getClientId} from \"../../redux/modules/clientId/clientIdAction\";\n\nimport { ReactComponent as Bin } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/bin.svg\";\nimport { ReactComponent as ArrowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/arrow.svg\";\nimport { link } from \"../../baseLink/link\";\nimport axios from \"axios\";\nimport { httpRequest } from \"../../util/httpRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ClientsList = ({\n  setId\n}) => {\n  _s();\n\n  var _deletionData$data, _deletionData$data2, _deletionData$data3;\n\n  const [deletionData, setDeletionData] = useState({\n    popUp: false,\n    data: {}\n  }); // const history = useHistory()\n\n  const dispatch = useDispatch();\n\n  const deleteClientById = id => {\n    axios(httpRequest(`client-student/${id}`, \"DELETE\")) // .delete(`${link}/client-student/${id}`)\n    .then(res => {\n      setDeletionData({\n        popUp: false,\n        data: {}\n      });\n      getClientsListDispatch();\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getClientsListDispatch = () => {\n    dispatch(getClientsList());\n  };\n\n  useEffect(() => {\n    getClientsListDispatch();\n  }, [getClientsList]);\n  const clients = useSelector(state => state.clientsListReducer); // const deleteTeacherById = (id) => {\n  //     axios.delete(`${link}/teachers/${id}`)\n  //         .then(res => {\n  //             console.log(res)\n  //             getTeachersDispatch()\n  //         })\n  //         .catch(err => {\n  //             console.log(err)\n  //         })\n  //\n  // }\n\n  const {\n    loading,\n    error,\n    clientsList\n  } = clients;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WrapperTeachersList, {\n      children: [/*#__PURE__*/_jsxDEV(PageTitleAdd, {\n        title: \"Clients\",\n        link: \"/clients/add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }, this), !loading && !error && clientsList === 0 && \"Empty\", /*#__PURE__*/_jsxDEV(TableWrapper, {\n        children: !loading && !error && (clientsList === null || clientsList === void 0 ? void 0 : clientsList.map(({\n          id,\n          firstName,\n          lastName,\n          email,\n          phoneNumber\n        }) => {\n          // const dob = birthDate.split(\"T\")[0].split(\"-\");\n          return /*#__PURE__*/_jsxDEV(TableRowWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(DeleteBox, {\n              onClick: () => {\n                setDeletionData({\n                  popUp: true,\n                  data: {\n                    id,\n                    firstName,\n                    lastName,\n                    email,\n                    phoneNumber\n                  }\n                }); // handleDelete(id)\n              },\n              className: \"bin\",\n              children: /*#__PURE__*/_jsxDEV(Bin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              to: `/clients/id/${id}` // onClick={() => {\n              // dispatch(getClientId(id))\n              //       }}\n              ,\n              children: [/*#__PURE__*/_jsxDEV(ClientId, {\n                children: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FullNameBox, {\n                children: [/*#__PURE__*/_jsxDEV(FullName, {\n                  children: [firstName, \" \", lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Email, {\n                  children: email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(PhoneNumber, {\n                children: phoneNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), deletionData.popUp && /*#__PURE__*/_jsxDEV(DeletionBackground, {\n      children: /*#__PURE__*/_jsxDEV(DeletionPage, {\n        children: [/*#__PURE__*/_jsxDEV(DeletionText, {\n          children: [`${(_deletionData$data = deletionData.data) === null || _deletionData$data === void 0 ? void 0 : _deletionData$data.firstName} ${(_deletionData$data2 = deletionData.data) === null || _deletionData$data2 === void 0 ? void 0 : _deletionData$data2.lastName}`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: (_deletionData$data3 = deletionData.data) === null || _deletionData$data3 === void 0 ? void 0 : _deletionData$data3.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeletionText, {\n          children: \"Do you really want to delete me \\uD83D\\uDE2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionsBox, {\n          children: [/*#__PURE__*/_jsxDEV(Edit, {\n            bgColor: \"green\",\n            onClick: () => {\n              setDeletionData({\n                popUp: false,\n                data: {}\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Delete, {\n            bgColor: \"red\",\n            onClick: () => {\n              var _deletionData$data4;\n\n              return deleteClientById((_deletionData$data4 = deletionData.data) === null || _deletionData$data4 === void 0 ? void 0 : _deletionData$data4.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(Bin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ClientsList, \"dXcX80Nv04LotI3LhvRxEoJlMmo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ClientsList;\nexport default ClientsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientsList\");","map":{"version":3,"sources":["F:/ibs-admin-front/ibs-school-admin/src/components/ClientsList/index.jsx"],"names":["React","useState","useEffect","ClientId","Email","FullName","FullNameBox","PhoneNumber","TableRow","TableWrapper","WrapperTeachersList","DeleteBox","DeletionBackground","DeletionPage","DeletionText","ActionsBox","Edit","Delete","TableRowWrapper","useDispatch","useSelector","getClientsList","PageTitleAdd","Loading","ErrorBox","link","axios","httpRequest","ClientsList","setId","deletionData","setDeletionData","popUp","data","dispatch","deleteClientById","id","then","res","getClientsListDispatch","console","log","catch","err","clients","state","clientsListReducer","loading","error","clientsList","map","firstName","lastName","email","phoneNumber","position"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport {\r\n    ClientId,\r\n    Email,\r\n    FullName,\r\n    FullNameBox,\r\n    PhoneNumber,\r\n    TableRow,\r\n    TableWrapper,\r\n    WrapperTeachersList,\r\n    DeleteBox, DeletionBackground, DeletionPage, DeletionText, ActionsBox, Edit, Delete, TableRowWrapper\r\n} from \"./styles\";\r\n// import img from \"../../assets/images/firebird.png\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getClientsList} from \"../../redux/modules/clientsList/clientsListAction\";\r\n\r\n//icons\r\nimport PageTitleAdd from \"../PageTitleAdd\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\n// import {getClientId} from \"../../redux/modules/clientId/clientIdAction\";\r\nimport {ReactComponent as Bin} from \"../../assets/icons/bin.svg\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport axios from \"axios\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst ClientsList = ({setId}) => {\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    // const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteClientById = (id) => {\r\n        axios(httpRequest(`client-student/${id}`,\"DELETE\"))\r\n            // .delete(`${link}/client-student/${id}`)\r\n            .then(res => {\r\n                setDeletionData({popUp: false, data: {}})\r\n                getClientsListDispatch()\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        ;\r\n    }\r\n\r\n    const getClientsListDispatch = () => {\r\n        dispatch(getClientsList())\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getClientsListDispatch()\r\n    }, [getClientsList])\r\n    const clients = useSelector(state => state.clientsListReducer)\r\n\r\n    // const deleteTeacherById = (id) => {\r\n    //     axios.delete(`${link}/teachers/${id}`)\r\n    //         .then(res => {\r\n    //             console.log(res)\r\n    //             getTeachersDispatch()\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log(err)\r\n    //         })\r\n    //\r\n    // }\r\n\r\n    const {loading, error, clientsList} = clients\r\n    return (\r\n        <>\r\n            <WrapperTeachersList>\r\n                <PageTitleAdd title={\"Clients\"} link={\"/clients/add\"}/>\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                {(!loading && !error && clientsList === 0) && \"Empty\"}\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    clientsList?.map(({\r\n                                          id,\r\n                                          firstName,\r\n                                          lastName,\r\n                                          email,\r\n                                          phoneNumber\r\n                                      }) => {\r\n                            // const dob = birthDate.split(\"T\")[0].split(\"-\");\r\n                            return (\r\n                                <TableRowWrapper key={id}>\r\n                                    <DeleteBox onClick={() => {\r\n                                        setDeletionData({popUp: true, data: {id, firstName, lastName, email, phoneNumber}})\r\n                                        // handleDelete(id)\r\n                                    }} className={\"bin\"}>\r\n                                        <Bin/>\r\n                                    </DeleteBox>\r\n                                    <TableRow to={`/clients/id/${id}`}\r\n                                        // onClick={() => {\r\n                                        // dispatch(getClientId(id))\r\n                                        //       }}\r\n                                    >\r\n\r\n                                        <ClientId>\r\n                                            {id}\r\n                                            {/*<img src={`${link}/images/files/${image}`} alt=\"\"/>*/}\r\n                                        </ClientId>\r\n                                        <FullNameBox>\r\n                                            <FullName>\r\n                                                {firstName} {lastName}\r\n                                            </FullName>\r\n                                            <Email>\r\n                                                {email}\r\n                                            </Email>\r\n                                        </FullNameBox>\r\n                                        <PhoneNumber>\r\n                                            {phoneNumber}\r\n                                        </PhoneNumber>\r\n\r\n                                        {/*<ActionBox>*/}\r\n                                        {/*    <Edit bgColor={\"green\"} onClick={() => {*/}\r\n                                        {/*        history.push(\"/teachers/add\")*/}\r\n                                        {/*        setEditValue({*/}\r\n                                        {/*            id,*/}\r\n                                        {/*            teacherFullName,*/}\r\n                                        {/*            birthDate,*/}\r\n                                        {/*            description,*/}\r\n                                        {/*            image,*/}\r\n                                        {/*            position*/}\r\n                                        {/*        })*/}\r\n                                        {/*    }}>*/}\r\n                                        {/*        <EditIcon/>*/}\r\n                                        {/*    </Edit>*/}\r\n                                        {/*    <Delete bgColor={\"red\"} onClick={() =>*/}\r\n                                        {/*        setDeletionData({*/}\r\n                                        {/*            popUp: true,*/}\r\n                                        {/*            data: {*/}\r\n                                        {/*                id,*/}\r\n                                        {/*                teacherFullName,*/}\r\n                                        {/*                birthDate,*/}\r\n                                        {/*                description,*/}\r\n                                        {/*                image,*/}\r\n                                        {/*                position*/}\r\n                                        {/*            }*/}\r\n                                        {/*        })}>*/}\r\n                                        {/*        <DeleteIcon/>*/}\r\n                                        {/*    </Delete>*/}\r\n                                        {/*</ActionBox>*/}\r\n\r\n                                        {/*</CardBox>*/}\r\n                                    </TableRow>\r\n                                </TableRowWrapper>)\r\n                        }\r\n                    )\r\n                    }\r\n                </TableWrapper>\r\n            </WrapperTeachersList>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    {/*<DeletionImg>*/}\r\n                    {/*    <img src={`${link}/images/files/${deletionData.data?.image}`} alt=\"\"/>*/}\r\n                    {/*</DeletionImg>*/}\r\n                    <DeletionText>\r\n                        {`${deletionData.data?.firstName} ${deletionData.data?.lastName}`}\r\n                        <br/>\r\n                        <small>{deletionData.data?.position}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            deleteClientById(deletionData.data?.id)\r\n                        }>\r\n                            <Bin/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClientsList"]},"metadata":{},"sourceType":"module"}