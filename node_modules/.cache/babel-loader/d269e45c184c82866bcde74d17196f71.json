{"ast":null,"code":"var _jsxFileName = \"F:\\\\ibs-admin-front\\\\ibs-school-admin\\\\src\\\\components\\\\RequestedStudent\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { Table, TableBody, TableData, TableHead, TableRow, Title } from \"../Table/styles\";\n\nimport { Checkbox } from \"../Input/styles\";\nimport { ContactBox, Course, Email, FullName, FullNameBox, PhoneNumber, RequestedStudentWrapper, TableRow, TableWrapper, Tick } from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DeleteBox, Title } from \"../Table/styles\";\nimport ErrorBox from \"../ErrorBox\";\nimport Loading from \"../Loading\"; //icon\n\nimport { ReactComponent as Plus } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/plus.svg\";\nimport { ReactComponent as DeleteIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/bin.svg\";\nimport { ReactComponent as Bin } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/bin.svg\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport { link } from \"../../baseLink/link\";\nimport { getRequestedStudents } from \"../../redux/modules/requestedStudents/requestedStudentsAction\";\nimport { ActionsBox, Delete, DeletionBackground, DeletionPage, DeletionText, Edit } from \"../TeachersList/styles\";\nimport { ReactComponent as ArrowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/arrow.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RequestedStudent = ({\n  setWaitData\n}) => {\n  _s();\n\n  var _deletionData$data, _deletionData$data2;\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const requestedStudents = useSelector(state => state.requestedStudentReducer);\n  const {\n    loading,\n    error,\n    requestedStudent\n  } = requestedStudents;\n\n  const handleDelete = id => {\n    axios(`enrolledStudent/${id}`, \"DELETE\") // .delete(`${link}/enrolledStudent/${id}`)\n    .then(() => {\n      dispatch(getRequestedStudents());\n      setDeletionData({\n        popUp: false,\n        data: {}\n      });\n    });\n  };\n\n  const [deletionData, setDeletionData] = useState({\n    popUp: false,\n    data: {}\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RequestedStudentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Requested Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(TableWrapper, {\n        children: !loading && !error && (requestedStudent === null || requestedStudent === void 0 ? void 0 : requestedStudent.map(({\n          id,\n          name,\n          phoneNumber,\n          email,\n          selectedCourse,\n          contacted,\n          enrolledTime\n        }) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(DeleteBox, {\n            onClick: () => {\n              // handleDelete(id)\n              setDeletionData({\n                popUp: true,\n                data: {\n                  id,\n                  name,\n                  phoneNumber\n                }\n              });\n            },\n            className: \"bin\",\n            children: /*#__PURE__*/_jsxDEV(Bin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FullNameBox, {\n            children: [/*#__PURE__*/_jsxDEV(FullName, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Course, {\n              children: selectedCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ContactBox, {\n            children: [/*#__PURE__*/_jsxDEV(PhoneNumber, {\n              children: phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Email, {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tick, {\n            onClick: () => {\n              setWaitData({\n                name: name,\n                course: selectedCourse,\n                phone: phoneNumber\n              });\n              history.push(\"/students/waiting-list\");\n            },\n            children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), deletionData.popUp && /*#__PURE__*/_jsxDEV(DeletionBackground, {\n      children: /*#__PURE__*/_jsxDEV(DeletionPage, {\n        children: [/*#__PURE__*/_jsxDEV(DeletionText, {\n          children: [(_deletionData$data = deletionData.data) === null || _deletionData$data === void 0 ? void 0 : _deletionData$data.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: (_deletionData$data2 = deletionData.data) === null || _deletionData$data2 === void 0 ? void 0 : _deletionData$data2.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeletionText, {\n          children: \"Do you really want to delete me \\uD83D\\uDE2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionsBox, {\n          children: [/*#__PURE__*/_jsxDEV(Edit, {\n            bgColor: \"green\",\n            onClick: () => {\n              setDeletionData({\n                popUp: false,\n                data: {}\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Delete, {\n            bgColor: \"red\",\n            onClick: () => {\n              var _deletionData$data3;\n\n              return handleDelete((_deletionData$data3 = deletionData.data) === null || _deletionData$data3 === void 0 ? void 0 : _deletionData$data3.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RequestedStudent, \"zdUCK13TC/v4z0qmaJ1BSRRf6PA=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = RequestedStudent;\nexport default RequestedStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestedStudent\");","map":{"version":3,"sources":["F:/ibs-admin-front/ibs-school-admin/src/components/RequestedStudent/index.jsx"],"names":["React","useState","Checkbox","ContactBox","Course","Email","FullName","FullNameBox","PhoneNumber","RequestedStudentWrapper","TableRow","TableWrapper","Tick","useDispatch","useSelector","DeleteBox","Title","ErrorBox","Loading","useHistory","axios","link","getRequestedStudents","ActionsBox","Delete","DeletionBackground","DeletionPage","DeletionText","Edit","RequestedStudent","setWaitData","history","dispatch","requestedStudents","state","requestedStudentReducer","loading","error","requestedStudent","handleDelete","id","then","setDeletionData","popUp","data","deletionData","map","name","phoneNumber","email","selectedCourse","contacted","enrolledTime","course","phone","push"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\n// import { Table, TableBody, TableData, TableHead, TableRow, Title } from \"../Table/styles\";\r\nimport {Checkbox} from \"../Input/styles\";\r\nimport {\r\n    ContactBox,\r\n    Course, Email,\r\n    FullName,\r\n    FullNameBox,\r\n    PhoneNumber,\r\n    RequestedStudentWrapper,\r\n    TableRow,\r\n    TableWrapper, Tick\r\n} from \"./styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DeleteBox, Title} from \"../Table/styles\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport Loading from \"../Loading\";\r\n\r\n//icon\r\nimport {ReactComponent as Plus} from \"../../assets/icons/plus.svg\"\r\nimport {ReactComponent as DeleteIcon, ReactComponent as Bin} from \"../../assets/icons/bin.svg\"\r\nimport {useHistory} from \"react-router\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {getRequestedStudents} from \"../../redux/modules/requestedStudents/requestedStudentsAction\";\r\nimport {ActionsBox, Delete, DeletionBackground, DeletionPage, DeletionText, Edit} from \"../TeachersList/styles\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\n\r\nconst RequestedStudent = ({setWaitData}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const requestedStudents = useSelector(state => state.requestedStudentReducer)\r\n\r\n    const {loading, error, requestedStudent} = requestedStudents\r\n\r\n    const handleDelete = (id) => {\r\n        axios(`enrolledStudent/${id}`,\"DELETE\")\r\n            // .delete(`${link}/enrolledStudent/${id}`)\r\n            .then(() => {\r\n                    dispatch(getRequestedStudents())\r\n                    setDeletionData({popUp: false, data: {}})\r\n                }\r\n            )\r\n    }\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    return (\r\n        <>\r\n            <RequestedStudentWrapper>\r\n                <Title>Requested Student</Title>\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                <TableWrapper>\r\n                    {\r\n                        (!loading && !error) &&\r\n                        requestedStudent?.map(\r\n                            (\r\n                                {\r\n                                    id,\r\n                                    name,\r\n                                    phoneNumber,\r\n                                    email,\r\n                                    selectedCourse,\r\n                                    contacted,\r\n                                    enrolledTime\r\n                                }) =>\r\n                        <TableRow key={id}>\r\n                            <DeleteBox onClick={()=>{\r\n                                // handleDelete(id)\r\n                                setDeletionData({popUp:true,data:{id,name,phoneNumber}})\r\n                            }} className={\"bin\"}>\r\n                                <Bin/>\r\n                            </DeleteBox>\r\n                            <FullNameBox>\r\n                                <FullName>\r\n                                    {name}\r\n                                </FullName>\r\n                                <Course>\r\n                                    {selectedCourse}\r\n                                </Course>\r\n                            </FullNameBox>\r\n                            <ContactBox>\r\n                                <PhoneNumber>\r\n                                    {phoneNumber}\r\n                                </PhoneNumber>\r\n                                <Email>\r\n                                    {email}\r\n                                </Email>\r\n                            </ContactBox>\r\n                            <Tick onClick={() => {\r\n                                setWaitData({name: name, course: selectedCourse, phone: phoneNumber})\r\n                                history.push(\"/students/waiting-list\")\r\n                            }}>\r\n                                <Plus/>\r\n                                {/*<Checkbox type=\"checkbox\" checked={false}/>*/}\r\n                            </Tick>\r\n                        </TableRow>\r\n                        )\r\n                    }\r\n                </TableWrapper>\r\n            </RequestedStudentWrapper>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionText>\r\n                        {deletionData.data?.name}\r\n                        <br/>\r\n                        <small>{deletionData.data?.phoneNumber}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            handleDelete(deletionData.data?.id)\r\n                        }>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RequestedStudent"]},"metadata":{},"sourceType":"module"}