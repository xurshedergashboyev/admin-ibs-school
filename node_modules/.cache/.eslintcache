[{"F:\\ibs-admin-front\\ibs-school-admin\\src\\index.js":"1","F:\\ibs-admin-front\\ibs-school-admin\\src\\reportWebVitals.js":"2","F:\\ibs-admin-front\\ibs-school-admin\\src\\App.js":"3","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\store\\store.js":"4","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\store\\rootReducer.js":"5","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Loading\\index.jsx":"6","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Loading\\styles.js":"7","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\courses\\coursesReducer.js":"8","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\teachers\\teachersReducer.js":"9","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\toGetGiftStudents\\toGetGiftStudentsReducer.js":"10","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\undecidedStudents\\undecidedStudentsReducer.js":"11","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\waitingList\\waitingListReducer.js":"12","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\clientsList\\clientsListReducer.js":"13","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\clientIdData\\clientIdDataReducer.js":"14","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\scheduledCourses\\scheduledCoursesReducer.js":"15","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\dashboard\\dashboardReducer.js":"16","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\lessonData\\lessonDataReducer.js":"17","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\Main\\index.jsx":"18","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\LoginPage\\index.jsx":"19","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\requestedStudents\\requestedStudentsReducer.js":"20","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\testedStudents\\testedStudentsReducer.js":"21","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\telegramFile\\telegramFileReducer.js":"22","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\Main\\styles.js":"23","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\LoginPage\\styles.js":"24","F:\\ibs-admin-front\\ibs-school-admin\\src\\constants\\actionTypes.js":"25","F:\\ibs-admin-front\\ibs-school-admin\\src\\hooks\\useWindowDimentions.js":"26","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Input\\styles.js":"27","F:\\ibs-admin-front\\ibs-school-admin\\src\\baseLink\\link.js":"28","F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\httpRequest.js":"29","F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\getHeader.js":"30","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\TeachersPage\\index.jsx":"31","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\ImagesPage\\index.jsx":"32","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\StudentsPage\\index.jsx":"33","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\Dashboard\\index.jsx":"34","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\ClientsPage\\index.jsx":"35","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddCourse\\index.jsx":"36","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\ScheduledCoursePage\\index.jsx":"37","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\CoursesPage\\index.jsx":"38","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\BotPage\\index.jsx":"39","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\CoursesList\\index.jsx":"40","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\LeftNavbar\\index.jsx":"41","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\PageNavbar\\index.jsx":"42","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\testedStudents\\testedStudentsAction.js":"43","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\Dashboard\\styles.js":"44","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\toGetGiftStudents\\toGetGiftStudentsAction.js":"45","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\waitingList\\waitingListAction.js":"46","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\requestedStudents\\requestedStudentsAction.js":"47","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\undecidedStudents\\undecidedStudentsAction.js":"48","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\PageNavbar\\styles.js":"49","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\LeftNavbar\\styles.js":"50","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\CoursesList\\styles.js":"51","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\lessonData\\lessonDataAction.js":"52","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\telegramFile\\telegramFileAction.js":"53","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\courses\\coursesAction.js":"54","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\scheduledCourses\\scheduledCoursesAction.js":"55","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddTeacher\\index.jsx":"56","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\TeachersList\\index.jsx":"57","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ImagesList\\index.jsx":"58","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ToGetGiftStudent\\index.jsx":"59","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\TestedStudent\\index.jsx":"60","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\RequestedStudent\\index.jsx":"61","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\UndecidedStudent\\index.jsx":"62","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\WaitingList\\index.jsx":"63","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddImage\\index.jsx":"64","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ErrorBox\\index.jsx":"65","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\PageTitleAdd\\index.jsx":"66","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\BotLesson\\index.jsx":"67","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\BotContent\\index.jsx":"68","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddClient\\index.jsx":"69","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\index.jsx":"70","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ScheduledCourseList\\index.jsx":"71","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\PersonalCabinet\\index.jsx":"72","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ClientsList\\index.jsx":"73","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\dashboard\\dashboardAction.js":"74","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\TeachersList\\styles.js":"75","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\teachers\\teachersAction.js":"76","F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\whichMonth.js":"77","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ImagesList\\styles.js":"78","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ToGetGiftStudent\\styles.js":"79","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\TestedStudent\\styles.js":"80","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\RequestedStudent\\styles.js":"81","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\UndecidedStudent\\styles.js":"82","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\WaitingList\\styles.js":"83","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddImage\\styles.js":"84","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ErrorBox\\styles.js":"85","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\PageTitleAdd\\styles.js":"86","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\BotLesson\\styles.js":"87","F:\\ibs-admin-front\\ibs-school-admin\\src\\constants\\levels.js":"88","F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\calculateFileSize.js":"89","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\BotContent\\styles.js":"90","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ScheduledCourseList\\styles.js":"91","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\styles.js":"92","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\clientsList\\clientsListAction.js":"93","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ClientsList\\styles.js":"94","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Table\\styles.js":"95","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\clientIdData\\clientIdDataAction.js":"96","F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\paymentType.js":"97","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\PersonalCabinet\\styles.js":"98","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\categoryForm.jsx":"99","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\courseTypeForm.jsx":"100","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\eduFormatForm.jsx":"101","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\typeOfPaymentForm.jsx":"102","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Input\\index.jsx":"103","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\CourseDurationCard\\index.jsx":"104","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\CourseDurationCard\\styles.js":"105"},{"size":727,"mtime":1628229637055,"results":"106","hashOfConfig":"107"},{"size":375,"mtime":1628229637403,"results":"108","hashOfConfig":"107"},{"size":1459,"mtime":1628230663508,"results":"109","hashOfConfig":"107"},{"size":755,"mtime":1628229637401,"results":"110","hashOfConfig":"107"},{"size":1578,"mtime":1628229637398,"results":"111","hashOfConfig":"107"},{"size":358,"mtime":1628229636919,"results":"112","hashOfConfig":"107"},{"size":400,"mtime":1628229636924,"results":"113","hashOfConfig":"107"},{"size":753,"mtime":1628229637250,"results":"114","hashOfConfig":"107"},{"size":766,"mtime":1628229637320,"results":"115","hashOfConfig":"107"},{"size":795,"mtime":1628229637364,"results":"116","hashOfConfig":"107"},{"size":795,"mtime":1628229637376,"results":"117","hashOfConfig":"107"},{"size":780,"mtime":1628229637394,"results":"118","hashOfConfig":"107"},{"size":781,"mtime":1628229637247,"results":"119","hashOfConfig":"107"},{"size":786,"mtime":1628229637238,"results":"120","hashOfConfig":"107"},{"size":790,"mtime":1628229637309,"results":"121","hashOfConfig":"107"},{"size":766,"mtime":1628229637267,"results":"122","hashOfConfig":"107"},{"size":800,"mtime":1628229637289,"results":"123","hashOfConfig":"107"},{"size":6643,"mtime":1628229637161,"results":"124","hashOfConfig":"107"},{"size":1557,"mtime":1628229637159,"results":"125","hashOfConfig":"107"},{"size":810,"mtime":1628229637303,"results":"126","hashOfConfig":"107"},{"size":792,"mtime":1628229637356,"results":"127","hashOfConfig":"107"},{"size":787,"mtime":1628229637340,"results":"128","hashOfConfig":"107"},{"size":1376,"mtime":1628229637173,"results":"129","hashOfConfig":"107"},{"size":292,"mtime":1628229637160,"results":"130","hashOfConfig":"107"},{"size":677,"mtime":1628229637035,"results":"131","hashOfConfig":"107"},{"size":650,"mtime":1628229637039,"results":"132","hashOfConfig":"107"},{"size":6802,"mtime":1628229636909,"results":"133","hashOfConfig":"107"},{"size":111,"mtime":1628229636698,"results":"134","hashOfConfig":"107"},{"size":319,"mtime":1628229637414,"results":"135","hashOfConfig":"107"},{"size":169,"mtime":1628229637413,"results":"136","hashOfConfig":"107"},{"size":814,"mtime":1628229637207,"results":"137","hashOfConfig":"107"},{"size":657,"mtime":1628229637145,"results":"138","hashOfConfig":"107"},{"size":2618,"mtime":1628229637203,"results":"139","hashOfConfig":"107"},{"size":19704,"mtime":1628229637129,"results":"140","hashOfConfig":"107"},{"size":2282,"mtime":1628229637096,"results":"141","hashOfConfig":"107"},{"size":5099,"mtime":1628229636719,"results":"142","hashOfConfig":"107"},{"size":1179,"mtime":1628229637192,"results":"143","hashOfConfig":"107"},{"size":804,"mtime":1628229637098,"results":"144","hashOfConfig":"107"},{"size":1250,"mtime":1628229637079,"results":"145","hashOfConfig":"107"},{"size":8800,"mtime":1628229636868,"results":"146","hashOfConfig":"107"},{"size":1843,"mtime":1628229636913,"results":"147","hashOfConfig":"107"},{"size":496,"mtime":1628229636927,"results":"148","hashOfConfig":"107"},{"size":416,"mtime":1628229637346,"results":"149","hashOfConfig":"107"},{"size":5477,"mtime":1628229637131,"results":"150","hashOfConfig":"107"},{"size":419,"mtime":1628229637359,"results":"151","hashOfConfig":"107"},{"size":412,"mtime":1628229637391,"results":"152","hashOfConfig":"107"},{"size":424,"mtime":1628229637292,"results":"153","hashOfConfig":"107"},{"size":426,"mtime":1628229637374,"results":"154","hashOfConfig":"107"},{"size":966,"mtime":1628229636929,"results":"155","hashOfConfig":"107"},{"size":5127,"mtime":1628229636915,"results":"156","hashOfConfig":"107"},{"size":6850,"mtime":1628229636871,"results":"157","hashOfConfig":"107"},{"size":411,"mtime":1628229637285,"results":"158","hashOfConfig":"107"},{"size":454,"mtime":1628229637336,"results":"159","hashOfConfig":"107"},{"size":388,"mtime":1628229637250,"results":"160","hashOfConfig":"107"},{"size":424,"mtime":1628229637306,"results":"161","hashOfConfig":"107"},{"size":4686,"mtime":1628229636795,"results":"162","hashOfConfig":"107"},{"size":7490,"mtime":1628229636964,"results":"163","hashOfConfig":"107"},{"size":5376,"mtime":1628229636893,"results":"164","hashOfConfig":"107"},{"size":4096,"mtime":1628229636988,"results":"165","hashOfConfig":"107"},{"size":6120,"mtime":1628229636983,"results":"166","hashOfConfig":"107"},{"size":5352,"mtime":1628229636944,"results":"167","hashOfConfig":"107"},{"size":5032,"mtime":1628229636999,"results":"168","hashOfConfig":"107"},{"size":7708,"mtime":1628229637024,"results":"169","hashOfConfig":"107"},{"size":2250,"mtime":1628229636738,"results":"170","hashOfConfig":"107"},{"size":357,"mtime":1628229636885,"results":"171","hashOfConfig":"107"},{"size":420,"mtime":1628229636932,"results":"172","hashOfConfig":"107"},{"size":10080,"mtime":1628229636818,"results":"173","hashOfConfig":"107"},{"size":10472,"mtime":1628229636807,"results":"174","hashOfConfig":"107"},{"size":5130,"mtime":1628231720424,"results":"175","hashOfConfig":"107"},{"size":6973,"mtime":1628229636777,"results":"176","hashOfConfig":"107"},{"size":9355,"mtime":1628229636948,"results":"177","hashOfConfig":"107"},{"size":14327,"mtime":1628229637175,"results":"178","hashOfConfig":"107"},{"size":8352,"mtime":1628229636836,"results":"179","hashOfConfig":"107"},{"size":420,"mtime":1628229637266,"results":"180","hashOfConfig":"107"},{"size":7176,"mtime":1628229636966,"results":"181","hashOfConfig":"107"},{"size":394,"mtime":1628229637317,"results":"182","hashOfConfig":"107"},{"size":663,"mtime":1628229637452,"results":"183","hashOfConfig":"107"},{"size":4233,"mtime":1628229636904,"results":"184","hashOfConfig":"107"},{"size":1772,"mtime":1628229636997,"results":"185","hashOfConfig":"107"},{"size":3964,"mtime":1628229636985,"results":"186","hashOfConfig":"107"},{"size":3334,"mtime":1628229636945,"results":"187","hashOfConfig":"107"},{"size":3032,"mtime":1628229637000,"results":"188","hashOfConfig":"107"},{"size":2892,"mtime":1628229637025,"results":"189","hashOfConfig":"107"},{"size":1997,"mtime":1628229636740,"results":"190","hashOfConfig":"107"},{"size":394,"mtime":1628229636887,"results":"191","hashOfConfig":"107"},{"size":1314,"mtime":1628229636934,"results":"192","hashOfConfig":"107"},{"size":3544,"mtime":1628229636820,"results":"193","hashOfConfig":"107"},{"size":230,"mtime":1628229637036,"results":"194","hashOfConfig":"107"},{"size":494,"mtime":1628229637411,"results":"195","hashOfConfig":"107"},{"size":4002,"mtime":1628229636809,"results":"196","hashOfConfig":"107"},{"size":6978,"mtime":1628229636950,"results":"197","hashOfConfig":"107"},{"size":677,"mtime":1628229636788,"results":"198","hashOfConfig":"107"},{"size":411,"mtime":1628229637242,"results":"199","hashOfConfig":"107"},{"size":8023,"mtime":1628229636837,"results":"200","hashOfConfig":"107"},{"size":1716,"mtime":1628229636953,"results":"201","hashOfConfig":"107"},{"size":436,"mtime":1628229637237,"results":"202","hashOfConfig":"107"},{"size":504,"mtime":1628229637432,"results":"203","hashOfConfig":"107"},{"size":4506,"mtime":1628229637176,"results":"204","hashOfConfig":"107"},{"size":1582,"mtime":1628229636762,"results":"205","hashOfConfig":"107"},{"size":2224,"mtime":1628229636763,"results":"206","hashOfConfig":"107"},{"size":1470,"mtime":1628229636775,"results":"207","hashOfConfig":"107"},{"size":1505,"mtime":1628229636791,"results":"208","hashOfConfig":"107"},{"size":466,"mtime":1628229636907,"results":"209","hashOfConfig":"107"},{"size":3402,"mtime":1628229636841,"results":"210","hashOfConfig":"107"},{"size":2453,"mtime":1628229636850,"results":"211","hashOfConfig":"107"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"1k80iqg",{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"214"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"214"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"214"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"214"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"214"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"214"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"214"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"214"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"214"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"214"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"214"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"214"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"214"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"214"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"214"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"214"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"214"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"214"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"214"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"214"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"214"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"214"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"214"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"214"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"214"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"214"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"214"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"214"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"214"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"214"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"214"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"214"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"214"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"214"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"214"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"214"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"214"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"214"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"214"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"214"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"214"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"214"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"214"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"214"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"214"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"214"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"214"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"214"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\ibs-admin-front\\ibs-school-admin\\src\\index.js",[],["471","472"],"F:\\ibs-admin-front\\ibs-school-admin\\src\\reportWebVitals.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\App.js",["473","474","475"],"import {useEffect, useState} from \"react\"\r\nimport './App.css';\r\nimport Main from \"./pages/Main\";\r\nimport {BrowserRouter as Router, Switch,} from \"react-router-dom\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\n\r\nfunction App() {\r\n\r\n    const [login, setLogin] = useState(false)\r\n\r\n    const [check, setCheck] = useState(false)\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\")\r\n        if (token) {\r\n            setLogin(true)\r\n        }\r\n        setCheck(false)\r\n    }, [check])\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                {/*{login*/}\r\n                    // .login === \"ibs-school\" && login.password === \"ibs-school2021tech\"\r\n                    {/*?*/}\r\n                    <Main/>\r\n                    {/*// : <LoginPage setCheck={setCheck}/>}*/}\r\n            </Switch>\r\n        </Router>\r\n        // <CourseInput/>\r\n        // <div className=\"App\">\r\n        //   <header className=\"App-header\">\r\n        //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        //     <p>\r\n        //       Edit <code>src/App.js</code> and save to reload.\r\n        //     </p>\r\n        //     <a\r\n        //       className=\"App-link\"\r\n        //       href=\"https://reactjs.org\"\r\n        //       target=\"_blank\"\r\n        //       rel=\"noopener noreferrer\"\r\n        //     >\r\n        //       Learn React\r\n        //     </a>\r\n        //   </header>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\store\\store.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\store\\rootReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Loading\\index.jsx",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Loading\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\courses\\coursesReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\teachers\\teachersReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\toGetGiftStudents\\toGetGiftStudentsReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\undecidedStudents\\undecidedStudentsReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\waitingList\\waitingListReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\clientsList\\clientsListReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\clientIdData\\clientIdDataReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\scheduledCourses\\scheduledCoursesReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\dashboard\\dashboardReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\lessonData\\lessonDataReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\Main\\index.jsx",["476"],"import React, {useState, useEffect} from \"react\"\r\nimport {NavbarContainer, PageContainer, WrapperMain} from \"./styles\";\r\nimport LeftNavbar from \"../../components/LeftNavbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport StudentsPage from \"../StudentsPage\";\r\nimport TeachersPage from \"../TeachersPage\";\r\nimport DashboardPage from \"../Dashboard\";\r\nimport ImagesPage from \"../ImagesPage\";\r\nimport CoursesPage from \"../CoursesPage\";\r\n\r\n//icons\r\nimport Dashboard from \"../../assets/icons/dashboard.svg\"\r\nimport Student from \"../../assets/icons/student.svg\"\r\nimport Unsure from \"../../assets/icons/unknown.svg\"\r\nimport Gift from \"../../assets/icons/gift.svg\"\r\nimport Tested from \"../../assets/icons/correction.svg\"\r\nimport Teacher from \"../../assets/icons/teacher.svg\"\r\nimport Course from \"../../assets/icons/book.svg\"\r\nimport Image from \"../../assets/icons/image.svg\"\r\nimport Add from \"../../assets/icons/plus.svg\"\r\nimport WaitingList from \"../../assets/icons/waiting-list.svg\"\r\nimport Clients from \"../../assets/icons/clients.svg\"\r\nimport ScheduledCourse from \"../../assets/icons/scheduled-course.svg\"\r\nimport Bot from \"../../assets/icons/robot.svg\"\r\nimport List from \"../../assets/icons/list.svg\"\r\nimport Content from \"../../assets/icons/content.svg\"\r\n\r\n\r\n\r\n//hooks\r\nimport useWindowDimensions from \"../../hooks/useWindowDimentions\";\r\nimport ClientsPage from \"../ClientsPage\";\r\nimport ScheduledCoursePage from \"../ScheduledCoursePage\";\r\nimport BotPage from \"../BotPage\";\r\n\r\n\r\nconst Main = () => {\r\n\r\n    const navs = [\r\n        {\r\n            name: \"Dashboard\",\r\n            link: \"/\",\r\n            icon: Dashboard,\r\n            navs: [\r\n                {\r\n                    name: \"Dashboard\",\r\n                    link: \"/\",\r\n                    icon: Dashboard\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: \"Students\",\r\n            link: \"/students\",\r\n            icon: Student,\r\n            navs: [\r\n                {\r\n                    name: \"Req\",\r\n                    link: \"/students/requested\",\r\n                    icon: Student\r\n                },\r\n                {\r\n                    name: \"Unsure\",\r\n                    link: \"/students/undecided\",\r\n                    icon: Unsure\r\n                },\r\n                {\r\n                    name: \"Gift\",\r\n                    link: \"/students/to-get-gift\",\r\n                    icon: Gift\r\n                },\r\n                {\r\n                    name: \"Test\",\r\n                    link: \"/students/tested\",\r\n                    icon: Tested\r\n                }, {\r\n                    name: \"Wait\",\r\n                    link: \"/students/waiting-list\",\r\n                    icon: WaitingList\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Teachers\",\r\n            link: \"/teachers\",\r\n            icon: Teacher,\r\n            navs: [\r\n                {\r\n                    name: \"Teachers\",\r\n                    link: \"/teachers/list\",\r\n                    icon: Teacher\r\n                },\r\n                {\r\n                    name: \"Add\",\r\n                    link: \"/teachers/add\",\r\n                    icon: Add\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: \"Courses\",\r\n            link: \"/courses\",\r\n            icon: Course,\r\n            navs: [\r\n                {\r\n                    name: \"Courses\",\r\n                    link: \"/courses/list\",\r\n                    icon: Course\r\n                },\r\n                {\r\n                    name: \"Add\",\r\n                    link: \"/courses/add\",\r\n                    icon: Add\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Images\",\r\n            link: \"/images\",\r\n            icon: Image,\r\n            navs: [\r\n                {\r\n                    name: \"Images\",\r\n                    link: \"/images/list\",\r\n                    icon: Image\r\n                },\r\n                {\r\n                    name: \"Add\",\r\n                    link: \"/images/add\",\r\n                    icon: Add\r\n                },\r\n            ]\r\n        }, {\r\n            name: \"Clients\",\r\n            link: \"/clients\",\r\n            icon: Clients,\r\n            navs: [\r\n                {\r\n                    name: \"Clients\",\r\n                    link: \"/clients/list\",\r\n                    icon: Clients\r\n                },\r\n                {\r\n                    name: \"Add\",\r\n                    link: \"/clients/add\",\r\n                    icon: Add\r\n                },\r\n            ]\r\n        }, {\r\n            name: \"Scheduled\",\r\n            link: \"/scheduled-courses/list\",\r\n            icon: ScheduledCourse,\r\n            navs: [\r\n                {\r\n                    name: \"Scheduled\",\r\n                    link: \"/scheduled-courses/list\",\r\n                    icon: ScheduledCourse\r\n                },\r\n                {\r\n                    name: \"Add\",\r\n                    link: \"/scheduled-courses/add\",\r\n                    icon: Add\r\n                },\r\n            ]\r\n        }, {\r\n            name: \"Bot\",\r\n            link: \"/bot\",\r\n            icon: Bot,\r\n            navs: [\r\n                {\r\n                    name: \"Scheduled\",\r\n                    link: \"/bot/lessons\",\r\n                    icon: List\r\n                },\r\n                {\r\n                    name: \"Add\",\r\n                    link: \"/bot/content\",\r\n                    icon: Content\r\n                },\r\n            ]\r\n        },\r\n    ];\r\n\r\n    const width = useWindowDimensions().width\r\n\r\n    const [hidden, setHidden] = useState(true)\r\n\r\n    useEffect(() => {\r\n        width > 1300 && setHidden(false)\r\n    }, [])\r\n\r\n    return (\r\n        <WrapperMain>\r\n            <NavbarContainer hide={hidden}>\r\n                <LeftNavbar nav={navs} hidden={hidden} setHidden={() => setHidden(!hidden)}/>\r\n            </NavbarContainer>\r\n            <PageContainer hide={hidden} id={\"admin-content\"}>\r\n                {/*<HideToggleIcon outside={true}><Arrow/></HideToggleIcon>*/}\r\n                <Route exact path={\"/\"} component={DashboardPage}/>\r\n                <Route path={\"/students\"} component={StudentsPage}/>\r\n                <Route path={\"/teachers\"} component={TeachersPage}/>\r\n                <Route path={\"/courses\"} component={CoursesPage}/>\r\n                <Route path={\"/images\"} component={ImagesPage}/>\r\n                <Route path={\"/clients\"} component={ClientsPage}/>\r\n                <Route path={\"/scheduled-courses\"} component={ScheduledCoursePage}/>\r\n                <Route path={\"/bot\"} component={BotPage}/>\r\n            </PageContainer>\r\n        </WrapperMain>\r\n    )\r\n}\r\n\r\nexport default Main","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\LoginPage\\index.jsx",["477","478","479","480","481","482"],"import React, {useState} from \"react\"\r\nimport PageNavbar from \"../../components/PageNavbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport AddCourse from \"../../components/AddCourse\";\r\nimport CoursesList from \"../../components/CoursesList\";\r\nimport {Button, Form, Input} from \"../../components/Input/styles\";\r\nimport {ImgLogo, LoginPageWrapper} from \"./styles\";\r\nimport LogoImg from \"../../assets/images/ibs.png\"\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst LoginPage = ({setCheck}) => {\r\n\r\n    const submit = (event) => {\r\n        event.preventDefault()\r\n        const {login, password} = event.target\r\n        const form = {username: login.value, password: password.value}\r\n\r\n        axios(httpRequest(\"login\", \"POST\", form))\r\n            // .post(`${link}/login`, form)\r\n            .then((res) => {\r\n                console.log(res)\r\n                setCheck(true)\r\n                localStorage.setItem(\"token\", res.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <LoginPageWrapper>\r\n            <Form onSubmit={(e) => submit(e)}>\r\n                <ImgLogo src={LogoImg} alt=\"Logo\"/>\r\n                <Input type={\"text\"} name={\"login\"} placeholder={\"login\"}/>\r\n                <Input type={\"password\"} name={\"password\"} placeholder={\"password\"}/>\r\n                <Button>Login</Button>\r\n            </Form>\r\n        </LoginPageWrapper>\r\n    )\r\n}\r\n\r\nexport default LoginPage","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\requestedStudents\\requestedStudentsReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\testedStudents\\testedStudentsReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\telegramFile\\telegramFileReducer.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\Main\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\LoginPage\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\constants\\actionTypes.js",["483"],"export default {\r\n  GET_REQUESTED_STUDENT:\"GET_REQUESTED_STUDENT\",\r\n  GET_UNDECIDED_STUDENT:\"GET_UNDECIDED_STUDENT\",\r\n  GET_TO_GET_GIFT_STUDENT:\"GET_TO_GET_GIFT_STUDENT\",\r\n  GET_TESTED_STUDENT:\"GET_TESTED_STUDENT\",\r\n  GET_TEACHERS:\"GET_TEACHERS\",\r\n  GET_COURSES:\"GET_COURSES\",\r\n  GET_WAITING_LIST:\"GET_WAITING_LIST\",\r\n  GET_CLIENTS_LIST:\"GET_CLIENTS_LIST\",\r\n  GET_CLIENT_ID_DATA:\"GET_CLIENT_ID_DATA\",\r\n  GET_TELEGRAM_FILE:\"GET_TELEGRAM_FILE\",\r\n  GET_LESSON_DATA:\"GET_LESSON_DATA\",\r\n  // GET_CLIENT_ID:\"GET_CLIENT_ID\",\r\n  GET_SCHEDULED_COURSE:\"GET_SCHEDULED_COURSE\",\r\n  GET_DASHBOARD:\"GET_DASHBOARD\",\r\n  PENDING:\"_PENDING\",\r\n  FULFILLED:\"_FULFILLED\",\r\n  REJECTED:\"_REJECTED\",\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\hooks\\useWindowDimentions.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Input\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\baseLink\\link.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\httpRequest.js",["484"],"import axios from \"axios\";\r\nimport {getHeader} from \"./getHeader\";\r\nimport {link as backendLink} from \"../baseLink/link\";\r\n\r\nexport const httpRequest = (link, method, data) => {\r\n    return ({\r\n        method: method,\r\n        headers: getHeader(),\r\n        data: data,\r\n        url: `${backendLink}/${link}`\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\getHeader.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\TeachersPage\\index.jsx",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\ImagesPage\\index.jsx",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\StudentsPage\\index.jsx",["485"],"import React, {useEffect, useState} from \"react\"\r\nimport {Route} from \"react-router-dom\";\r\nimport PageNavbar from \"../../components/PageNavbar\";\r\nimport RequestedStudent from \"../../components/RequestedStudent\";\r\nimport UndecidedStudent from \"../../components/UndecidedStudent\";\r\nimport ToGetGiftStudent from \"../../components/ToGetGiftStudent\";\r\nimport TestedStudent from \"../../components/TestedStudent\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getRequestedStudents} from \"../../redux/modules/requestedStudents/requestedStudentsAction\";\r\nimport {getTestedStudents} from \"../../redux/modules/testedStudents/testedStudentsAction\";\r\nimport {getUndecidedStudents} from \"../../redux/modules/undecidedStudents/undecidedStudentsAction\";\r\nimport {getToGetGiftStudents} from \"../../redux/modules/toGetGiftStudents/toGetGiftStudentsAction\";\r\nimport WaitingList from \"../../components/WaitingList\";\r\nimport {getWaitingList} from \"../../redux/modules/waitingList/waitingListAction\";\r\n\r\nconst StudentsPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getRequestedStudents())\r\n        dispatch(getTestedStudents())\r\n        dispatch(getUndecidedStudents())\r\n        dispatch(getToGetGiftStudents())\r\n        dispatch(getWaitingList())\r\n    }, [])\r\n\r\n    const navs = [\r\n        {\r\n            name: \"Req\",\r\n            link: \"/students/requested\"\r\n        },\r\n        {\r\n            name: \"Unsure\",\r\n            link: \"/students/undecided\"\r\n        },\r\n        {\r\n            name: \"Gift\",\r\n            link: \"/students/to-get-gift\"\r\n        },\r\n        {\r\n            name: \"Test\",\r\n            link: \"/students/tested\"\r\n        },\r\n        {\r\n            name: \"Wait\",\r\n            link: \"/students/waiting-list\"\r\n        },\r\n    ]\r\n\r\n    const [waitData, setWaitData] = useState({})\r\n\r\n    return (\r\n        <>\r\n            <PageNavbar navs={navs}/>\r\n\r\n            <Route path={\"/students/requested\"}>\r\n                <RequestedStudent setWaitData={setWaitData}/>\r\n            </Route>\r\n            <Route path={\"/students/undecided\"}>\r\n                <UndecidedStudent setWaitData={setWaitData}/>\r\n            </Route>\r\n            <Route path={\"/students/to-get-gift\"}>\r\n                <ToGetGiftStudent setWaitData={setWaitData}/>\r\n            </Route>\r\n            <Route path={\"/students/tested\"}>\r\n                <TestedStudent setWaitData={setWaitData}/>\r\n            </Route>\r\n            <Route path={\"/students/waiting-list\"}>\r\n                <WaitingList waitData={waitData}/>\r\n            </Route>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentsPage","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\Dashboard\\index.jsx",["486","487","488","489","490","491"],"import React, {useEffect, useState} from \"react\"\r\nimport {\r\n    CardBox,\r\n    CardTitle,\r\n    ChartBox,\r\n    ChartNav,\r\n    ChartNavbarBox,\r\n    ChartNavs,\r\n    ChartTitle,\r\n    DashboardPageWrapper,\r\n    Data,\r\n    DisplayFlex,\r\n    Icon,\r\n    Main,\r\n    Numbers,\r\n    Secondary,\r\n    TopCardsBox,\r\n    TopCardsWrapper\r\n} from \"./styles\";\r\nimport {ReactComponent as UpDown} from \"../../assets/icons/up-down.svg\"\r\nimport {Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport useWindowDimensions from \"../../hooks/useWindowDimentions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getDashboard} from \"../../redux/modules/dashboard/dashboardAction\";\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // function getRandomColor() {\r\n    //     let letters = '0123456789ABCDEF';\r\n    //     let color = '#';\r\n    //     for (let i = 0; i < 6; i++) {\r\n    //         color += letters[Math.floor(Math.random() * 16)];\r\n    //     }\r\n    //     return color;\r\n    // }\r\n\r\n    const {width, height} = useWindowDimensions()\r\n\r\n    // const cardData = [\r\n    //     {\r\n    //         all: 650,\r\n    //         percent: 20,\r\n    //         name: \"Total number of students\"\r\n    //     }, {\r\n    //         all: 5,\r\n    //         percent: -10,\r\n    //         name: \" Course stopped students\"\r\n    //     }, {\r\n    //         all: 20,\r\n    //         percent: 10,\r\n    //         name: \"Course graduated students\"\r\n    //     }, {\r\n    //         all: 50,\r\n    //         percent: -7,\r\n    //         name: \"New students for academy\"\r\n    //     },\r\n    // ]\r\n\r\n    // const courseStudentData = [\r\n    //     {\r\n    //         categoryName: \"programming\",\r\n    //         numberOfStudents: 132,\r\n    //         courses: [\r\n    //             {\r\n    //                 courseName: \"frontend\",\r\n    //                 numberOfStudent: 13,\r\n    //                 color: \"var(--green)\"\r\n    //             }, {\r\n    //                 courseName: \"backend\",\r\n    //                 numberOfStudent: 46,\r\n    //                 color: \"var(--red)\"\r\n    //             }, {\r\n    //                 courseName: \"bootcamp\",\r\n    //                 numberOfStudent: 23,\r\n    //                 color: \"var(--grey)\"\r\n    //             }, {\r\n    //                 courseName: \"mobile\",\r\n    //                 numberOfStudent: 50,\r\n    //                 color: \"var(--light-blue)\"\r\n    //             },\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         categoryName: \"business\",\r\n    //         numberOfStudents: 94,\r\n    //         courses: [\r\n    //             {\r\n    //                 courseName: \"targeting\",\r\n    //                 numberOfStudent: 33,\r\n    //                 color: \"var(--green)\"\r\n    //             }, {\r\n    //                 courseName: \"smm\",\r\n    //                 numberOfStudent: 26,\r\n    //                 color: \"var(--red)\"\r\n    //             }, {\r\n    //                 courseName: \"marketing\",\r\n    //                 numberOfStudent: 35,\r\n    //                 color: \"var(--grey)\"\r\n    //             }\r\n    //             // , {\r\n    //             //     courseName: \"mobile\",\r\n    //             //     numberOfStudent: 50,\r\n    //             //     color:\"var(--light-blue)\"\r\n    //             // },\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         categoryName: \"language\",\r\n    //         numberOfStudents: 100,\r\n    //         courses: [\r\n    //             {\r\n    //                 courseName: \"english\",\r\n    //                 numberOfStudent: 25,\r\n    //                 color: \"var(--green)\"\r\n    //             }, {\r\n    //                 courseName: \"ielts\",\r\n    //                 numberOfStudent: 45,\r\n    //                 color: \"var(--red)\"\r\n    //             }, {\r\n    //                 courseName: \"arabic\",\r\n    //                 numberOfStudent: 30,\r\n    //                 color: \"var(--grey)\"\r\n    //             }\r\n    //             // , {\r\n    //             //     courseName: \"mobile\",\r\n    //             //     numberOfStudent: 26,\r\n    //             //     color:\"var(--light-blue)\"\r\n    //             // },\r\n    //         ]\r\n    //     },\r\n    // ]\r\n\r\n    // const data01 = [\r\n    //     {\r\n    //         \"name\": \"Group A\",\r\n    //         \"value\": 400\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group B\",\r\n    //         \"value\": 300\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group C\",\r\n    //         \"value\": 300\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group D\",\r\n    //         \"value\": 200\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group E\",\r\n    //         \"value\": 278\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group F\",\r\n    //         \"value\": 189\r\n    //     }\r\n    // ];\r\n    // const data02 = [\r\n    //     {\r\n    //         \"name\": \"Group A\",\r\n    //         \"value\": 2400\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group B\",\r\n    //         \"value\": 4567\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group C\",\r\n    //         \"value\": 1398\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group D\",\r\n    //         \"value\": 9800\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group E\",\r\n    //         \"value\": 3908\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Group F\",\r\n    //         \"value\": 4800\r\n    //     }\r\n    // ];\r\n    //\r\n    // const data = [\r\n    //     {\r\n    //         \"name\": \"Page A\",\r\n    //         \"uv\": 4000,\r\n    //         \"pv\": 2400,\r\n    //         \"amt\": 2400\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page B\",\r\n    //         \"uv\": 3000,\r\n    //         \"pv\": 1398,\r\n    //         \"amt\": 2210\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page C\",\r\n    //         \"uv\": 2000,\r\n    //         \"pv\": 9800,\r\n    //         \"amt\": 2290\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page D\",\r\n    //         \"uv\": 2780,\r\n    //         \"pv\": 3908,\r\n    //         \"amt\": 2000\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page E\",\r\n    //         \"uv\": 1890,\r\n    //         \"pv\": 4800,\r\n    //         \"amt\": 2181\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page F\",\r\n    //         \"uv\": 2390,\r\n    //         \"pv\": 3800,\r\n    //         \"amt\": 2500\r\n    //     },\r\n    //     {\r\n    //         \"name\": \"Page G\",\r\n    //         \"uv\": 3490,\r\n    //         \"pv\": 4300,\r\n    //         \"amt\": 2100\r\n    //     }\r\n    // ]\r\n    const category = {\r\n        programming: {\r\n            total: 143,\r\n            data: [\r\n                {\r\n                    \"name\": \"frontend\",\r\n                    \"uv\": 4000,\r\n                },\r\n                {\r\n                    \"name\": \"backend\",\r\n                    \"uv\": 3000,\r\n                },\r\n                {\r\n                    \"name\": \"mobile\",\r\n                    \"uv\": 2000,\r\n                },\r\n                {\r\n                    \"name\": \"bootcamp\",\r\n                    \"uv\": 2780,\r\n                }\r\n            ]\r\n        },\r\n        language: {\r\n            total: 143,\r\n            data: [\r\n                {\r\n                    \"name\": \"arabic\",\r\n                    \"uv\": 4000,\r\n                },\r\n                {\r\n                    \"name\": \"english\",\r\n                    \"uv\": 3000,\r\n                },\r\n                {\r\n                    \"name\": \"ielts\",\r\n                    \"uv\": 2000,\r\n                }\r\n            ]\r\n        },\r\n        design: {\r\n            total: 143,\r\n            data: [\r\n                {\r\n                    \"name\": \"ui & ux design\",\r\n                    \"uv\": 4000,\r\n                },\r\n                {\r\n                    \"name\": \"graphic design\",\r\n                    \"uv\": 3000,\r\n                }\r\n            ]\r\n        },\r\n        business: {\r\n            total: 143,\r\n            data: [\r\n                {\r\n                    \"name\": \"smm\",\r\n                    \"uv\": 3000,\r\n                },\r\n                {\r\n                    \"name\": \"targeting\",\r\n                    \"uv\": 2000,\r\n                },\r\n                {\r\n                    \"name\": \"marketing\",\r\n                    \"uv\": 2780,\r\n                }\r\n            ]\r\n        },\r\n    }\r\n\r\n    // const categories = [\r\n    //     {\r\n    //         name: \"programming\",\r\n    //         data: category.programming\r\n    //     },\r\n    //     {\r\n    //         name: \"business\",\r\n    //         data: category.business\r\n    //     },\r\n    //     {\r\n    //         name: \"design\",\r\n    //         data: category.design\r\n    //     },\r\n    //     {\r\n    //         name: \"language\",\r\n    //         data: category.language\r\n    //     }\r\n    // ]\r\n\r\n\r\n    const getDashboardData = () => {\r\n        dispatch(getDashboard())\r\n    }\r\n\r\n    const dashboardData = useSelector(state => state.dashboardReducer)\r\n\r\n    const {loading, error, dashboard} = dashboardData\r\n\r\n    const [courseData, setCourseData] = useState([])\r\n\r\n    const courseCategories = dashboard.categories;\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState({})\r\n\r\n    useEffect(() => {\r\n        getDashboardData();\r\n        setTimeout(() => setSelectedCategory({\r\n            id: 1,\r\n            categoryName: \"programming\"\r\n        }), 1000)\r\n        // getDashboardDataPromise.then(()=>setSelectedCategory(dashboard.categories[0]))\r\n    }, [])\r\n\r\n    const barChartData = () => {\r\n        setCourseData([])\r\n\r\n        dashboard?.byCategory.map(({courseType, numberOfStudent}) => {\r\n            if (courseType.category.id === selectedCategory.id) {\r\n                setCourseData((prevState) => ([...prevState, {name: courseType.courseName, uv: numberOfStudent}]))\r\n            }\r\n            // console.log(\"byCategory\", value)\r\n        })\r\n\r\n        // courseType.map((courseType, index) => {\r\n        //     if (courseType.category.id === selectedCategory.id) {\r\n        //         Object?.entries(dashboard?.byCategory).map((item) => {\r\n        //             console.log(\"item\", item)\r\n        //             const courseTypeId = parseInt(item[0]);\r\n        //             const numberOfStudent = item[1];\r\n        //\r\n        //             if (courseType.id === courseTypeId) {\r\n        //                 setCourseData((prevState) => ([...prevState, {name: courseType.courseName, uv: numberOfStudent}]))\r\n        //                 console.log(\"course data\",courseData)\r\n        //             } else {\r\n        //                 setCourseData((prevState) => ([...prevState, {name: courseType.courseName, uv: numberOfStudent}]))\r\n        //                 console.log(\"else course data\",courseData)\r\n        //\r\n        //             }\r\n        //         })\r\n        //     }\r\n        // })\r\n\r\n\r\n        // courseCategories?.map((categoryValue, index) => {\r\n        // dashboard.byCategory\r\n        // courseType.map((typeValue, index) => {\r\n        //     // typeValue.id\r\n        //     typeValue.category.id = selectedCategory.id\r\n        //     // categoryName\r\n        //     // setCourseData((prevState) => ({...prevState, [value?.id]: value?.categoryName}))\r\n        // })\r\n        // })\r\n\r\n        // console.log(dat)\r\n        // console.log(d)\r\n    }\r\n\r\n    useEffect(() => {\r\n        (!loading && !error && dashboard.byCategory !== undefined) &&\r\n        barChartData()\r\n    }, [selectedCategory])\r\n\r\n    // console.log(courseType)\r\n    // console.log(\"selected category\",selectedCategory)\r\n    // console.log(\"category\", dashboard.categories[0])\r\n\r\n\r\n    return (\r\n        <DashboardPageWrapper>\r\n            <TopCardsWrapper>\r\n                <TopCardsBox>\r\n                    {/*{cardData.map(({all, percent, name}, index) =>*/}\r\n                    <CardBox>\r\n                        <Data>\r\n                            <Icon\r\n                                // color={percent > 0}\r\n                            >\r\n                                <UpDown/>\r\n                            </Icon>\r\n                            <Numbers>\r\n                                <Main>\r\n                                    {dashboard.total}\r\n                                </Main>\r\n                                <Secondary\r\n                                    // color={percent > 0}\r\n                                >\r\n                                    {/*{percent > 0 ? \"+\" : \"\"}{percent}%*/}\r\n                                </Secondary>\r\n                            </Numbers>\r\n                        </Data>\r\n                        <CardTitle>Total number of students</CardTitle>\r\n                    </CardBox>\r\n                    <CardBox>\r\n                        <Data>\r\n                            <Icon\r\n                                // color={percent > 0}\r\n                            >\r\n                                <UpDown/>\r\n                            </Icon>\r\n                            <Numbers>\r\n                                <Main>\r\n                                    {dashboard.stopped}\r\n                                </Main>\r\n                                <Secondary\r\n                                    // color={percent > 0}\r\n                                >\r\n                                    {/*{percent > 0 ? \"+\" : \"\"}{percent}%*/}\r\n                                </Secondary>\r\n                            </Numbers>\r\n                        </Data>\r\n                        <CardTitle>Course stopped students</CardTitle>\r\n                    </CardBox>\r\n                    <CardBox>\r\n                        <Data>\r\n                            <Icon\r\n                                // color={percent > 0}\r\n                            >\r\n                                <UpDown/>\r\n                            </Icon>\r\n                            <Numbers>\r\n                                <Main>\r\n                                    {dashboard.graduated}\r\n                                </Main>\r\n                                <Secondary\r\n                                    // color={percent > 0}\r\n                                >\r\n                                    {/*{percent > 0 ? \"+\" : \"\"}{percent}%*/}\r\n                                </Secondary>\r\n                            </Numbers>\r\n                        </Data>\r\n                        <CardTitle>Course graduated students</CardTitle>\r\n                    </CardBox>\r\n                    <CardBox>\r\n                        <Data>\r\n                            <Icon\r\n                                // color={percent > 0}\r\n                            >\r\n                                <UpDown/>\r\n                            </Icon>\r\n                            <Numbers>\r\n                                <Main>\r\n                                    {dashboard.freshman}\r\n                                </Main>\r\n                                <Secondary\r\n                                    // color={percent > 0}\r\n                                >\r\n                                    {/*{percent > 0 ? \"+\" : \"\"}{percent}%*/}\r\n                                </Secondary>\r\n                            </Numbers>\r\n                        </Data>\r\n                        <CardTitle>New students for academy</CardTitle>\r\n                    </CardBox>\r\n                    {/*)}*/}\r\n\r\n                </TopCardsBox>\r\n            </TopCardsWrapper>\r\n            <DisplayFlex>\r\n\r\n                {/*<CardStudentNumber>*/}\r\n                {/*    {courseStudentData.map(({categoryName, numberOfStudents, courses}) =>*/}\r\n                {/*        <>*/}\r\n                {/*            <Category>{categoryName} <small>{numberOfStudents}</small></Category>*/}\r\n                {/*            <Line>*/}\r\n                {/*                {courses.map(({courseName, numberOfStudent, color}) =>*/}\r\n                {/*                    <InsideLine width={(numberOfStudent / numberOfStudents * 100) + \"%\"}*/}\r\n                {/*                                color={getRandomColor}>*/}\r\n                {/*                        <CourseNumber className={\"course\"}>*/}\r\n                {/*                            <p>*/}\r\n                {/*                                {courseName}*/}\r\n                {/*                            </p>*/}\r\n                {/*                            <p>*/}\r\n                {/*                                {numberOfStudent}*/}\r\n                {/*                            </p>*/}\r\n                {/*                        </CourseNumber>*/}\r\n                {/*                    </InsideLine>*/}\r\n                {/*                )}*/}\r\n                {/*            </Line>*/}\r\n                {/*        </>*/}\r\n                {/*    )}*/}\r\n                {/*</CardStudentNumber>*/}\r\n                <ChartBox width={\"65.5%\"} id={\"students-chart\"}>\r\n                    <ChartNavbarBox>\r\n                        <ChartNavs>\r\n                            {courseCategories?.map(((value) =>\r\n                                    <ChartNav key={value.id} clicked={selectedCategory.id === value.id}\r\n                                              onClick={() => {\r\n                                                  setSelectedCategory(value);\r\n                                                  // barCharData()\r\n                                              }}>\r\n                                        {value.categoryName}\r\n                                    </ChartNav>\r\n                            ))}\r\n                        </ChartNavs>\r\n                    </ChartNavbarBox>\r\n\r\n\r\n                    <ChartTitle>Students of {selectedCategory.categoryName}</ChartTitle>\r\n                    <BarChart\r\n                        width={\r\n                            (document.getElementById(\"students-chart\")?.clientWidth) - 20\r\n                            // width > 1150 ? 630 : width > 900 ? 780 : width > 700 ? 580 : width > 600 ? 480 : 300\r\n                        }\r\n                        height={200}\r\n                        data={\r\n                            // selectedCategory.data.data\r\n                            courseData\r\n                        }\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                        <XAxis dataKey=\"name\"/>\r\n                        <YAxis/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        {/*<Bar dataKey=\"pv\" fill=\"#8884d8\"/>*/}\r\n                        <Bar legendType={\"none\"} dataKey=\"uv\" fill=\"#ffbf2b\"/>\r\n                    </BarChart>\r\n                </ChartBox>\r\n                {/*<ChartBox pieChart>*/}\r\n                {/*    <Center>*/}\r\n                {/*        <PieChart width={250} height={250}>*/}\r\n                {/*            <Pie*/}\r\n                {/*                dataKey=\"value\"*/}\r\n                {/*                isAnimationActive={false}*/}\r\n                {/*                data={data01}*/}\r\n                {/*                cx=\"50%\"*/}\r\n                {/*                cy=\"50%\"*/}\r\n                {/*                outerRadius={60}*/}\r\n                {/*                fill=\"#ffbf4b\"*/}\r\n                {/*                label={{color: \"black\"}}*/}\r\n                {/*            />*/}\r\n                {/*            <Pie dataKey=\"value\" data={data02} cx={400} cy={200} innerRadius={30} outerRadius={80}*/}\r\n                {/*                 fill=\"#82ca9d\"/>*/}\r\n                {/*            <Tooltip/>*/}\r\n                {/*            <LabelList/>*/}\r\n                {/*        </PieChart>*/}\r\n                {/*    </Center>*/}\r\n\r\n                {/*</ChartBox>*/}\r\n            </DisplayFlex>\r\n\r\n        </DashboardPageWrapper>\r\n    )\r\n}\r\n\r\nexport default Dashboard","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\ClientsPage\\index.jsx",["492","493","494","495","496","497","498","499","500","501","502","503"],"import React, {useEffect, useState} from \"react\"\r\nimport {Route} from \"react-router-dom\";\r\nimport PageNavbar from \"../../components/PageNavbar\";\r\nimport RequestedStudent from \"../../components/RequestedStudent\";\r\nimport UndecidedStudent from \"../../components/UndecidedStudent\";\r\nimport ToGetGiftStudent from \"../../components/ToGetGiftStudent\";\r\nimport TestedStudent from \"../../components/TestedStudent\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getRequestedStudents} from \"../../redux/modules/requestedStudents/requestedStudentsAction\";\r\nimport {getTestedStudents} from \"../../redux/modules/testedStudents/testedStudentsAction\";\r\nimport {getUndecidedStudents} from \"../../redux/modules/undecidedStudents/undecidedStudentsAction\";\r\nimport {getToGetGiftStudents} from \"../../redux/modules/toGetGiftStudents/toGetGiftStudentsAction\";\r\nimport WaitingList from \"../../components/WaitingList\";\r\nimport {getWaitingList} from \"../../redux/modules/waitingList/waitingListAction\";\r\nimport ClientsList from \"../../components/ClientsList\";\r\nimport AddClient from \"../../components/AddClient\";\r\nimport PersonalCabinet from \"../PersonalCabinet\";\r\n\r\nconst ClientsPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        // dispatch(getRequestedStudents())\r\n        // dispatch(getTestedStudents())\r\n        // dispatch(getUndecidedStudents())\r\n        // dispatch(getToGetGiftStudents())\r\n        // dispatch(getWaitingList())\r\n    }, [])\r\n\r\n    const navs = [\r\n        {\r\n            name: \"List\",\r\n            link: \"/clients/list\"\r\n        },\r\n        {\r\n            name: \"Add\",\r\n            link: \"/clients/add\"\r\n        }\r\n    ]\r\n\r\n    const [id, setId] = useState()\r\n\r\n    useEffect(() => {\r\n        console.log(id)\r\n    }, [id])\r\n\r\n    // const clientId = useSelector(state => state.clientIdReducer);\r\n\r\n    return (\r\n        <>\r\n            <PageNavbar navs={navs}/>\r\n\r\n            <Route path={\"/clients/list\"}>\r\n                <ClientsList setId={setId}/>\r\n            </Route>\r\n            <Route path={\"/clients/add\"}>\r\n                <AddClient/>\r\n            </Route>\r\n            <Route path={`/clients/id/:id`}>\r\n                <PersonalCabinet/>\r\n            </Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClientsPage","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddCourse\\index.jsx",["504","505"],"import React, {useState} from \"react\"\r\nimport {Button, Form, Input, Label, Textarea, Title} from \"../Input/styles\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst AddCourse = ({editValue}) => {\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n    const submitCourse = (e) => {\r\n        e.preventDefault()\r\n        setSubmissionProcess({loading: false, error: false, success: false})\r\n\r\n        const [\r\n            courseNameUz,\r\n            courseNameRu,\r\n            descriptionUz,\r\n            descriptionRu,\r\n            category,\r\n            course,\r\n            tags,\r\n            duration,\r\n            discount,\r\n            courseIcon] = e.target\r\n\r\n        const form = {\r\n            courseName_uz: courseNameUz.value,\r\n            courseName_ru: courseNameRu.value,\r\n            description_uz: descriptionUz.value,\r\n            description_ru: descriptionRu.value,\r\n            category: category.value,\r\n            subCategory: course.value,\r\n            tags: tags.value,\r\n            duration: duration.value,\r\n            discount: discount.value,\r\n            courseIcon: courseIcon.value\r\n        }\r\n\r\n        axios(httpRequest(\"courses\", \"POST\", form))\r\n            // .post( `${link}/courses\"`, form )\r\n            // axios.post( \"localhost:8080/api/v1/image/files/upload\", e.target.courseIcon )\r\n            .then(res => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 5000)\r\n            })\r\n        // console.log(e.target.courseIcon.file)\r\n    }\r\n\r\n    const {loading, error, success} = submissionProcess;\r\n    return (\r\n        <Form onSubmit={submitCourse}>\r\n            <Title>Courses Form</Title>\r\n            {/*<Label>Course Name Uz</Label>*/}\r\n            <Input name={\"courseNameUz\"} title={\"course name uz\"} type={\"text\"} placeholder={\"Course name uz\"}\r\n                   defaultValue={editValue?.id ? editValue.courseName_uz : ''}/>\r\n            {/*<br/>*/}\r\n            {/*<Label>Course Name Ru</Label>*/}\r\n            <Input name={\"courseNameRu\"} title={\"course name ru\"} type={\"text\"} placeholder={\"Course name ru\"}\r\n                   defaultValue={editValue?.id ? editValue.courseName_ru : ''}/>\r\n            {/*<br/>*/}\r\n            {/*<Label>Description Uz</Label>*/}\r\n            <Textarea name={\"descriptionUz\"} title={\"description uz\"} row={2} placeholder={\"Description uz\"}\r\n                      defaultValue={editValue?.id ? editValue.description_uz : ''}/>\r\n            {/*<br/>*/}\r\n            {/*<Label>Description Ru</Label>*/}\r\n            <Textarea name={\"descriptionRu\"} title={\"description ru\"} row={2} placeholder={\"Description ru\"}\r\n                      defaultValue={editValue?.id ? editValue.description_ru : ''}/>\r\n            {/*<br/>*/}\r\n            {/*<Label>Category</Label>*/}\r\n            <Input name={\"category\"} title={\"category\"} type={\"text\"} placeholder={\"Category\"}\r\n                   defaultValue={editValue?.id ? editValue.category : ''}/>\r\n            {/*<br/>*/}\r\n            {/*<Label>Course</Label>*/}\r\n            <Input name={\"course\"} title={\"course\"} type={\"text\"} placeholder={\"Course\"}\r\n                   defaultValue={editValue?.id ? editValue.subCategory : ''}/>\r\n            {/*<br/>*/}\r\n            {/*<Label>Tags</Label>*/}\r\n            <Input name={\"tags\"} title={\"tags\"} type={\"text\"} placeholder={\"tags\"}\r\n                   defaultValue={editValue?.id ? editValue.tags : ''}/>\r\n            {/*<br/>*/}\r\n            {/*<Label>Duration</Label>*/}\r\n            <Input name={\"duration\"} title={\"duration\"} type={\"number\"} min={0} placeholder={\"Duration\"}\r\n                   defaultValue={editValue?.id ? editValue.duration : ''}/>\r\n            {/*<br/>*/}\r\n            {/*<Label>Discount</Label>*/}\r\n            <Input name={\"discount\"} title={\"discount\"} type={\"number\"} min={0} placeholder={\"Discount\"}\r\n                   defaultValue={editValue?.id ? editValue.discount : ''}/>\r\n            {/*<br/>*/}\r\n            {/*<Label>Image</Label>*/}\r\n            <Input name={\"courseIcon\"} title={\"image id\"} type={\"text\"} placeholder={\"Image id\"}\r\n                   defaultValue={editValue?.id ? editValue.courseIcon : ''}/>\r\n            {/*<br/>*/}\r\n            <Button disabled={loading || error || success} loading={loading} error={error} success={success}>\r\n                {\r\n                    loading ? \"loading...\" :\r\n                        error ? \"error\" :\r\n                            success ? \"success\" :\r\n                                \"Submit\"\r\n                }\r\n            </Button>\r\n            {/*<Button>submit</Button>*/}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default AddCourse","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\ScheduledCoursePage\\index.jsx",["506","507"],"import React, {Component, useEffect} from 'react';\r\nimport {Route} from \"react-router-dom\";\r\nimport PageNavbar from \"../../components/PageNavbar\";\r\nimport AddScheduledCourse from \"../../components/AddScheduledCourse\";\r\nimport ScheduledCourseList from \"../../components/ScheduledCourseList\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getScheduledCourses} from \"../../redux/modules/scheduledCourses/scheduledCoursesAction\";\r\n\r\nconst ScheduledCoursePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getScheduledCourses())\r\n    }, [getScheduledCourses])\r\n\r\n    const navs = [\r\n        {\r\n            name: \"List\",\r\n            link: \"/scheduled-courses/list\"\r\n        },\r\n        {\r\n            name: \"Add\",\r\n            link: \"/scheduled-courses/add\"\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <PageNavbar navs={navs}/>\r\n            <Route path={\"/scheduled-courses/add\"}>\r\n                <AddScheduledCourse/>\r\n            </Route>\r\n            <Route path={\"/scheduled-courses/list\"}>\r\n                <ScheduledCourseList/>\r\n            </Route>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScheduledCoursePage;","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\CoursesPage\\index.jsx",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\BotPage\\index.jsx",["508","509","510"],"import React, {useEffect} from 'react';\r\nimport PageNavbar from \"../../components/PageNavbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport TeachersList from \"../../components/TeachersList\";\r\nimport AddTeacher from \"../../components/AddTeacher\";\r\nimport BotLesson from \"../../components/BotLesson\";\r\nimport BotContent from \"../../components/BotContent\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getTelegramFile} from \"../../redux/modules/telegramFile/telegramFileAction\";\r\nimport {getLessonData} from \"../../redux/modules/lessonData/lessonDataAction\";\r\n\r\nconst BotPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getTelegramFile())\r\n        dispatch(getLessonData())\r\n    }, [])\r\n\r\n    const navs = [\r\n        {\r\n            name: \"Lessons\",\r\n            link: \"/bot/lessons\"\r\n        },\r\n        {\r\n            name: \"Content\",\r\n            link: \"/bot/content\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <PageNavbar navs={navs}/>\r\n            <Route path={\"/bot/lessons\"}>\r\n                <BotLesson/>\r\n            </Route>\r\n            <Route path={\"/bot/content\"}>\r\n                <BotContent/>\r\n            </Route>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BotPage;","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\CoursesList\\index.jsx",["511","512","513","514","515","516","517","518","519","520","521","522"],"import React, {useEffect, useState} from \"react\"\r\nimport {\r\n    ActionsBox,\r\n    BirthDate, Button, ButtonsBox,\r\n    CardBox,\r\n    CardImg,\r\n    Category, CategoryCourseName,\r\n    CourseName, DeletionBackground, DeletionImg, DeletionPage, DeletionText,\r\n    Description, DescriptionBox,\r\n    DisplayFlex,\r\n    HashTags,\r\n    LangIn, Number, Numbers, TableImg, TableRow, TableWrapper,\r\n    WrapperCoursesList\r\n} from \"./styles\";\r\n// import img from \"../../assets/images/firebird.png\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {getCourses} from \"../../redux/modules/courses/coursesAction\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport axios from \"axios\";\r\n\r\nimport {useHistory} from \"react-router\";\r\nimport {ActionBox, Delete, Edit} from \"./styles\";\r\nimport {ReactComponent as EditIcon} from \"../../assets/icons/edit.svg\";\r\nimport {ReactComponent as DeleteIcon} from \"../../assets/icons/bin.svg\";\r\nimport {Add, NavbarBox, PageTitle} from \"./styles\";\r\nimport {ReactComponent as PlusIcon} from \"../../assets/icons/plus-img.svg\";\r\nimport PageTitleAdd from \"../PageTitleAdd\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nfunction CoursesList({setEditValue}) {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getCourses())\r\n    }, [getCourses])\r\n    const course = useSelector(state => state.coursesReducer)\r\n\r\n    const [deleteProcess, setDeleteProcess] = useState({loading: false, error: false, success: false})\r\n\r\n    const deleteCourse = (id) => {\r\n        setDeleteProcess({loading: true, error: false, success: false})\r\n        axios(httpRequest(`courses/${id}`,\"DELETE\"))\r\n            // .delete(`${link}/courses/${id}`)\r\n            .then(res => {\r\n                console.log(res)\r\n                setDeleteProcess({loading: false, error: false, success: true})\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setDeleteProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(res => {\r\n                console.log(res)\r\n                setTimeout(() => setDeleteProcess({loading: false, error: false, success: false}), 3000)\r\n            })\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    const {loading, error, courses} = course\r\n\r\n    return (\r\n        <>\r\n            <PageTitleAdd title={\"Courses\"} link={\"/courses/add\"}/>\r\n\r\n            <WrapperCoursesList>\r\n                <h1>\r\n                    {loading && <Loading/>}\r\n                    {error && <ErrorBox/>}\r\n                </h1>\r\n\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    courses?.map(\r\n                        (\r\n                            {\r\n                                id,\r\n                                courseName_uz,\r\n                                courseName_ru,\r\n                                description_uz,\r\n                                description_ru,\r\n                                category,\r\n                                subCategory,\r\n                                tags,\r\n                                duration,\r\n                                discount,\r\n                                courseIcon\r\n                            }) =>\r\n                            <TableRow key={id}>\r\n                                <TableImg>\r\n                                    <img src={`${link}/images/files/${courseIcon}`} alt=\"\"/>\r\n                                </TableImg>\r\n\r\n                                <CategoryCourseName>\r\n                                    <DisplayFlex>\r\n                                        <CourseName>\r\n                                            {/*<LangIn>uz</LangIn>*/}\r\n                                            {courseName_uz}\r\n                                        </CourseName>\r\n                                        {/*<CourseName>*/}\r\n                                        {/*    <LangIn>ru</LangIn>*/}\r\n                                        {/*    {courseName_ru}*/}\r\n                                        {/*</CourseName>*/}\r\n                                    </DisplayFlex>\r\n                                    <Category>\r\n                                        {`${category} | ${subCategory}`}\r\n                                    </Category>\r\n                                </CategoryCourseName>\r\n                                <DescriptionBox>\r\n                                    <Description>\r\n                                        {/*<LangIn>uz</LangIn>*/}\r\n                                        {description_uz}\r\n                                    </Description>\r\n                                    {/*<Description>*/}\r\n                                    {/*    <LangIn>ru</LangIn>*/}\r\n                                    {/*    {description_ru}*/}\r\n                                    {/*</Description>*/}\r\n                                </DescriptionBox>\r\n                                {/*<HashTags>*/}\r\n                                {/*    {tags}*/}\r\n                                {/*</HashTags>*/}\r\n                                <Numbers>\r\n                                    {discount > 0 && <Number>-{discount}%</Number>}\r\n                                    <Number>{duration} {duration === 1 ? \"month\" : \"months\"}</Number>\r\n                                </Numbers>\r\n                                <ActionBox>\r\n                                    <Edit bgColor={\"green\"} onClick={() => {\r\n                                        history.push(\"/courses/add\")\r\n                                        setEditValue({\r\n                                            id,\r\n                                            courseName_uz,\r\n                                            courseName_ru,\r\n                                            description_uz,\r\n                                            description_ru,\r\n                                            category,\r\n                                            subCategory,\r\n                                            tags,\r\n                                            duration,\r\n                                            discount,\r\n                                            courseIcon\r\n                                        })\r\n                                    }}\r\n                                    >\r\n                                        <EditIcon/>\r\n                                    </Edit>\r\n                                    <Delete bgColor={\"red\"} onClick={() => setDeletionData({\r\n                                        popUp: true,\r\n                                        data: {id, courseName_uz, category, subCategory, courseIcon}\r\n                                    })}>\r\n                                        {\r\n                                            deleteProcess.loading ? \"loading...\" :\r\n                                                deleteProcess.error ? \"error\" :\r\n                                                    deleteProcess.success ? \"success\" :\r\n                                                        <DeleteIcon/>\r\n                                        }\r\n                                    </Delete>\r\n                                </ActionBox>\r\n                            </TableRow>\r\n                    )}\r\n                </TableWrapper>\r\n            </WrapperCoursesList>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionImg>\r\n                        <img src={`${link}/images/files/${deletionData.data?.courseIcon}`} alt=\"\"/>\r\n                    </DeletionImg>\r\n                    <DeletionText>\r\n                        {deletionData.data?.courseName_uz} <br/>\r\n                        <small>{`${deletionData.data?.category} | ${deletionData.data?.subCategory}`}</small>\r\n                    </DeletionText> <br/>\r\n                    <DeletionText>Do you really want to delete this course ?</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit onClick={() => setDeletionData({popUp: false, data: {}})}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete onClick={() => deleteCourse(deletionData.data?.id)}>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CoursesList","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\LeftNavbar\\index.jsx",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\PageNavbar\\index.jsx",["523"],"import React from \"react\"\r\nimport { PageNav, PageNavs, WrapperPageNavbar } from \"./styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageNavbar = ({navs}) => {\r\n  return (\r\n    <WrapperPageNavbar>\r\n      <PageNavs>\r\n        {\r\n          navs?.map((navData=>\r\n              <PageNav to={navData.link} key={navData.name}>\r\n                { navData.name }\r\n              </PageNav>\r\n          ))\r\n        }\r\n      </PageNavs>\r\n    </WrapperPageNavbar>\r\n  )\r\n}\r\n\r\nexport default PageNavbar","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\testedStudents\\testedStudentsAction.js",["524"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getTestedStudents=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:actionTypes.GET_TESTED_STUDENT,\r\n        payload:axios(httpRequest(\"tested-student\",\"GET\"))\r\n            // .get(`${link}/tested-student`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\Dashboard\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\toGetGiftStudents\\toGetGiftStudentsAction.js",["525"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getToGetGiftStudents = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_TO_GET_GIFT_STUDENT,\r\n        payload: axios(httpRequest(`toGetGift`, \"GET\"))\r\n        // .get(`${link}/toGetGift`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\waitingList\\waitingListAction.js",["526"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getWaitingList = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_WAITING_LIST,\r\n        payload: axios(httpRequest(\"waiting-list\", \"GET\"))\r\n        // .get(`${link}/waiting-list`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\requestedStudents\\requestedStudentsAction.js",["527"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getRequestedStudents=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:actionTypes.GET_REQUESTED_STUDENT,\r\n        payload:axios(httpRequest(\"enrolledStudent\",\"GET\"))\r\n            // .get(`${link}/enrolledStudent`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\undecidedStudents\\undecidedStudentsAction.js",["528"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getUndecidedStudents=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:actionTypes.GET_UNDECIDED_STUDENT,\r\n        payload:axios(httpRequest(\"undecidedStudent\",\"GET\"))\r\n            // .get(`${link}/undecidedStudent`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\PageNavbar\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\LeftNavbar\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\CoursesList\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\lessonData\\lessonDataAction.js",["529"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getLessonData = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_LESSON_DATA,\r\n        payload: axios(httpRequest(\"lesson-data\",\"GET\"))\r\n            // .get(`${link}/lesson-data`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\telegramFile\\telegramFileAction.js",["530"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getTelegramFile = (level) => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_TELEGRAM_FILE,\r\n        payload: axios(httpRequest(`telegram-file/level/${level}`,\"GET\"))\r\n            // .get(`${link}/telegram-file/level/${level}`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\courses\\coursesAction.js",["531"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getCourses=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:actionTypes.GET_COURSES,\r\n        payload:axios(httpRequest(\"courses\",\"GET\"))\r\n            // .get(`${link}/courses`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\scheduledCourses\\scheduledCoursesAction.js",["532"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getScheduledCourses=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:actionTypes.GET_SCHEDULED_COURSE,\r\n        payload:axios(httpRequest(\"scheduled-course\",\"GET\"))\r\n            // .get(`${link}/scheduled-course`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddTeacher\\index.jsx",["533"],"import React, {useState} from \"react\"\r\nimport axios from \"axios\";\r\nimport {Form, Input, Textarea, Title} from \"../Input/styles\";\r\nimport {Button} from \"../Input/styles\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst AddTeacher = ({editValue}) => {\r\n\r\n    const [submitProcess, setSubmitProcess] = useState({loading: false, error: false, success: false})\r\n\r\n    const submitTeacher = (e) => {\r\n        e.preventDefault()\r\n        setSubmitProcess({loading: true, error: false, success: false})\r\n\r\n        const [\r\n            teacherFullName,\r\n            birthDate,\r\n            description,\r\n            image,\r\n            position] = e.target\r\n\r\n        const form = {\r\n            teacherFullName: teacherFullName.value,\r\n            birthDate: birthDate.value,\r\n            description: description.value,\r\n            image: image.value,\r\n            position: position.value\r\n        }\r\n\r\n        axios(httpRequest(\"teachers\", \"POST\", form))\r\n            // .post(`${link}/teachers`, form)\r\n            .then(res => {\r\n                console.log(res)\r\n                setSubmitProcess({loading: false, error: false, success: true})\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setSubmitProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(res => {\r\n                console.log(res)\r\n                setTimeout(() => setSubmitProcess({loading: false, error: false, success: false}), 5000)\r\n            })\r\n    }\r\n\r\n    const [editProcess, setEditProcess] = useState({loading: false, error: false, success: false})\r\n\r\n    const editTeacher = (e) => {\r\n        e.preventDefault()\r\n        setEditProcess({loading: false, error: false, success: false})\r\n\r\n        const [\r\n            teacherFullName,\r\n            birthDate,\r\n            description,\r\n            image,\r\n            position] = e.target\r\n\r\n        const form = {\r\n            teacherFullName: teacherFullName.value,\r\n            birthDate: birthDate.value,\r\n            description: description.value,\r\n            image: image.value,\r\n            position: position.value\r\n        }\r\n\r\n        console.log(form)\r\n        axios(httpRequest(`teachers/${editValue.id}`, \"PUT\", form))\r\n            // .put(`${link}/teachers/${editValue.id}`, form)\r\n            .then(res => {\r\n                console.log(res)\r\n                setEditProcess({loading: false, error: false, success: true})\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err)\r\n                setEditProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(res => {\r\n                console.log(res)\r\n                setTimeout(() => setEditProcess({loading: false, error: false, success: false}), 3000)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        console.log(\"on submit  clicked\")\r\n        if (editValue.id !== null) {\r\n            editTeacher(e)\r\n            console.log(\"edit clicked\")\r\n        } else {\r\n            submitTeacher(e)\r\n            console.log(\"submit clicked\")\r\n        }\r\n    }\r\n\r\n    const {loading, error, success} = (editValue.id ? editProcess : submitProcess)\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n\r\n            <Title>Teachers Form</Title>\r\n\r\n            <Input required name={\"teacherFullName\"} type={\"text\"} placeholder={\"Full Name\"}\r\n                   defaultValue={editValue.id ? editValue.teacherFullName : ''}/>\r\n\r\n            <Input required name={\"birthDate\"} type={\"date\"} placeholder={\"Date of birth\"}\r\n                   defaultValue={editValue.id ? editValue?.birthDate.split(\"T\")[0] : ''}/>\r\n\r\n            <Textarea rows={4} required name={\"description\"} placeholder={\"Quote\"}\r\n                      defaultValue={editValue.id ? editValue.description : ''}/>\r\n            <br/>\r\n\r\n            <Input required name={\"image\"} type={\"text\"} placeholder={\"Image id\"}\r\n                   defaultValue={editValue.id ? editValue.image : ''}/>\r\n\r\n            <Input required name={\"position\"} type={\"text\"} placeholder={\"Position\"}\r\n                   defaultValue={editValue.id ? editValue.position : ''}/>\r\n\r\n            <Button disabled={loading || error || success} loading={loading} error={error} success={success}>\r\n                {\r\n                    loading ? \"loading...\" :\r\n                        error ? \"error\" :\r\n                            success ? \"success\" :\r\n                                (editValue.id ? \"Edit\" : \"Submit\")\r\n                }\r\n            </Button>\r\n            {/*// }*/}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default AddTeacher","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\TeachersList\\index.jsx",["534","535","536","537","538","539","540","541","542","543"],"import React, {useEffect, useState} from \"react\"\r\nimport {\r\n    ActionBox, ActionsBox,\r\n    BirthDate,\r\n    Button,\r\n    ButtonsBox,\r\n    CardBox,\r\n    CardImg, DateOfBirth, Day, DayMonth, Delete, DeletionBackground, DeletionImg, DeletionPage, DeletionText,\r\n    Description, Edit,\r\n    FullName, FullNameBox, FullNames,\r\n    LangIn, Month,\r\n    Position, TableImg, TableRow, TableWrapper,\r\n    WrapperTeachersList, Year\r\n} from \"./styles\";\r\n// import img from \"../../assets/images/firebird.png\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getTeachers} from \"../../redux/modules/teachers/teachersAction\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router\";\r\nimport {whichMonth} from \"../../util/whichMonth\";\r\n\r\n//icons\r\nimport {ReactComponent as EditIcon} from \"../../assets/icons/edit.svg\"\r\nimport {ReactComponent as DeleteIcon} from \"../../assets/icons/bin.svg\"\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\"\r\nimport PageTitleAdd from \"../PageTitleAdd\";\r\nimport {DisplayFlex} from \"../CoursesList/styles\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\n\r\nconst TeachersList = ({setEditValue}) => {\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const getTeachersDispatch = () => {\r\n        dispatch(getTeachers())\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTeachersDispatch()\r\n    }, [getTeachers])\r\n    const teacher = useSelector(state => state.teacherReducer)\r\n\r\n    const deleteTeacherById = (id) => {\r\n        axios(httpRequest(`teachers/${id}`,\"DELETE\"))\r\n            // .delete(`${link}/teachers/${id}`)\r\n            .then(res => {\r\n                // console.log(\"deleted\")\r\n                console.log(res)\r\n                getTeachersDispatch()\r\n                setDeletionData({popUp:false,data:{}})\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"error deleted\")\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    const {loading, error, teachers} = teacher\r\n    return (\r\n        <>\r\n            <WrapperTeachersList>\r\n                <PageTitleAdd title={\"Teachers\"} link={\"/teachers/add\"}/>\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    teachers?.map(({\r\n                                       id,\r\n                                       teacherFullName,\r\n                                       birthDate,\r\n                                       description,\r\n                                       image,\r\n                                       position\r\n                                   }, index) => {\r\n                            const dob = birthDate.split(\"T\")[0].split(\"-\");\r\n                            const day = dob[2];\r\n                            const month = whichMonth(dob[1]);\r\n                            const year = dob[0];\r\n                            return (\r\n                                <TableRow key={id}>\r\n                                    <TableImg>\r\n                                        <img src={`${link}/images/files/${image}`} alt=\"\"/>\r\n                                    </TableImg>\r\n                                    <FullNameBox>\r\n                                        <FullName>\r\n                                            {teacherFullName}\r\n                                        </FullName>\r\n                                        <Position>\r\n                                            {position}\r\n                                        </Position>\r\n                                    </FullNameBox>\r\n                                    <DateOfBirth>\r\n                                        <DayMonth>\r\n                                            <Day>{day}</Day>\r\n                                            <Month>{month}</Month>\r\n                                        </DayMonth>\r\n                                        <Year>{year}</Year>\r\n                                    </DateOfBirth>\r\n\r\n                                    <ActionBox>\r\n                                        <Edit bgColor={\"green\"} onClick={() => {\r\n                                            history.push(\"/teachers/add\")\r\n                                            setEditValue({\r\n                                                id,\r\n                                                teacherFullName,\r\n                                                birthDate,\r\n                                                description,\r\n                                                image,\r\n                                                position\r\n                                            })\r\n                                        }}>\r\n                                            <EditIcon/>\r\n                                        </Edit>\r\n                                        <Delete bgColor={\"red\"} onClick={() =>\r\n                                            setDeletionData({\r\n                                                popUp: true,\r\n                                                data: {\r\n                                                    id,\r\n                                                    teacherFullName,\r\n                                                    birthDate,\r\n                                                    description,\r\n                                                    image,\r\n                                                    position\r\n                                                }\r\n                                            })}>\r\n                                            <DeleteIcon/>\r\n                                        </Delete>\r\n                                    </ActionBox>\r\n\r\n                                    {/*</CardBox>*/}\r\n                                </TableRow>)\r\n                        }\r\n                    )\r\n                    }\r\n                </TableWrapper>\r\n            </WrapperTeachersList>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionImg>\r\n                        <img src={`${link}/images/files/${deletionData.data?.image}`} alt=\"\"/>\r\n                    </DeletionImg>\r\n                    <DeletionText>\r\n                        {deletionData.data?.teacherFullName}\r\n                        <br/>\r\n                        <small>{deletionData.data?.position}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            deleteTeacherById(deletionData.data?.id)\r\n                        }>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeachersList","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ImagesList\\index.jsx",["544","545","546","547","548","549","550","551"],"import React, {useEffect, useState} from \"react\"\r\nimport axios from \"axios\";\r\nimport {\r\n    ActionsBox, Add,\r\n    CopiedMessage,\r\n    Copy,\r\n    Delete, DeletionBackground, DeletionImg, DeletionPage, DeletionText,\r\n    ImageBox,\r\n    ImageData,\r\n    ImageId,\r\n    ImagesBox,\r\n    Img,\r\n    ImgBox,\r\n    NavbarBox, PageTitle\r\n} from \"./styles\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\n\r\n//icon\r\nimport {ReactComponent as CopyIcon} from \"../../assets/icons/copy.svg\"\r\nimport {ReactComponent as DeleteIcon} from \"../../assets/icons/bin.svg\"\r\nimport {ReactComponent as PlusIcon} from \"../../assets/icons/plus-img.svg\"\r\nimport {ReactComponent as Arrow} from \"../../assets/icons/arrow.svg\"\r\nimport {link} from \"../../baseLink/link\";\r\nimport PageTitleAdd from \"../PageTitleAdd\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst ImagesList = () => {\r\n\r\n    let ids = []\r\n    const [state, setState] = useState([])\r\n\r\n    const [copied, setCopied] = useState({copied: false, text: ''})\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, id: ''})\r\n\r\n    const [gettingProcess, setGettingProcess] = useState({loading: false, error: false})\r\n    const {loading, error} = gettingProcess\r\n    const getImages = () => {\r\n        setGettingProcess({loading: true, error: false})\r\n        setState([])\r\n        axios(httpRequest(\"images/files\", \"GET\"))\r\n            // .get(`${link}/images/files`)\r\n            .then(res => {\r\n                console.log(res)\r\n                res.data.map(data => {\r\n                    const url = data.url.split('/')\r\n                    ids.push(url[url.length - 1])\r\n                    setState(prevState => [...prevState, url[url.length - 1]])\r\n                })\r\n                setGettingProcess({loading: false, error: false})\r\n            })\r\n            .catch(err => {\r\n                setGettingProcess({loading: false, error: true})\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getImages()\r\n        console.log(state)\r\n    }, [])\r\n\r\n    const deleteImage = (id) => {\r\n        axios(`images/${id}`,\"DELETE\")\r\n            // .delete(`${link}/images/${id}`)\r\n            .then(res => {\r\n                setDeletionData({popUp: false, id: ''})\r\n                getImages()\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n\r\n            })\r\n        console.log(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitleAdd title={\"Images\"} link={\"/images/add\"}/>\r\n            {loading && <Loading/>}\r\n            {error && <ErrorBox/>}\r\n            <ImagesBox>\r\n                {(!loading && !error) &&\r\n                state.map(id => (\r\n                    <ImageBox key={id}>\r\n                        <ImgBox>\r\n                            <Img src={`${link}/images/files/${id}`} alt={id}/>\r\n                        </ImgBox>\r\n                        <ImageData className={\"data\"}>\r\n                            {copied.text === id && <CopiedMessage>{copied.text === id && \"copied\"}</CopiedMessage>}\r\n                            <ActionsBox>\r\n                                <CopyToClipboard text={id}\r\n                                                 onCopy={\r\n                                                     () => {\r\n                                                         setCopied({copied: true, text: id});\r\n                                                         setTimeout(\r\n                                                             () => setCopied({copied: false, text: ''}), 5000\r\n                                                         )\r\n                                                     }\r\n                                                 }>\r\n                                    <Copy>\r\n                                        <CopyIcon/>\r\n                                    </Copy>\r\n                                </CopyToClipboard>\r\n                                <Delete onClick={() => setDeletionData({popUp: true, id: id})}>\r\n                                    <DeleteIcon/>\r\n                                </Delete>\r\n                            </ActionsBox>\r\n                        </ImageData>\r\n                    </ImageBox>\r\n                ))}\r\n            </ImagesBox>\r\n\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionImg>\r\n                        <img src={`${link}/images/files/${deletionData.id}`} alt=\"deletion image\"/>\r\n                    </DeletionImg>\r\n                    <DeletionText>\r\n                        Are you sure. you want to delete this image\r\n                    </DeletionText>\r\n                    <ActionsBox>\r\n                        <Copy onClick={() => setDeletionData({popUp: false, id: ''})}>\r\n                            <Arrow/>\r\n                        </Copy>\r\n                        <Delete onClick={() => {\r\n                            deleteImage(deletionData.id)\r\n                        }}>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ImagesList","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ToGetGiftStudent\\index.jsx",["552","553"],"import React, {useState} from \"react\"\r\nimport {DeleteBox, Title} from \"../Table/styles\";\r\nimport {Checkbox} from \"../Input/styles\";\r\nimport {Email, TableRow, TableWrapper, Tick, ToGetGiftStudentWrapper} from \"./styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {getUndecidedStudents} from \"../../redux/modules/undecidedStudents/undecidedStudentsAction\";\r\nimport {getToGetGiftStudents} from \"../../redux/modules/toGetGiftStudents/toGetGiftStudentsAction\";\r\nimport {ReactComponent as DeleteIcon, ReactComponent as Bin} from \"../../assets/icons/bin.svg\";\r\nimport {ActionsBox, Delete, DeletionBackground, DeletionPage, DeletionText, Edit} from \"../TeachersList/styles\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst ToGetGiftStudent = () => {\r\n    const students = useSelector(state => state.toGetGiftReducer)\r\n\r\n    const {loading, error, toGetGift} = students\r\n\r\n    const dispatch = useDispatch()\r\n    const handleDelete = (id) => {\r\n        axios(httpRequest(`toGetGift/${id}`,\"DELETE\"))\r\n            // .delete(`${link}/toGetGift/${id}`)\r\n            .then(() => {\r\n                    setDeletionData({popUp: false, data: {}})\r\n                    dispatch(getToGetGiftStudents())\r\n                }\r\n            )\r\n    }\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    return (\r\n        <>\r\n            <ToGetGiftStudentWrapper>\r\n                <Title>To Get Gift Student</Title>\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    toGetGift?.map(({\r\n                                        id,\r\n                                        email,\r\n                                        submittedTime,\r\n                                        contacted,\r\n                                        contactedTime\r\n                                    }) =>\r\n                        <TableRow key={id}>\r\n                            <DeleteBox onClick={() => {\r\n                                setDeletionData({popUp: true, data: {id, email}})\r\n                                // handleDelete(id)\r\n                            }}\r\n\r\n                                       className={\"bin\"}>\r\n                                <Bin/>\r\n                            </DeleteBox>\r\n                            <Email>\r\n                                {email}\r\n                            </Email>\r\n                            <Tick>\r\n                                <Checkbox type=\"checkbox\" checked={contacted}/>\r\n                            </Tick>\r\n                        </TableRow>\r\n                    )}\r\n                </TableWrapper>\r\n            </ToGetGiftStudentWrapper>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionText>\r\n                        {deletionData.data?.email}\r\n                        {/*<br/>*/}\r\n                        {/*<small>{deletionData.data?.phoneNumber}</small>*/}\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            handleDelete(deletionData.data?.id)\r\n                        }>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToGetGiftStudent","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\TestedStudent\\index.jsx",["554","555","556"],"import React, {useState} from \"react\"\r\nimport {DeleteBox, Title} from \"../Table/styles\";\r\nimport {Checkbox} from \"../Input/styles\";\r\nimport {\r\n    ContactBox,\r\n    Course,\r\n    FullName,\r\n    FullNameBox, Level,\r\n    PhoneNumber,\r\n    RequestedStudentWrapper,\r\n    ResultBox, TableRow,\r\n    TableWrapper, Tick\r\n} from \"./styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport {ReactComponent as Plus} from \"../../assets/icons/plus.svg\";\r\nimport {useHistory} from \"react-router\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {getToGetGiftStudents} from \"../../redux/modules/toGetGiftStudents/toGetGiftStudentsAction\";\r\nimport {ReactComponent as DeleteIcon, ReactComponent as Bin} from \"../../assets/icons/bin.svg\";\r\nimport {getTestedStudents} from \"../../redux/modules/testedStudents/testedStudentsAction\";\r\nimport {ActionsBox, Delete, DeletionBackground, DeletionPage, DeletionText, Edit} from \"../TeachersList/styles\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst TestedStudent = ({setWaitData}) => {\r\n\r\n    const findLevel = (myResult) => {\r\n        if (myResult >= 0 && myResult <= 14) {\r\n            return {level: \"Beginner\", color: \"#ff4545\"}\r\n        } else if (myResult > 14 && myResult <= 20) {\r\n            return {level: \"Elementary\", color: \"#ffa534\"}\r\n        } else if (myResult > 20 && myResult <= 30) {\r\n            return {level: \"Pre\", color: \"#ffe234\"}\r\n        } else if (myResult > 30 && myResult <= 40) {\r\n            return {level: \"Intermediate\", color: \"#b7dd29\"}\r\n        } else if (myResult > 40 && myResult <= 45) {\r\n            return {level: \"Upper\", color: \"#57e32c\"}\r\n        } else if (myResult > 45 && myResult <= 50) {\r\n            return {level: \"IELTS\", color: \"#04f3bc\"}\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    const students = useSelector(state => state.testedStudentReducer)\r\n    const {loading, error, testedStudent} = students\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n    const handleDelete = (id) => {\r\n        axios(httpRequest(`tested-student/${id}`,\"DELETE\"))\r\n            // .delete(`${link}/tested-student/${id}`)\r\n            .then(() => {\r\n                    dispatch(getTestedStudents())\r\n                setDeletionData({popUp:false,data:{}})\r\n                }\r\n            )\r\n    }\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    return (\r\n        <>\r\n            <RequestedStudentWrapper>\r\n                <Title>Tested Student</Title>\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    testedStudent?.map(({\r\n                                            id,\r\n                                            fullName,\r\n                                            phoneNumber,\r\n                                            subject,\r\n                                            result,\r\n                                            localDateTime\r\n                                        }) =>\r\n                        <TableRow key={id}>\r\n                            <DeleteBox onClick={() => {\r\n                                // handleDelete(id)\r\n                                setDeletionData({popUp: true, data: {id, fullName, phoneNumber}})\r\n                            }}\r\n                                       className={\"bin\"}>\r\n                                <Bin/>\r\n                            </DeleteBox>\r\n                            <FullNameBox>\r\n                                <FullName>\r\n                                    {fullName}\r\n                                </FullName>\r\n                                <Course>\r\n                                    {subject}\r\n                                </Course>\r\n                            </FullNameBox>\r\n                            <ContactBox>\r\n                                <PhoneNumber>\r\n                                    {phoneNumber}\r\n                                </PhoneNumber>\r\n                            </ContactBox>\r\n                            <ResultBox>\r\n                                <Level bgColor={findLevel(result).color}>\r\n                                    {findLevel(result).level}\r\n                                </Level>\r\n                            </ResultBox>\r\n                            <Tick onClick={() => {\r\n                                setWaitData({name: fullName, course: subject, phone: phoneNumber})\r\n                                history.push(\"/students/waiting-list\")\r\n                            }}>\r\n                                <Plus/>\r\n                            </Tick>\r\n                        </TableRow>\r\n                    )}\r\n                </TableWrapper>\r\n            </RequestedStudentWrapper>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionText>\r\n                        {deletionData.data?.fullName}\r\n                        <br/>\r\n                        <small>{deletionData.data?.phoneNumber}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            handleDelete(deletionData.data?.id)\r\n                        }>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TestedStudent","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\RequestedStudent\\index.jsx",["557","558"],"import React, {useState} from \"react\"\r\n// import { Table, TableBody, TableData, TableHead, TableRow, Title } from \"../Table/styles\";\r\nimport {Checkbox} from \"../Input/styles\";\r\nimport {\r\n    ContactBox,\r\n    Course, Email,\r\n    FullName,\r\n    FullNameBox,\r\n    PhoneNumber,\r\n    RequestedStudentWrapper,\r\n    TableRow,\r\n    TableWrapper, Tick\r\n} from \"./styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DeleteBox, Title} from \"../Table/styles\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport Loading from \"../Loading\";\r\n\r\n//icon\r\nimport {ReactComponent as Plus} from \"../../assets/icons/plus.svg\"\r\nimport {ReactComponent as DeleteIcon, ReactComponent as Bin} from \"../../assets/icons/bin.svg\"\r\nimport {useHistory} from \"react-router\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {getRequestedStudents} from \"../../redux/modules/requestedStudents/requestedStudentsAction\";\r\nimport {ActionsBox, Delete, DeletionBackground, DeletionPage, DeletionText, Edit} from \"../TeachersList/styles\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\n\r\nconst RequestedStudent = ({setWaitData}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const requestedStudents = useSelector(state => state.requestedStudentReducer)\r\n\r\n    const {loading, error, requestedStudent} = requestedStudents\r\n\r\n    const handleDelete = (id) => {\r\n        axios(`enrolledStudent/${id}`,\"DELETE\")\r\n            // .delete(`${link}/enrolledStudent/${id}`)\r\n            .then(() => {\r\n                    dispatch(getRequestedStudents())\r\n                    setDeletionData({popUp: false, data: {}})\r\n                }\r\n            )\r\n    }\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    return (\r\n        <>\r\n            <RequestedStudentWrapper>\r\n                <Title>Requested Student</Title>\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                <TableWrapper>\r\n                    {\r\n                        (!loading && !error) &&\r\n                        requestedStudent?.map(\r\n                            (\r\n                                {\r\n                                    id,\r\n                                    name,\r\n                                    phoneNumber,\r\n                                    email,\r\n                                    selectedCourse,\r\n                                    contacted,\r\n                                    enrolledTime\r\n                                }) =>\r\n                        <TableRow key={id}>\r\n                            <DeleteBox onClick={()=>{\r\n                                // handleDelete(id)\r\n                                setDeletionData({popUp:true,data:{id,name,phoneNumber}})\r\n                            }} className={\"bin\"}>\r\n                                <Bin/>\r\n                            </DeleteBox>\r\n                            <FullNameBox>\r\n                                <FullName>\r\n                                    {name}\r\n                                </FullName>\r\n                                <Course>\r\n                                    {selectedCourse}\r\n                                </Course>\r\n                            </FullNameBox>\r\n                            <ContactBox>\r\n                                <PhoneNumber>\r\n                                    {phoneNumber}\r\n                                </PhoneNumber>\r\n                                <Email>\r\n                                    {email}\r\n                                </Email>\r\n                            </ContactBox>\r\n                            <Tick onClick={() => {\r\n                                setWaitData({name: name, course: selectedCourse, phone: phoneNumber})\r\n                                history.push(\"/students/waiting-list\")\r\n                            }}>\r\n                                <Plus/>\r\n                                {/*<Checkbox type=\"checkbox\" checked={false}/>*/}\r\n                            </Tick>\r\n                        </TableRow>\r\n                        )\r\n                    }\r\n                </TableWrapper>\r\n            </RequestedStudentWrapper>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionText>\r\n                        {deletionData.data?.name}\r\n                        <br/>\r\n                        <small>{deletionData.data?.phoneNumber}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            handleDelete(deletionData.data?.id)\r\n                        }>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RequestedStudent","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\UndecidedStudent\\index.jsx",["559","560","561","562"],"import React, {useState} from \"react\"\r\nimport {DeleteBox, Title} from \"../Table/styles\";\r\nimport {Checkbox} from \"../Input/styles\";\r\nimport {\r\n    ContactBox,\r\n    FullName,\r\n    FullNameBox,\r\n    PhoneNumber,\r\n    TableRow,\r\n    TableWrapper,\r\n    Tick,\r\n    UndecidedStudentWrapper\r\n} from \"./styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport Loading from \"../Loading\";\r\nimport {ReactComponent as Plus} from \"../../assets/icons/plus.svg\";\r\nimport {useHistory} from \"react-router\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {getRequestedStudents} from \"../../redux/modules/requestedStudents/requestedStudentsAction\";\r\nimport {ReactComponent as DeleteIcon, ReactComponent as Bin} from \"../../assets/icons/bin.svg\";\r\nimport {getUndecidedStudents} from \"../../redux/modules/undecidedStudents/undecidedStudentsAction\";\r\nimport {\r\n    ActionsBox,\r\n    Delete,\r\n    DeletionBackground,\r\n    DeletionImg,\r\n    DeletionPage,\r\n    DeletionText,\r\n    Edit\r\n} from \"../TeachersList/styles\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst UndecidedStudent = ({setWaitData}) => {\r\n    const student = useSelector(state => state.undecidedStudentsReducer)\r\n    const {loading, error, students} = student\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (id) => {\r\n        axios(httpRequest(`undecidedStudent/${id}`,\"DELETE\"))\r\n            // .delete(`${link}/undecidedStudent/${id}`)\r\n            .then(() => {\r\n                    dispatch(getUndecidedStudents())\r\n                    setDeletionData({popUp: false, data: {}})\r\n                }\r\n            )\r\n    }\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    return (\r\n        <>\r\n            <UndecidedStudentWrapper>\r\n                <Title>Undecided Student</Title>\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    students?.map(({\r\n                                       id,\r\n                                       name,\r\n                                       phoneNumber,\r\n                                       contacted,\r\n                                       submittedDate,\r\n                                       contactedDate\r\n                                   }) =>\r\n                        <TableRow key={id}>\r\n                            <DeleteBox onClick={() => {\r\n                                setDeletionData({popUp: true, data: {id: id, name: name, phoneNumber: phoneNumber}})\r\n                            }}\r\n                                       className={\"bin\"}\r\n                            >\r\n                                <Bin/>\r\n                            </DeleteBox>\r\n                            <FullNameBox>\r\n                                <FullName>\r\n                                    {name}\r\n                                </FullName>\r\n                            </FullNameBox>\r\n                            <ContactBox>\r\n                                <PhoneNumber>\r\n                                    {phoneNumber}\r\n                                </PhoneNumber>\r\n                            </ContactBox>\r\n                            <Tick onClick={() => {\r\n                                setWaitData({name: name, phone: phoneNumber})\r\n                                history.push(\"/students/waiting-list\")\r\n                            }}>\r\n                                <Plus/>\r\n                                {/*<Checkbox type=\"checkbox\" checked={contacted}/>*/}\r\n                            </Tick>\r\n                        </TableRow>\r\n                    )}\r\n                </TableWrapper>\r\n\r\n\r\n            </UndecidedStudentWrapper>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionText>\r\n                        {deletionData.data?.name}\r\n                        <br/>\r\n                        <small>{deletionData.data?.phoneNumber}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            handleDelete(deletionData.data?.id)\r\n                        }>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UndecidedStudent","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\WaitingList\\index.jsx",["563","564","565","566"],"import React, {useState} from 'react';\r\nimport {Button, Form, Input, PhoneNumberFormat, Title} from \"../Input/styles\";\r\nimport {ContactBox, Course, Date, FullName, FullNameBox, PhoneNumber, TableRow, TableWrapper, Telegram} from \"./styles\";\r\nimport {whichMonth} from \"../../util/whichMonth\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {getWaitingList} from \"../../redux/modules/waitingList/waitingListAction\";\r\nimport {getTestedStudents} from \"../../redux/modules/testedStudents/testedStudentsAction\";\r\nimport {ReactComponent as DeleteIcon, ReactComponent as Bin} from \"../../assets/icons/bin.svg\";\r\nimport {DeleteBox} from \"../Table/styles\";\r\nimport {ActionsBox, Delete, DeletionBackground, DeletionPage, DeletionText, Edit} from \"../TeachersList/styles\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst WaitingList = ({waitData}) => {\r\n\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitList = (e) => {\r\n        e.preventDefault()\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        const {fullName, subject, date, telegram, phoneNumber} = e.target\r\n\r\n        const form = {\r\n            fullName: fullName.value,\r\n            subject: subject.value,\r\n            date: date.value,\r\n            telegram: telegram.value,\r\n            phoneNumber: phoneNumber.value\r\n        }\r\n\r\n        axios(httpRequest(\"waiting-list\", \"POST\", form))\r\n            // .post(`${link}/waiting-list`, form)\r\n            .then(res => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n                console.log(res)\r\n                dispatch(getWaitingList())\r\n\r\n            })\r\n            .catch(err => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 5000)\r\n            })\r\n    }\r\n\r\n    const list = useSelector(state => state.waitingListReducer)\r\n\r\n    const {loading, error, waitingList} = list\r\n\r\n    const handleDelete = (id) => {\r\n        axios(httpRequest(`waiting-list/${id}`,\"DELETE\"))\r\n            // .delete(`${link}/waiting-list/${id}`)\r\n            .then(() => {\r\n                    setDeletionData({popUp: false, data: {}})\r\n                    dispatch(getWaitingList())\r\n                }\r\n            )\r\n    }\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Form onSubmit={submitList}>\r\n                    <Title>Waiting List</Title>\r\n                    <Input type={\"text\"} placeholder={\"fullName\"} name={\"fullName\"}\r\n                           defaultValue={waitData?.name && waitData.name}\r\n                           required/>\r\n                    <Input type={\"text\"} placeholder={\"subject\"} name={\"subject\"}\r\n                           defaultValue={waitData?.course && waitData.course}\r\n                           required/>\r\n                    <Input type={\"date\"} placeholder={\"date\"} name={\"date\"} required/>\r\n                    <Input type={\"text\"} placeholder={\"telegram\"} name={\"telegram\"} required/>\r\n                    <PhoneNumberFormat\r\n                        name=\"phoneNumber\"\r\n                        format=\"+998 (##) ###-##-##\"\r\n                        mask=\"_\"\r\n                        id={\"hero-form-phone-number\"}\r\n                        className=\"number-format\"\r\n                        placeholder=\"phone number\"\r\n                        // onChange={(e)=>setPhoneNumber(e.target.value)}\r\n                        // value={phoneNumber}\r\n                        defaultValue={waitData?.phone && waitData.phone}\r\n                        required\r\n                    />\r\n                    {/*<Input type={\"tel\"} placeholder={\"phone number\"} defaultValue={waitData?.phone && waitData.phone} required/>*/}\r\n                    <Button disabled={submissionProcess.loading || submissionProcess.error || submissionProcess.success}\r\n                            loading={submissionProcess.loading} error={submissionProcess.error}\r\n                            success={submissionProcess.success}>\r\n                        {\r\n                            submissionProcess.loading ? \"loading...\" :\r\n                                submissionProcess.error ? \"error\" :\r\n                                    submissionProcess.success ? \"success\" : \"Submit\"\r\n                        }\r\n\r\n                    </Button>\r\n                </Form>\r\n\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    waitingList.map(({id, fullName, subject, phoneNumber, telegram, date}) =>\r\n                        <TableRow key={id}>\r\n                            <DeleteBox onClick={() => {\r\n                                setDeletionData({popUp: true, data: {id, fullName, phoneNumber}})\r\n                                // handleDelete(id)\r\n                            }} className={\"bin\"}>\r\n                                <Bin/>\r\n                            </DeleteBox>\r\n                            <FullNameBox>\r\n                                <FullName>\r\n                                    {fullName}\r\n                                </FullName>\r\n                                <Course>\r\n                                    {subject}\r\n                                </Course>\r\n                            </FullNameBox>\r\n                            <ContactBox>\r\n                                <PhoneNumber>\r\n                                    {phoneNumber}\r\n                                </PhoneNumber>\r\n                                <Telegram>\r\n                                    {telegram}\r\n                                </Telegram>\r\n                            </ContactBox>\r\n                            <Date>\r\n                                <p>\r\n                                    {date}\r\n                                </p>\r\n                            </Date>\r\n                        </TableRow>\r\n                    )}\r\n                </TableWrapper>\r\n            </div>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionText>\r\n                        {deletionData.data?.fullName}\r\n                        <br/>\r\n                        <small>{deletionData.data?.phoneNumber}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            handleDelete(deletionData.data?.id)\r\n                        }>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WaitingList;","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddImage\\index.jsx",["567"],"import React, {useState} from \"react\"\r\nimport axios from \"axios\";\r\n\r\n//image\r\nimport {ReactComponent as Upload} from \"../../assets/icons/upload.svg\"\r\nimport {FileName, Form, Label} from \"./styles\";\r\nimport {Button} from \"../Input/styles\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst AddImage = () => {\r\n\r\n    const [imageFile, setImageFile] = useState()\r\n\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n\r\n    const submitImage = (e) => {\r\n        e.preventDefault()\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        const data = new FormData()\r\n        data.append('courseIcon', imageFile)\r\n\r\n        console.log(imageFile)\r\n        axios(httpRequest(\"images/upload\", \"POST\", data))\r\n            // .post(`${link}/images/upload`, data)\r\n            .then(res => {\r\n                    console.log(res)\r\n                    setSubmissionProcess({loading: true, error: false, success: false})\r\n                    e.target.reset()\r\n                    setImageFile()\r\n                }\r\n            )\r\n            .catch(err => {\r\n                    setSubmissionProcess({loading: false, error: true, success: false})\r\n\r\n                    console.log(err)\r\n                }\r\n            )\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 5000)\r\n            })\r\n    }\r\n\r\n    const {loading, error, success} = submissionProcess\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={submitImage}>\r\n                <Label htmlFor={\"uploadImg\"}><Upload/></Label>\r\n                {imageFile && <FileName>{imageFile?.name}</FileName>}\r\n                <input type=\"file\" id={\"uploadImg\"} name=\"uploadImg\" style={{display: \"none\"}}\r\n                       onChange={(e) => setImageFile(e.target.files[0])}/>\r\n\r\n                <Button disabled={loading || error || success} loading={loading} error={error}\r\n                        success={success}>{loading ? \"Loading...\" : error ? \"Error\" : success ? \"Success\" : \"Submit\"}</Button>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddImage","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ErrorBox\\index.jsx",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\PageTitleAdd\\index.jsx",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\BotLesson\\index.jsx",["568","569","570","571","572","573","574","575","576","577","578","579","580"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Form, Input, PhoneNumberFormat, Select, Textarea, Title} from \"../Input/styles\";\r\nimport {\r\n    ContactBox,\r\n    Course,\r\n    Date, Description, EditBox,\r\n    FullName,\r\n    FullNameBox, LessonName, LessonTitle, Level,\r\n    PhoneNumber,\r\n    Queue,\r\n    TableRow,\r\n    TableWrapper,\r\n    Telegram\r\n} from \"./styles\";\r\nimport {whichMonth} from \"../../util/whichMonth\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {getWaitingList} from \"../../redux/modules/waitingList/waitingListAction\";\r\nimport {getTestedStudents} from \"../../redux/modules/testedStudents/testedStudentsAction\";\r\nimport {ReactComponent as DeleteIcon, ReactComponent as Bin} from \"../../assets/icons/bin.svg\";\r\nimport {DeleteBox} from \"../Table/styles\";\r\nimport {ActionsBox, Delete, DeletionBackground, DeletionPage, DeletionText, Edit} from \"../TeachersList/styles\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport {ReactComponent as EditIcon} from \"../../assets/icons/edit.svg\";\r\nimport {getLessonData} from \"../../redux/modules/lessonData/lessonDataAction\";\r\nimport Levels from \"../../constants/levels\"\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst BotLesson = () => {\r\n\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n    const [editingProcess, setEditingProcess] = useState({loading: false, error: false, success: false})\r\n\r\n    const [editData, setEditData] = useState({edit: false, data: {}})\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitList = (e) => {\r\n        e.preventDefault()\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        const {queue, lessonName, title, description, level} = e.target\r\n\r\n        const form = {\r\n            queue: queue.value,\r\n            lessonName: lessonName.value,\r\n            title: title.value,\r\n            description: description.value,\r\n            level: level.value\r\n        }\r\n\r\n        axios(httpRequest(`lesson-data`, \"POST\", form))\r\n            // .post(`${link}/lesson-data`, form)\r\n            .then(res => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n                console.log(res)\r\n                dispatch(getLessonData())\r\n            })\r\n            .catch(err => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 5000)\r\n            })\r\n    }\r\n\r\n    const editList = (e) => {\r\n        e.preventDefault();\r\n        setEditingProcess({loading: true, error: false, success: false})\r\n        const {queue, lessonName, title, description, level} = e.target\r\n\r\n        const form = {\r\n            id: editData.data.id,\r\n            queue: queue.value,\r\n            lessonName: lessonName.value,\r\n            title: title.value,\r\n            description: description.value,\r\n            level: level.value\r\n        }\r\n        console.log(editData)\r\n\r\n        axios(httpRequest(`lesson-data/${editData.data.id}`, \"PUT\", form))\r\n            // .put(`${link}/lesson-data/${editData.data.id}`, form)\r\n            .then(res => {\r\n                setEditingProcess({loading: false, error: false, success: true})\r\n                console.log(res)\r\n                dispatch(getLessonData())\r\n            })\r\n            .catch(err => {\r\n                setEditingProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setEditingProcess({loading: false, error: false, success: false}), 5000)\r\n            })\r\n\r\n    }\r\n\r\n    const list = useSelector(state => state.lessonDataReducer)\r\n\r\n    const {loading, error, lessonData} = list\r\n\r\n    const handleDelete = (id) => {\r\n        axios.delete(`${link}/lesson-data/${id}`)\r\n            .then(() => {\r\n                    setDeletionData({popUp: false, data: {}})\r\n                    dispatch(getLessonData())\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLessonData()\r\n    }, [])\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Form onSubmit={editData.edit ? editList : submitList}>\r\n                    <Title onClick={() => setEditData({edit: false, data: {}})}>Lesson</Title>\r\n                    <Input type=\"number\" placeholder=\"queue\" name=\"queue\"\r\n                           defaultValue={editData.edit ? editData.data.queue : \"\"}\r\n                           required/>\r\n                    <Input type=\"text\" placeholder=\"lessonName\" name=\"lessonName\"\r\n                           defaultValue={editData.edit ? editData.data.lessonName : \"\"}\r\n                           required/>\r\n                    <Input type=\"text\" placeholder=\"title\" name=\"title\"\r\n                           defaultValue={editData.edit ? editData.data.title : \"\"}\r\n                           required/>\r\n                    <Textarea style={{resize: \"none\"}} rows={4} placeholder=\"description\" name=\"description\"\r\n                              defaultValue={editData.edit ? editData.data.description : \"\"}\r\n                              required/>\r\n\r\n                    <Select name=\"level\"\r\n                            defaultValue={editData.edit ? editData.data.level : \"\"}\r\n                    >\r\n                        <option value={Levels.kids}>Kids</option>\r\n                        <option value={Levels.beginner}>Beginner</option>\r\n                        <option value={Levels.elementary}>Elementary</option>\r\n                        <option value={Levels.pre}>Pre-Intermediate</option>\r\n                        <option value={Levels.inter}>Intermediate</option>\r\n                        <option value={Levels.upper}>Upper-Intermediate</option>\r\n                        <option value={Levels.ielts}>IELTS</option>\r\n                    </Select>\r\n                    <Button disabled={submissionProcess.loading || submissionProcess.error || submissionProcess.success}\r\n                            loading={submissionProcess.loading} error={submissionProcess.error}\r\n                            success={submissionProcess.success}>\r\n                        {\r\n                            submissionProcess.loading ? \"loading...\" :\r\n                                submissionProcess.error ? \"error\" :\r\n                                    submissionProcess.success ? \"success\" : (editData.edit ? \"Edit\" : \"Submit\")\r\n                        }\r\n\r\n                    </Button>\r\n                </Form>\r\n\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    lessonData.map(({id, queue, lessonName, title, description, level}) =>\r\n                        <TableRow key={id}>\r\n                            <DeleteBox onClick={() => {\r\n                                setDeletionData({popUp: true, data: {id, queue, lessonName, title, description, level}})\r\n                                // handleDelete(id)\r\n                            }} className={\"bin\"}>\r\n                                <Bin/>\r\n                            </DeleteBox>\r\n\r\n                            <Queue>\r\n                                {queue}\r\n                            </Queue>\r\n                            <LessonName>\r\n                                {lessonName}\r\n                            </LessonName>\r\n\r\n                            <LessonTitle>\r\n                                {title}\r\n                            </LessonTitle>\r\n\r\n                            <Description>\r\n                                {description}\r\n                            </Description>\r\n\r\n                            <Level>\r\n                                {level}\r\n                            </Level>\r\n                            <EditBox>\r\n                                <Edit style={{margin: \"auto\"}} onClick={() => {\r\n                                    setEditData({\r\n                                        edit: true,\r\n                                        data: {id, queue, lessonName, title, description, level}\r\n                                    });\r\n                                    document.getElementById(\"admin-content\").scrollTo({top: 0, behavior: \"smooth\"});\r\n                                }}>\r\n                                    <EditIcon/>\r\n\r\n                                </Edit>\r\n                            </EditBox>\r\n                        </TableRow>\r\n                    )}\r\n                </TableWrapper>\r\n            </div>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionText>\r\n                        {deletionData.data?.fullName}\r\n                        <br/>\r\n                        <small>{deletionData.data?.phoneNumber}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            handleDelete(deletionData.data?.id)\r\n                        }>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BotLesson;","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\BotContent\\index.jsx",["581","582","583"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Form, Input, Select, Title} from \"../Input/styles\";\r\nimport {\r\n    Caption,\r\n    Description,\r\n    FileSize,\r\n    FileType,\r\n    LessonName, LevelBox,\r\n    LevelsWrapper,\r\n    Queue,\r\n    TableRow,\r\n    TableWrapper\r\n} from \"./styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {ReactComponent as DeleteIcon, ReactComponent as Bin} from \"../../assets/icons/bin.svg\";\r\nimport {DeleteBox} from \"../Table/styles\";\r\nimport {ActionsBox, Delete, DeletionBackground, DeletionPage, DeletionText, Edit} from \"../TeachersList/styles\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport {getTelegramFile} from \"../../redux/modules/telegramFile/telegramFileAction\";\r\nimport {calculateFileSize} from \"../../util/calculateFileSize\";\r\nimport Levels from \"../../constants/levels\"\r\n\r\n//icon\r\nimport {ReactComponent as ImageIcon} from \"../../assets/icons/picture.svg\"\r\nimport {ReactComponent as AudioIcon} from \"../../assets/icons/speaker.svg\"\r\nimport {ReactComponent as VideoIcon} from \"../../assets/icons/video-camera.svg\"\r\nimport {ReactComponent as DocIcon} from \"../../assets/icons/google-docs.svg\"\r\nimport {ReactComponent as EditIcon} from \"../../assets/icons/edit.svg\"\r\nimport {getLessonData} from \"../../redux/modules/lessonData/lessonDataAction\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst BotContent = () => {\r\n\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n\r\n    const [editData, setEditData] = useState({edit: false, data: {}})\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [level, setLevel] = useState(Levels.kids)\r\n\r\n    const getTelegramFileById = () => {\r\n        dispatch(getTelegramFile(level))\r\n    }\r\n\r\n\r\n    const submitTelegramFile = (e) => {\r\n        e.preventDefault()\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        const {queue, caption, lessonData} = e.target\r\n        const {id, fileId, fileSize, contentType, description} = editData.data\r\n\r\n        const form = {\r\n            queue: parseInt(queue.value),\r\n            caption: caption.value,\r\n            lessonData: {id: parseInt(lessonData.value)},\r\n            id: id,\r\n            fileId: fileId,\r\n            fileSize: fileSize,\r\n            contentType: contentType,\r\n            description: description,\r\n        }\r\n\r\n        console.log(form)\r\n        axios(httpRequest(`telegram-file/${id}`, \"PUT\", form))\r\n            // .put(`${link}/telegram-file/${id}`, form)\r\n            .then(res => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n                console.log(res)\r\n                getTelegramFileById()\r\n                e.target.reset();\r\n            })\r\n            .catch(err => {\r\n                console.log(form)\r\n                console.log(err)\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 5000)\r\n            })\r\n    }\r\n\r\n    const list = useSelector(state => state.telegramFileReducer);\r\n    const lessonData = useSelector(state => state.lessonDataReducer);\r\n\r\n    const {loading, error, telegramFile} = list;\r\n\r\n\r\n    const handleDelete = (id) => {\r\n        axios(httpRequest(`telegram-file/${id}`, \"DELETE\"))\r\n            // .delete(`${link}/telegram-file/${id}`)\r\n            .then(\r\n                () => {\r\n                    setDeletionData({popUp: false, data: {}})\r\n                    getTelegramFileById()\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getTelegramFileById()\r\n    }, [level])\r\n\r\n    useEffect(() => {\r\n        dispatch(getLessonData())\r\n    }, [])\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Form onSubmit={submitTelegramFile}>\r\n                    <Title>Content</Title>\r\n                    <Input type=\"number\" placeholder=\"Queue\" name=\"queue\"\r\n                           defaultValue={editData.edit ? editData.data.queue : \"\"}\r\n                           required/>\r\n                    <Input type=\"text\" placeholder=\"Caption\" name=\"caption\"\r\n                           defaultValue={editData.edit ? editData.data.caption : \"\"}\r\n                           required/>\r\n                    <Select name=\"lessonData\">\r\n                        {lessonData.lessonData.map(({id, lessonName, level}) =>\r\n                            <option value={id}>{lessonName} {level}</option>\r\n                        )}\r\n                    </Select>\r\n                    <p>\r\n                        {editData.edit && editData.data.description}\r\n                    </p>\r\n                    <Button disabled={submissionProcess.loading || submissionProcess.error || submissionProcess.success}\r\n                            loading={submissionProcess.loading} error={submissionProcess.error}\r\n                            success={submissionProcess.success}>\r\n                        {\r\n                            submissionProcess.loading ? \"loading...\" :\r\n                                submissionProcess.error ? \"error\" :\r\n                                    submissionProcess.success ? \"success\" : editData.edit ? \"Edit\" : \"Submit\"\r\n                        }\r\n\r\n                    </Button>\r\n                </Form>\r\n\r\n                <LevelsWrapper>\r\n                    <LevelBox active={level === Levels.kids} onClick={() => setLevel(Levels.kids)}>Kids</LevelBox>\r\n                    <LevelBox active={level === Levels.beginner}\r\n                              onClick={() => setLevel(Levels.beginner)}>Beginner</LevelBox>\r\n                    <LevelBox active={level === Levels.elementary}\r\n                              onClick={() => setLevel(Levels.elementary)}>Elementary</LevelBox>\r\n                    <LevelBox active={level === Levels.pre} onClick={() => setLevel(Levels.pre)}>Pre</LevelBox>\r\n                    <LevelBox active={level === Levels.inter} onClick={() => setLevel(Levels.inter)}>Inter</LevelBox>\r\n                    <LevelBox active={level === Levels.upper} onClick={() => setLevel(Levels.upper)}>Upper</LevelBox>\r\n                    <LevelBox active={level === Levels.ielts} onClick={() => setLevel(Levels.ielts)}>IELTS</LevelBox>\r\n                    <LevelBox active={level == null} onClick={() => setLevel(null)}>null</LevelBox>\r\n                </LevelsWrapper>\r\n\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    telegramFile.map(({id, caption, queue, fileId, fileSize, contentType, description, lessonData}) =>\r\n                        <TableRow key={id}>\r\n                            <DeleteBox onClick={() => {\r\n                                setDeletionData({\r\n                                    popUp: true,\r\n                                    data: {id, caption, queue, fileId, fileSize, contentType, description, lessonData}\r\n                                })\r\n                            }} className={\"bin\"}>\r\n                                <Bin/>\r\n                            </DeleteBox>\r\n                            <Queue>\r\n                                {queue}\r\n                            </Queue>\r\n                            <FileType>\r\n                                {\r\n                                    contentType === \"picture\" ? <ImageIcon/> :\r\n                                        contentType === \"video\" ? <VideoIcon/> :\r\n                                            contentType === \"audio\" ? <AudioIcon/> :\r\n                                                contentType === \"document\" ? <DocIcon/> : \"\"\r\n                                }\r\n                            </FileType>\r\n                            <Caption>\r\n                                {caption === null ? \"no caption\" : caption}\r\n                            </Caption>\r\n                            <FileSize>\r\n                                {calculateFileSize(fileSize)}\r\n                            </FileSize>\r\n                            <Description>\r\n                                {description}\r\n                            </Description>\r\n                            <LessonName>\r\n                                {lessonData === null ? \"no lesson data\" : \"\"}\r\n                            </LessonName>\r\n                            <Edit onClick={() => {\r\n                                setEditData({\r\n                                    edit: true,\r\n                                    data: {id, caption, queue, fileId, fileSize, contentType, description, lessonData}\r\n                                })\r\n                                document.getElementById(\"admin-content\").scrollTo({top: 0, behavior: \"smooth\"});\r\n                            }}>\r\n                                <EditIcon/>\r\n                            </Edit>\r\n                        </TableRow>\r\n                    )}\r\n                </TableWrapper>\r\n            </div>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionText>\r\n                        {deletionData.data?.fullName}\r\n                        <br/>\r\n                        <small>{deletionData.data?.phoneNumber}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            handleDelete(deletionData.data?.id)\r\n                        }>\r\n                            <DeleteIcon/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BotContent;","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddClient\\index.jsx",["584","585"],"import React, {useState, useEffect} from \"react\"\r\nimport axios from \"axios\";\r\nimport {Form, Input, PhoneNumberFormat, Radio, RadioBox, RadioWrapper, Select, Textarea, Title} from \"../Input/styles\";\r\nimport {Button} from \"../Input/styles\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst AddClient = ({editValue}) => {\r\n\r\n    const [submitProcess, setSubmitProcess] = useState({loading: false, error: false, success: false})\r\n\r\n    // const [gender, setGender] = useState()\r\n\r\n    const submitClient = (e) => {\r\n        e.preventDefault()\r\n        setSubmitProcess({loading: true, error: false, success: false})\r\n\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            birthDate,\r\n            gender,\r\n            region,\r\n            city,\r\n            streetName,\r\n            homeNumber,\r\n            phoneNumber,\r\n            telegram,\r\n            email,\r\n            scheduledCourse\r\n        } = e.target\r\n\r\n        const form = {\r\n            firstName: firstName.value,\r\n            lastName: lastName.value,\r\n            birthDate: birthDate.value,\r\n            gender: gender.value,\r\n            region: region.value,\r\n            city: city.value,\r\n            streetName: streetName.value,\r\n            homeNumber: homeNumber.value,\r\n            phoneNumber: phoneNumber.value,\r\n            telegram: telegram.value,\r\n            email: email.value,\r\n            clientCourse: [\r\n                {\r\n                    scheduledCourse: {\r\n                        id: scheduledCourse.value\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        axios(httpRequest(\"client-student\", \"POST\", form))\r\n            // .post(`${link}/client-student`, form)\r\n            .then(res => {\r\n                console.log(res)\r\n                setSubmitProcess({loading: false, error: false, success: true})\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setSubmitProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(res => {\r\n                console.log(res)\r\n                setTimeout(() => setSubmitProcess({loading: false, error: false, success: false}), 5000)\r\n            })\r\n    }\r\n\r\n    const {loading, error, success} = submitProcess;\r\n\r\n    const [courses, setCourses] = useState()\r\n\r\n    const getCourse = () => {\r\n        axios(httpRequest(\"scheduled-course/select\", \"GET\"))\r\n            // .get(`${link}/scheduled-course/select`)\r\n            .then(res => {\r\n                setCourses(res.data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCourse()\r\n    }, [])\r\n\r\n    return (\r\n        <Form onSubmit={submitClient}>\r\n\r\n            <Title>Clients Form</Title>\r\n\r\n            <Input required name={\"firstName\"} type={\"text\"} placeholder={\"First Name\"}/>\r\n            <Input required name={\"lastName\"} type={\"text\"} placeholder={\"Last Name\"}/>\r\n            <Input required name={\"birthDate\"} type={\"text\"} placeholder={\"Date of birth\"}\r\n                   onFocus={(e) => e.target.type = \"date\"} onBlur={(e) => e.target.type = \"text\"}/>\r\n            <RadioWrapper>\r\n                <RadioBox>\r\n                    <Radio required id={\"male\"} name={\"gender\"} type={\"radio\"} value={\"male\"}/>\r\n                    <label htmlFor=\"male\">Male</label>\r\n                </RadioBox>\r\n                <RadioBox>\r\n                    <Radio required id={\"female\"} name={\"gender\"} type={\"radio\"} value={\"female\"}/>\r\n                    <label htmlFor=\"female\">Female</label>\r\n                </RadioBox>\r\n            </RadioWrapper>\r\n            <Input required name={\"region\"} type={\"text\"} placeholder={\"Region\"}/>\r\n            <Input required name={\"city\"} type={\"text\"} placeholder={\"City\"}/>\r\n            <Input required name={\"streetName\"} type={\"text\"} placeholder={\"Street name\"}/>\r\n            <Input required name={\"homeNumber\"} type={\"text\"} placeholder={\"Home number\"}/>\r\n\r\n            <PhoneNumberFormat\r\n                name=\"phoneNumber\"\r\n                format=\"+998 (##) ###-##-##\"\r\n                mask=\"_\"\r\n                className=\"number-format\"\r\n                placeholder=\"Phone number\"\r\n                required\r\n            />\r\n            <Input required name={\"telegram\"} type={\"text\"} placeholder={\"Telegram\"}/>\r\n            <Input required name={\"email\"} type={\"text\"} placeholder={\"Email\"}/>\r\n\r\n            {/*<Input type={\"text\"} placeholder={\"scheduled course\"}/>*/}\r\n            <Select required name={\"scheduledCourse\"}>\r\n                {courses?.map(({id, courseName}) =>\r\n                    <option value={id}>{courseName}</option>\r\n                )}\r\n            </Select>\r\n\r\n            <Button disabled={loading || error || success} loading={loading} error={error} success={success}>\r\n                {\r\n                    loading ? \"loading...\" :\r\n                        error ? \"error\" :\r\n                            success ? \"success\" :\r\n                                \"Submit\"\r\n                }\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default AddClient","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\index.jsx",["586","587","588","589","590","591","592"],"import React, {useState, useEffect} from \"react\"\r\nimport {Button, Form, Input, Label, Radio, RadioBox, RadioWrapper, Select, Textarea, Title} from \"../Input/styles\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {DisplayFlex} from \"../ScheduledCourseList/styles\";\r\nimport {Center} from \"../../pages/Dashboard/styles\";\r\nimport {ButtonAdd, Clean, Month, MonthBox, Number} from \"./styles\";\r\nimport CategoryForm from \"./categoryForm\";\r\nimport CourseTypeForm from \"./courseTypeForm\";\r\nimport EduFormatForm from \"./eduFormatForm\";\r\nimport TypeOfPaymentForm from \"./typeOfPaymentForm\";\r\nimport {ButtonBox} from \"../Input\";\r\nimport {getScheduledCourses} from \"../../redux/modules/scheduledCourses/scheduledCoursesAction\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst AddScheduledCourse = ({editValue}) => {\r\n    const [moreForm, setMoreForm] = useState(false)\r\n    const constant = 1;\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n    const dispatch = useDispatch()\r\n    const submitCourse = (e) => {\r\n        e.preventDefault()\r\n        setSubmissionProcess({loading: false, error: false, success: false})\r\n\r\n        const {\r\n            courseName,\r\n            teacher,\r\n            format,\r\n            type\r\n        } = e.target\r\n\r\n        const form = {\r\n            courseName: courseName.value,\r\n            teacher: {\r\n                id: teacher.value\r\n            },\r\n            format: {\r\n                id: format.value\r\n            },\r\n            days: monthDates,\r\n            type: {\r\n                id: type.value\r\n            }\r\n        }\r\n\r\n        axios(httpRequest(\"scheduled-course\", \"POST\", form))\r\n            // .post(`${link}/scheduled-course`, form)\r\n            .then(res => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n                dispatch(getScheduledCourses())\r\n            })\r\n            .catch(err => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 5000)\r\n            })\r\n        // console.log(e.target.courseIcon.file)\r\n    }\r\n\r\n    const [courseUtil, setCourseUtil] = useState()\r\n    const getCourseUtil = () => {\r\n        axios(httpRequest(\"scheduled-course/form\",\"GET\"))\r\n            // .get(`${link}/scheduled-course/form`)\r\n            .then((res) => {\r\n                setCourseUtil(res.data)\r\n                console.log(res.data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCourseUtil()\r\n        console.log(courseUtil)\r\n    }, [constant])\r\n\r\n    const {loading, error, success} = submissionProcess;\r\n    const [duration, setDuration] = useState(3)\r\n\r\n    const [monthDates, setMonthDates] = useState([]);\r\n\r\n    const [month, setMonth] = useState()\r\n    const addToMonth = (e) => {\r\n        // e.preventDefault()\r\n        month && setMonthDates((prevState) => ([...prevState, {day: month}]))\r\n        setMonth()\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // months()\r\n    // }, [duration])\r\n    return (\r\n        <>\r\n            <Form onSubmit={submitCourse}>\r\n                <Title onClick={getCourseUtil}>Scheduled Course</Title>\r\n                <Input name={\"courseName\"} title={\"course name\"} type={\"text\"} placeholder={\"Course name\"}\r\n                       defaultValue={editValue?.id ? editValue.courseName_uz : ''}/>\r\n                {/*<Input  type={\"text\"} placeholder={\"Teacher\"} list={\"teacherList\"}*/}\r\n                {/*       defaultValue={editValue?.id ? editValue.courseName_ru : ''}/>*/}\r\n\r\n                <Select name={\"teacher\"} title={\"teachers\"} required>\r\n                    {courseUtil !== undefined && courseUtil?.teacher.map(({id, teacherFullName, position}) =>\r\n                        <option value={id}>{`${teacherFullName} - ${position}`}</option>\r\n                    )}\r\n                </Select>\r\n\r\n                <RadioWrapper width={\"90%\"}>\r\n                    {courseUtil !== undefined && courseUtil?.format.map(({id, formatName}) =>\r\n                        <RadioBox key={id} width={`${100 / courseUtil?.format.length}%`}>\r\n                            <Radio required id={formatName} name={\"format\"} type={\"radio\"} value={id}/>\r\n                            <label htmlFor={formatName}>{formatName}</label>\r\n                        </RadioBox>\r\n                    )}\r\n                </RadioWrapper>\r\n\r\n                <Select name={\"type\"} title={\"type\"} required>\r\n                    {courseUtil !== undefined && courseUtil?.type.map(({id, courseName, category}) =>\r\n                        <option key={id} value={id}>{`${courseName}`}</option>\r\n                    )}\r\n                </Select>\r\n\r\n                {/*<Input name={`courseType`} title={\"course type\"} type={\"text\"} placeholder={\"course type\"}*/}\r\n                {/*    // defaultValue={editValue?.id ? editValue.duration : duration}*/}\r\n                {/*       onChange={(e) => setDuration(e.target.value)}*/}\r\n                {/*/>*/}\r\n\r\n\r\n                <Center>\r\n                    <Input required style={{margin: 0, width: \"70%\"}} name={`date`} title={\"date\"} type={\"date\"} min={0}\r\n                           placeholder={\"Date\"}\r\n                        // defaultValue={editValue?.id ? editValue.duration : month}\r\n                           value={month}\r\n                           onChange={(e) => setMonth(e.target.value)}\r\n                    />\r\n                    <ButtonAdd style={{margin: 0, width: \"30%\", height: \"54px\"}} onClick={() => addToMonth()}>\r\n                        add\r\n                    </ButtonAdd>\r\n                </Center>\r\n                {monthDates.length > 0 && <Clean onClick={() => setMonthDates([])}>clean</Clean>}\r\n                {month} <br/>\r\n                {monthDates.map(({day}, index) =>\r\n                    <MonthBox key={index}>\r\n                        <Number>{index + 1})</Number><Month>{day}</Month>\r\n                    </MonthBox>\r\n                )}\r\n                {/*{duration}*/}\r\n                {/*{monthInputs.length}*/}\r\n                {/*<Input name={\"courseIcon\"} title={\"image id\"} type={\"text\"} placeholder={\"Image id\"}*/}\r\n                {/*       defaultValue={editValue?.id ? editValue.courseIcon : ''}/>*/}\r\n                <ButtonBox loading={loading} error={error} success={success}/>\r\n            </Form>\r\n\r\n            {moreForm &&\r\n            <>\r\n                <CategoryForm/>\r\n                <CourseTypeForm/>\r\n                <EduFormatForm/>\r\n                <TypeOfPaymentForm/>\r\n            </>\r\n            }\r\n            <Button onClick={() => setMoreForm(!moreForm)}>{!moreForm ? \"More\" : \"Less\"}</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddScheduledCourse","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ScheduledCourseList\\index.jsx",["593","594","595","596","597"],"import React, {useState, useEffect} from \"react\"\r\nimport {\r\n    ActionBox, ActionsBox,\r\n    Category,\r\n    CategoryCourseName,\r\n    CourseName,\r\n    Delete, DeletionBackground, DeletionImg, DeletionPage, DeletionText,\r\n    Description,\r\n    DescriptionBox,\r\n    DisplayFlex,\r\n    Edit,\r\n    Number,\r\n    Numbers,\r\n    TableRow,\r\n    TableWrapper, TeacherFullName,\r\n    WrapperCoursesList\r\n} from \"./styles\";\r\n// import img from \"../../assets/images/firebird.png\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\n\r\nimport {useHistory} from \"react-router\";\r\nimport {ReactComponent as EditIcon} from \"../../assets/icons/edit.svg\";\r\nimport PageTitleAdd from \"../PageTitleAdd\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\nimport {getScheduledCourses} from \"../../redux/modules/scheduledCourses/scheduledCoursesAction\";\r\n//icon\r\nimport {ReactComponent as Bin} from \"../../assets/icons/bin.svg\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport axios from \"axios\";\r\nimport {DeleteBox} from \"../ClientsList/styles\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nfunction ScheduledCourseList({setEditValue}) {\r\n\r\n    const dispatch = useDispatch()\r\n    // useEffect(() => {\r\n    //     dispatch(getScheduledCourses())\r\n    // }, [getScheduledCourses])\r\n    const scheduledCourse = useSelector(state => state.scheduledCoursesReducer)\r\n    const {loading, error, courses} = scheduledCourse\r\n\r\n    // const [deleteProcess, setDeleteProcess] = useState({loading: false, error: false, success: false})\r\n\r\n    const deleteCourse = (id) => {\r\n        // setDeleteProcess({loading: true, error: false, success: false})\r\n        axios(httpRequest(`scheduled-course/${id}`,\"DELETE\"))\r\n            // .delete(`${link}/scheduled-course/${id}`)\r\n            .then(res => {\r\n                console.log(res)\r\n                setDeletionData({popUp: false, data: {}})\r\n                dispatch(getScheduledCourses())\r\n                // setDeleteProcess({loading: false, error: false, success: true})\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                // setDeleteProcess({loading: false, error: true, success: false})\r\n            })\r\n    }\r\n\r\n    // const history = useHistory()\r\n    //\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n    //\r\n\r\n    return (\r\n        <>\r\n            <PageTitleAdd title={\"Scheduled Courses\"} link={\"/scheduled-courses/add\"}/>\r\n\r\n            <WrapperCoursesList>\r\n                <h1>\r\n                    {loading && <Loading/>}\r\n                    {error && <ErrorBox/>}\r\n                </h1>\r\n\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    courses?.map(\r\n                        (\r\n                            {\r\n                                id,\r\n                                courseName,\r\n                                finished,\r\n                                finishTime,\r\n                                teacher,\r\n                                format,\r\n                                days,\r\n                                type\r\n                            }) =>\r\n                            <TableRow key={id}>\r\n                                <DeleteBox onClick={() => {\r\n                                    setDeletionData({popUp: true, data: {id, courseName, format, type}})\r\n                                    // handleDelete(id)\r\n                                }} className={\"bin\"}>\r\n                                    <Bin/>\r\n                                </DeleteBox>\r\n                                {/*<TableImg>*/}\r\n                                {/*    <img src={`${link}/images/files/${courseIcon}`} alt=\"\"/>*/}\r\n                                {/*</TableImg>*/}\r\n\r\n                                <CategoryCourseName>\r\n                                    <DisplayFlex>\r\n                                        <CourseName>\r\n                                            {/*<LangIn>uz</LangIn>*/}\r\n                                            {courseName}\r\n                                        </CourseName>\r\n                                        {/*<CourseName>*/}\r\n                                        {/*    <LangIn>ru</LangIn>*/}\r\n                                        {/*    {courseName_ru}*/}\r\n                                        {/*</CourseName>*/}\r\n                                    </DisplayFlex>\r\n                                    <Category>\r\n                                        {`${type.courseName} | ${type.category.categoryName}`}\r\n                                    </Category>\r\n                                </CategoryCourseName>\r\n                                <DescriptionBox>\r\n                                    <Description>\r\n                                        <TeacherFullName>\r\n                                            {teacher.teacherFullName}\r\n                                        </TeacherFullName>\r\n                                        {/*<LangIn>uz</LangIn>*/}\r\n                                        {/*{description_uz}*/}\r\n                                    </Description>\r\n                                    {/*<Description>*/}\r\n                                    {/*    <LangIn>ru</LangIn>*/}\r\n                                    {/*    {description_ru}*/}\r\n                                    {/*</Description>*/}\r\n                                </DescriptionBox>\r\n                                {/*<HashTags>*/}\r\n                                {/*    {tags}*/}\r\n                                {/*</HashTags>*/}\r\n                                <Numbers>\r\n                                    {/*{discount > 0 && <Number>-{discount}%</Number>}*/}\r\n                                    <Number>{days.length} months</Number>\r\n                                </Numbers>\r\n                                <ActionBox>\r\n                                    {/*<Edit bgColor={\"green\"} onClick={() => {*/}\r\n                                    {/*    history.push(\"/courses/add\")*/}\r\n                                    {/*    setEditValue({*/}\r\n                                    {/*        id,*/}\r\n                                    {/*        courseName_uz,*/}\r\n                                    {/*        courseName_ru,*/}\r\n                                    {/*        description_uz,*/}\r\n                                    {/*        description_ru,*/}\r\n                                    {/*        category,*/}\r\n                                    {/*        subCategory,*/}\r\n                                    {/*        tags,*/}\r\n                                    {/*        duration,*/}\r\n                                    {/*        discount,*/}\r\n                                    {/*        courseIcon*/}\r\n                                    {/*    })*/}\r\n                                    {/*}}*/}\r\n                                    {/*>*/}\r\n                                    {/*    <EditIcon/>*/}\r\n                                    {/*</Edit>*/}\r\n                                    {/*<Delete bgColor={\"red\"}*/}\r\n                                    {/*    // onClick={() => setDeletionData({*/}\r\n                                    {/*    //     popUp: true,*/}\r\n                                    {/*    //     data: {id, courseName_uz, category, subCategory, courseIcon}*/}\r\n                                    {/*    // })}*/}\r\n                                    {/*>*/}\r\n                                    {/*    /!*{*!/*/}\r\n                                    {/*    /!*    deleteProcess.loading ? \"loading...\" :*!/*/}\r\n                                    {/*    /!*        deleteProcess.error ? \"error\" :*!/*/}\r\n                                    {/*    /!*            deleteProcess.success ? \"success\" :*!/*/}\r\n                                    {/*    /!*                <DeleteIcon/>*!/*/}\r\n                                    {/*    /!*}*!/*/}\r\n                                    {/*</Delete>*/}\r\n                                    {format.formatName}\r\n                                </ActionBox>\r\n                            </TableRow>\r\n                    )}\r\n                </TableWrapper>\r\n            </WrapperCoursesList>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    <DeletionText>\r\n                        {deletionData.data?.courseName} <br/>\r\n                        <small>{`${deletionData.data?.type.courseName} | ${deletionData.data?.type.category.categoryName}`}</small>\r\n                    </DeletionText> <br/>\r\n                    <DeletionText>Do you really want to delete this course ?</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit onClick={() => setDeletionData({popUp: false, data: {}})}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete onClick={() => deleteCourse(deletionData.data?.id)}>\r\n                            <Bin/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScheduledCourseList","F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\PersonalCabinet\\index.jsx",["598","599","600","601","602"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Age,\r\n    Amount,\r\n    Avatar,\r\n    ClosePopUp,\r\n    ContactBox,\r\n    Country,\r\n    FullName,\r\n    Information,\r\n    InformationBox,\r\n    InformationTitle,\r\n    MainData,\r\n    MainDataBox,\r\n    PaidFor,\r\n    PaymentDate,\r\n    PaymentForm,\r\n    PaymentTableBox,\r\n    PersonalCabinetWrapper,\r\n    Status,\r\n    TableRow,\r\n    Type\r\n} from \"./styles\";\r\nimport Male from \"../../assets/icons/boy.svg\"\r\nimport Female from \"../../assets/icons/girl.svg\"\r\nimport {paymentTypeIcon} from \"../../util/paymentType\"\r\nimport CourseDurationCard from \"../../components/CourseDurationCard\";\r\nimport {\r\n    Button,\r\n    Form,\r\n    Label,\r\n    PhoneNumberFormat,\r\n    Radio,\r\n    RadioBox,\r\n    RadioWrapper,\r\n    Title\r\n} from \"../../components/Input/styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getClientIdData} from \"../../redux/modules/clientIdData/clientIdDataAction\";\r\nimport {whichMonth} from \"../../util/whichMonth\";\r\n\r\n//icons\r\nimport {ReactComponent as CloseIcon} from \"../../assets/icons/plus.svg\"\r\n// import {ReactComponent as Payme} from \"../../assets/icons/payme.svg\"\r\n// import {ReactComponent as Cash} from \"../../assets/icons/cash.svg\"\r\n// import {ReactComponent as Card} from \"../../assets/icons/card.svg\"\r\nimport email from \"../../assets/icons/email.png\"\r\nimport smartPhone from \"../../assets/icons/smartphone.png\"\r\nimport telegram from \"../../assets/icons/telegram.png\"\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {ButtonBox} from \"../../components/Input\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst PersonalCabinet = () => {\r\n\r\n    // const courses = [\r\n    //     {\r\n    //         name: \"programming | frontend\",\r\n    //         format: \"offline\",\r\n    //         process: \"stopped\",\r\n    //         month: [\r\n    //             {\r\n    //                 active: true,\r\n    //                 day: \"9 Jan\"\r\n    //             }, {\r\n    //                 active: true,\r\n    //                 day: \"7 Fab\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"9 Mar\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"8 Apr\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"6 May\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"3 Jun\"\r\n    //             }\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         name: \"language | English\",\r\n    //         format: \"online\",\r\n    //         process: \"graduated\",\r\n    //         month: [\r\n    //             {\r\n    //                 active: true,\r\n    //                 day: \"9 Jan\"\r\n    //             }, {\r\n    //                 active: true,\r\n    //                 day: \"7 Fab\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"9 Mar\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"8 Apr\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"6 May\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"3 Jun\"\r\n    //             }\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         name: \"language | English\",\r\n    //         format: \"online\",\r\n    //         process: \"learning\",\r\n    //         month: [\r\n    //             {\r\n    //                 active: true,\r\n    //                 day: \"29 Jan\"\r\n    //             }, {\r\n    //                 active: true,\r\n    //                 day: \"27 Fab\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"29 Mar\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"28 Apr\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"26 May\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"23 Jun\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"29 Mar\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"28 Apr\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"26 May\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"23 Jun\"\r\n    //             }\r\n    //         ]\r\n    //     }, {\r\n    //         name: \"language | English\",\r\n    //         format: \"online\",\r\n    //         process: \"learning\",\r\n    //         month: [\r\n    //             {\r\n    //                 active: true,\r\n    //                 day: \"26 May\"\r\n    //             }, {\r\n    //                 active: false,\r\n    //                 day: \"23 Jun\"\r\n    //             }\r\n    //         ]\r\n    //     }\r\n    // ]\r\n    //\r\n    // const payments = [\r\n    //     {\r\n    //         amount: \"790 000\",\r\n    //         paidFor: \"Frontend\",\r\n    //         date: \"9 Fab\",\r\n    //         type: \"cash\",\r\n    //     }, {\r\n    //         amount: \"190 000\",\r\n    //         paidFor: \"English\",\r\n    //         date: \"29 Fab\",\r\n    //         type: \"payme\",\r\n    //     }, {\r\n    //         amount: \"270 000\",\r\n    //         paidFor: \"Arabic\",\r\n    //         date: \"19 Fab\",\r\n    //         type: \"card\",\r\n    //     }, {\r\n    //         amount: \"100 000\",\r\n    //         paidFor: \"Frontend\",\r\n    //         date: \"19 Mar\",\r\n    //         type: \"cash\",\r\n    //     },\r\n    // ]\r\n\r\n    const [paymentPopUp, setPaymentPopUp] = useState({popUp: false, data: {}})\r\n    // const clientId = useSelector(state => state.clientIdReducer);\r\n    const clientsData = useSelector(state => state.clientIdDataReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    const {loading, error, clientData} = clientsData\r\n\r\n    const [typeOfPayment, setTypeOfPayment] = useState([])\r\n    const getPaymentTypes = () => {\r\n        axios(httpRequest(\"type-of-payment\", \"GET\"))\r\n            // .get(`${link}/type-of-payment`)\r\n            .then(res => {\r\n                setTypeOfPayment(res.data)\r\n            })\r\n    }\r\n\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        dispatch(getClientIdData(id))\r\n        getPaymentTypes()\r\n    }, [])\r\n\r\n    const birthData = clientData?.birthDate?.split(\"-\")\r\n    const day = birthData !== undefined && birthData[2];\r\n    const month = birthData !== undefined && whichMonth(birthData[1])\r\n    const year = birthData !== undefined && birthData[0]\r\n\r\n    const dob = Math.abs(new Date(Date.now() - new Date(clientData?.birthDate).getTime()).getUTCFullYear() - 1970)\r\n    // console.log(birthData)\r\n\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n    const submitPayment = (e) => {\r\n        e.preventDefault();\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        const {\r\n            amount,\r\n            paymentType\r\n        } = e.target\r\n\r\n        // console.log(paymentType.value, paymentPopUp.data?.days,paymentPopUp.data?.scheduledCourse.id)\r\n\r\n        const form = {\r\n            amount: parseInt(amount.value.split(\",\").join(\"\")),\r\n            payer: {\r\n                id: clientData.id\r\n            },\r\n            scheduledCourse: {\r\n                id: paymentPopUp.data?.scheduledCourse.id\r\n            },\r\n            coursePaymentDay: paymentPopUp.data?.days,\r\n            paymentType: {\r\n                id: parseInt(paymentType.value)\r\n            },\r\n        }\r\n        console.log(form)\r\n\r\n        axios(httpRequest(\"payment-list\", \"POST\", form))\r\n            // .post(`${link}/payment-list`, form)\r\n            .then(res => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n                setTimeout(() => setPaymentPopUp({popUp: false, data: {}}), 4000)\r\n                dispatch(getClientIdData(id))\r\n            })\r\n            .catch(err => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 3000)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PersonalCabinetWrapper>\r\n                <InformationBox>\r\n                    <Information>\r\n                        <InformationTitle>Course</InformationTitle>\r\n                        {/*{clientData?.clientCourse !== undefined && clientData?.clientCourse.length}*/}\r\n                        {/*{clientsData?.clientCourse?.map(({name, format, process, month}) =>*/}\r\n                        {/*    <CourseDurationCard setPaymentPopUp={setPaymentPopUp} name={name} format={format}*/}\r\n                        {/*                        process={process} month={month}/>*/}\r\n                        {/*)}*/}\r\n                        {/*{courses.map(({name, format, process, month}) =>*/}\r\n                        {/*    <CourseDurationCard setPaymentPopUp={setPaymentPopUp} name={name} format={format}*/}\r\n                        {/*                        process={process} month={month}/>*/}\r\n                        {/*)}*/}\r\n                        {clientData?.clientCourse !== undefined && clientData?.clientCourse.map(({scheduledCourse}) =>\r\n                            <CourseDurationCard setPaymentPopUp={setPaymentPopUp}\r\n                                                scheduledCourse={scheduledCourse}\r\n                                                payments={clientData?.paymentList}\r\n                                                process={\"learning\"}/>\r\n                        )}\r\n                    </Information>\r\n                    <Information>\r\n                        <InformationTitle>Payment</InformationTitle>\r\n\r\n                        <PaymentTableBox>\r\n                            {clientData?.paymentList?.map(({amount, paymentDate, scheduledCourse, paymentType}) =>\r\n                                <TableRow>\r\n                                    <Amount>\r\n                                        {`${amount} UZS`}\r\n                                    </Amount>\r\n                                    <PaidFor>\r\n                                        {scheduledCourse.courseName}\r\n                                    </PaidFor>\r\n                                    <PaymentDate>\r\n                                        {paymentDate}\r\n                                    </PaymentDate>\r\n                                    <Type title={paymentType.paymentType}>\r\n                                        {paymentTypeIcon(paymentType.paymentType)}\r\n                                        {/*<Cash/>*/}\r\n                                    </Type>\r\n                                </TableRow>\r\n                            )}\r\n                        </PaymentTableBox>\r\n                    </Information>\r\n                </InformationBox>\r\n                <MainDataBox>\r\n                    <MainData>\r\n                        <Avatar>\r\n                            <img\r\n                                src={clientData.gender === \"male\" ? Male : clientData.gender === \"female\" ? Female : \"\"}\r\n                                alt=\"avatar\"/>\r\n                            <Status active/>\r\n                        </Avatar>\r\n                        <FullName>\r\n                            {clientData?.firstName} {clientData?.lastName}\r\n                        </FullName>\r\n                        <Age>{day} {month} {year}</Age>\r\n                        <Age>{dob} years old</Age>\r\n                        <Country>{clientData?.address?.region}/{clientData?.address?.city}</Country>\r\n                        <Country>{clientData?.address?.streetName} {clientData?.address?.homeNumber}</Country>\r\n                    </MainData>\r\n                    <MainData>\r\n                        <ContactBox>\r\n                            <img src={smartPhone} alt=\"smartPhone\"/>{clientData?.contact?.phoneNumber}\r\n                        </ContactBox>\r\n                        <ContactBox>\r\n                            <img src={email} alt=\"email\"/>{clientData?.contact?.email}\r\n                        </ContactBox>\r\n                        <ContactBox>\r\n                            <img src={telegram} alt=\"telegram\"/>{clientData?.contact?.telegram}\r\n                        </ContactBox>\r\n                    </MainData>\r\n                </MainDataBox>\r\n                {paymentPopUp.popUp &&\r\n                <PaymentForm>\r\n                    <Form onSubmit={submitPayment}>\r\n                        <Title>Payment</Title>\r\n                        <PhoneNumberFormat thousandSeparator={true} name={\"amount\"} placeholder={\"Amount of money\"}\r\n                                           style={{textAlign: \"right\"}} required/>\r\n                        <RadioWrapper width={\"100%\"}>\r\n                            {typeOfPayment?.map(({id, paymentType}) =>\r\n                                <RadioBox width={`${100 / typeOfPayment.length}%`}>\r\n                                    <Radio name={\"paymentType\"} value={id} id={`paymentType${paymentType}`}\r\n                                           type={\"radio\"}\r\n                                           required/>\r\n                                    <Label htmlFor={`paymentType${paymentType}`}>\r\n                                        <div>{paymentTypeIcon(paymentType)}</div>\r\n                                    </Label>\r\n                                </RadioBox>\r\n                            )}\r\n                        </RadioWrapper>\r\n                        <ButtonBox loading={submissionProcess.loading}\r\n                                   error={submissionProcess.error}\r\n                                   success={submissionProcess.success}\r\n                        />\r\n                        <ClosePopUp onClick={() => setPaymentPopUp({popUp: false, data: {}})}>\r\n                            <CloseIcon/>\r\n                        </ClosePopUp>\r\n                    </Form>\r\n                </PaymentForm>\r\n                }\r\n            </PersonalCabinetWrapper>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PersonalCabinet;","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ClientsList\\index.jsx",["603","604"],"import React, {useState, useEffect} from \"react\"\r\nimport {\r\n    ClientId,\r\n    Email,\r\n    FullName,\r\n    FullNameBox,\r\n    PhoneNumber,\r\n    TableRow,\r\n    TableWrapper,\r\n    WrapperTeachersList,\r\n    DeleteBox, DeletionBackground, DeletionPage, DeletionText, ActionsBox, Edit, Delete, TableRowWrapper\r\n} from \"./styles\";\r\n// import img from \"../../assets/images/firebird.png\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getClientsList} from \"../../redux/modules/clientsList/clientsListAction\";\r\n\r\n//icons\r\nimport PageTitleAdd from \"../PageTitleAdd\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorBox from \"../ErrorBox\";\r\n// import {getClientId} from \"../../redux/modules/clientId/clientIdAction\";\r\nimport {ReactComponent as Bin} from \"../../assets/icons/bin.svg\";\r\nimport {ReactComponent as ArrowIcon} from \"../../assets/icons/arrow.svg\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport axios from \"axios\";\r\nimport {httpRequest} from \"../../util/httpRequest\";\r\n\r\nconst ClientsList = ({setId}) => {\r\n\r\n    const [deletionData, setDeletionData] = useState({popUp: false, data: {}})\r\n\r\n    // const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteClientById = (id) => {\r\n        axios(httpRequest(`client-student/${id}`,\"DELETE\"))\r\n            // .delete(`${link}/client-student/${id}`)\r\n            .then(res => {\r\n                setDeletionData({popUp: false, data: {}})\r\n                getClientsListDispatch()\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        ;\r\n    }\r\n\r\n    const getClientsListDispatch = () => {\r\n        dispatch(getClientsList())\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getClientsListDispatch()\r\n    }, [getClientsList])\r\n    const clients = useSelector(state => state.clientsListReducer)\r\n\r\n    // const deleteTeacherById = (id) => {\r\n    //     axios.delete(`${link}/teachers/${id}`)\r\n    //         .then(res => {\r\n    //             console.log(res)\r\n    //             getTeachersDispatch()\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log(err)\r\n    //         })\r\n    //\r\n    // }\r\n\r\n    const {loading, error, clientsList} = clients\r\n    return (\r\n        <>\r\n            <WrapperTeachersList>\r\n                <PageTitleAdd title={\"Clients\"} link={\"/clients/add\"}/>\r\n                {loading && <Loading/>}\r\n                {error && <ErrorBox/>}\r\n                {(!loading && !error && clientsList === 0) && \"Empty\"}\r\n                <TableWrapper>\r\n                    {(!loading && !error) &&\r\n                    clientsList?.map(({\r\n                                          id,\r\n                                          firstName,\r\n                                          lastName,\r\n                                          email,\r\n                                          phoneNumber\r\n                                      }) => {\r\n                            // const dob = birthDate.split(\"T\")[0].split(\"-\");\r\n                            return (\r\n                                <TableRowWrapper key={id}>\r\n                                    <DeleteBox onClick={() => {\r\n                                        setDeletionData({popUp: true, data: {id, firstName, lastName, email, phoneNumber}})\r\n                                        // handleDelete(id)\r\n                                    }} className={\"bin\"}>\r\n                                        <Bin/>\r\n                                    </DeleteBox>\r\n                                    <TableRow to={`/clients/id/${id}`}\r\n                                        // onClick={() => {\r\n                                        // dispatch(getClientId(id))\r\n                                        //       }}\r\n                                    >\r\n\r\n                                        <ClientId>\r\n                                            {id}\r\n                                            {/*<img src={`${link}/images/files/${image}`} alt=\"\"/>*/}\r\n                                        </ClientId>\r\n                                        <FullNameBox>\r\n                                            <FullName>\r\n                                                {firstName} {lastName}\r\n                                            </FullName>\r\n                                            <Email>\r\n                                                {email}\r\n                                            </Email>\r\n                                        </FullNameBox>\r\n                                        <PhoneNumber>\r\n                                            {phoneNumber}\r\n                                        </PhoneNumber>\r\n\r\n                                        {/*<ActionBox>*/}\r\n                                        {/*    <Edit bgColor={\"green\"} onClick={() => {*/}\r\n                                        {/*        history.push(\"/teachers/add\")*/}\r\n                                        {/*        setEditValue({*/}\r\n                                        {/*            id,*/}\r\n                                        {/*            teacherFullName,*/}\r\n                                        {/*            birthDate,*/}\r\n                                        {/*            description,*/}\r\n                                        {/*            image,*/}\r\n                                        {/*            position*/}\r\n                                        {/*        })*/}\r\n                                        {/*    }}>*/}\r\n                                        {/*        <EditIcon/>*/}\r\n                                        {/*    </Edit>*/}\r\n                                        {/*    <Delete bgColor={\"red\"} onClick={() =>*/}\r\n                                        {/*        setDeletionData({*/}\r\n                                        {/*            popUp: true,*/}\r\n                                        {/*            data: {*/}\r\n                                        {/*                id,*/}\r\n                                        {/*                teacherFullName,*/}\r\n                                        {/*                birthDate,*/}\r\n                                        {/*                description,*/}\r\n                                        {/*                image,*/}\r\n                                        {/*                position*/}\r\n                                        {/*            }*/}\r\n                                        {/*        })}>*/}\r\n                                        {/*        <DeleteIcon/>*/}\r\n                                        {/*    </Delete>*/}\r\n                                        {/*</ActionBox>*/}\r\n\r\n                                        {/*</CardBox>*/}\r\n                                    </TableRow>\r\n                                </TableRowWrapper>)\r\n                        }\r\n                    )\r\n                    }\r\n                </TableWrapper>\r\n            </WrapperTeachersList>\r\n            {deletionData.popUp &&\r\n            <DeletionBackground>\r\n                <DeletionPage>\r\n                    {/*<DeletionImg>*/}\r\n                    {/*    <img src={`${link}/images/files/${deletionData.data?.image}`} alt=\"\"/>*/}\r\n                    {/*</DeletionImg>*/}\r\n                    <DeletionText>\r\n                        {`${deletionData.data?.firstName} ${deletionData.data?.lastName}`}\r\n                        <br/>\r\n                        <small>{deletionData.data?.position}</small>\r\n                    </DeletionText>\r\n                    <DeletionText>Do you really want to delete me 😭</DeletionText>\r\n                    <ActionsBox>\r\n                        <Edit bgColor={\"green\"} onClick={() => {\r\n                            setDeletionData({popUp: false, data: {}})\r\n                        }}>\r\n                            <ArrowIcon/>\r\n                        </Edit>\r\n                        <Delete bgColor={\"red\"} onClick={() =>\r\n                            deleteClientById(deletionData.data?.id)\r\n                        }>\r\n                            <Bin/>\r\n                        </Delete>\r\n                    </ActionsBox>\r\n                </DeletionPage>\r\n            </DeletionBackground>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClientsList","F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\dashboard\\dashboardAction.js",["605"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getDashboard=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:actionTypes.GET_DASHBOARD,\r\n        payload:axios(httpRequest(\"client-student/dashboard\"))\r\n            // .get(`${link}/client-student/dashboard`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\TeachersList\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\teachers\\teachersAction.js",["606"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getTeachers=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:actionTypes.GET_TEACHERS,\r\n        payload:axios(httpRequest(\"teachers\",\"GET\"))\r\n            // .get(`${link}/teachers`)\r\n    })\r\n}\r\n","F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\whichMonth.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ImagesList\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ToGetGiftStudent\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\TestedStudent\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\RequestedStudent\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\UndecidedStudent\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\WaitingList\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddImage\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ErrorBox\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\PageTitleAdd\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\BotLesson\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\constants\\levels.js",["607"],"export default {\r\n    kids: \"english_kids\",\r\n    beginner: \"english_beginner\",\r\n    elementary: \"english_elementary\",\r\n    pre: \"english_pre\",\r\n    inter: \"english_intermediate\",\r\n    upper: \"english_upper\",\r\n    ielts: \"ielts\"\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\calculateFileSize.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\BotContent\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ScheduledCourseList\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\clientsList\\clientsListAction.js",["608"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getClientsList=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:actionTypes.GET_CLIENTS_LIST,\r\n        payload:axios(httpRequest(\"client-student\",\"GET\"))\r\n            // .get(`${link}/client-student`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\ClientsList\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Table\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\redux\\modules\\clientIdData\\clientIdDataAction.js",["609"],"import axios from \"axios\"\r\nimport actionTypes from \"../../../constants/actionTypes\"\r\nimport {link} from \"../../../baseLink/link\"\r\nimport {httpRequest} from \"../../../util/httpRequest\";\r\n\r\nexport const getClientIdData = (id) => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_CLIENT_ID_DATA,\r\n        payload: axios(httpRequest(`client-student/${id}`,\"GET\"))\r\n            // .get(`${link}/client-student/${id}`)\r\n    })\r\n}","F:\\ibs-admin-front\\ibs-school-admin\\src\\util\\paymentType.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\pages\\PersonalCabinet\\styles.js",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\categoryForm.jsx",["610","611"],"import React, {useState} from \"react\"\r\nimport {Button, Form, Input, Title} from \"../Input/styles\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {ButtonBox} from \"../Input\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst CategoryForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n    const submitCategoryForm = (e) => {\r\n        e.preventDefault()\r\n\r\n        const form = {\r\n            categoryName: e.target.categoryType.value\r\n        }\r\n\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        axios.post(`${link}/category`, form)\r\n            .then(() => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n                // dispatch(get)\r\n            })\r\n            .catch((err) => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 3000)\r\n            })\r\n    }\r\n\r\n    const {loading, error, success} = submissionProcess\r\n\r\n    return (\r\n        <Form onSubmit={submitCategoryForm}>\r\n            <Title>Category</Title>\r\n            <Input placeholder={\"Category\"} type={\"text\"} name={\"categoryType\"}/>\r\n            <ButtonBox loading={loading} error={error} success={success}/>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CategoryForm","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\courseTypeForm.jsx",["612"],"import React, {useState, useEffect} from \"react\"\r\nimport {Button, Form, Input, Select, Title} from \"../Input/styles\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {ButtonBox} from \"../Input\";\r\n\r\nconst CourseTypeForm = () => {\r\n\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n    const submitCourseTypeForm = (e) => {\r\n        e.preventDefault()\r\n        const form = {\r\n            courseName: e.target.courseType.value,\r\n            category: {\r\n                id: e.target.categoryType.value,\r\n                // categoryName: e.target\r\n            }\r\n        }\r\n        console.log(form)\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        axios.post(`${link}/course-type`, form)\r\n            .then(() => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n            })\r\n            .catch(() => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 3000)\r\n            })\r\n    }\r\n    const {loading, error, success} = submissionProcess\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const getCategory = () => {\r\n        axios.get(`${link}/category`)\r\n            .then((res) => {\r\n                setCategories(res.data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategory()\r\n    }, [])\r\n\r\n    return (\r\n        <Form onSubmit={submitCourseTypeForm}>\r\n            <Title onClick={getCategory}>Course Type</Title>\r\n            <Select name={\"categoryType\"}>\r\n                {categories?.map(({id, categoryName}) =>\r\n                    <option value={id}>{categoryName}</option>\r\n                )}\r\n            </Select>\r\n            {/*<Input placeholder={\"Category\"} name={\"categoryType\"} list={\"category\"}/>*/}\r\n            <Input placeholder={\"Course Type\"} type={\"text\"} name=\"courseType\"/>\r\n            <ButtonBox loading={loading} error={error} success={success}/>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CourseTypeForm","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\eduFormatForm.jsx",["613"],"import React, {useState} from \"react\"\r\nimport {Button, Form, Input, Title} from \"../Input/styles\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {ButtonBox} from \"../Input\";\r\n\r\nconst EduFormatForm = () => {\r\n\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n    const submitEDuFormatForm = (e) => {\r\n        e.preventDefault()\r\n\r\n        const form = {\r\n            formatName: e.target.eduFormat.value\r\n        }\r\n\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        axios.post(`${link}/edu-format`, form)\r\n            .then(() => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n            })\r\n            .catch((err) => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 3000)\r\n            })\r\n    }\r\n\r\n    const {loading, error, success} = submissionProcess\r\n\r\n    return (\r\n        <Form onSubmit={submitEDuFormatForm}>\r\n            <Title>EduFormat</Title>\r\n            <Input placeholder={\"EduFormat\"} type={\"text\"} name={\"eduFormat\"}/>\r\n            <ButtonBox loading={loading} error={error} success={success}/>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EduFormatForm","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\AddScheduledCourse\\typeOfPaymentForm.jsx",["614"],"import React, {useState} from \"react\"\r\nimport {Button, Form, Input, Title} from \"../Input/styles\";\r\nimport axios from \"axios\";\r\nimport {link} from \"../../baseLink/link\";\r\nimport {ButtonBox} from \"../Input\";\r\n\r\nconst TypeOfPaymentForm = () => {\r\n\r\n    const [submissionProcess, setSubmissionProcess] = useState({loading: false, error: false, success: false})\r\n    const submitTypeOfPaymentForm = (e) => {\r\n        e.preventDefault()\r\n\r\n        const form = {\r\n            paymentType: e.target.paymentType.value\r\n        }\r\n\r\n        setSubmissionProcess({loading: true, error: false, success: false})\r\n        axios.post(`${link}/type-of-payment`, form)\r\n            .then(() => {\r\n                setSubmissionProcess({loading: false, error: false, success: true})\r\n            })\r\n            .catch((err) => {\r\n                setSubmissionProcess({loading: false, error: true, success: false})\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => setSubmissionProcess({loading: false, error: false, success: false}), 3000)\r\n            })\r\n    }\r\n\r\n    const {loading, error, success} = submissionProcess\r\n\r\n    return (\r\n        <Form onSubmit={submitTypeOfPaymentForm}>\r\n            <Title>Payment Type</Title>\r\n            <Input placeholder={\"Type of payment\"} type={\"text\"} name={\"paymentType\"}/>\r\n            <ButtonBox loading={loading} error={error} success={success}/>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default TypeOfPaymentForm","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\Input\\index.jsx",[],"F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\CourseDurationCard\\index.jsx",["615"],"import React, {useState} from \"react\"\r\nimport {\r\n    Circle,\r\n    CourseDurationBox,\r\n    CourseMonthBox,\r\n    CourseName, Date,\r\n    Icon,\r\n    PaymentDay,\r\n    StopFinishBox, StopOrGraduate\r\n} from \"./styles\";\r\nimport {ReactComponent as Stop} from \"../../assets/icons/stop.svg\";\r\nimport {ReactComponent as Finish} from \"../../assets/icons/finish.svg\";\r\nimport {ReactComponent as Column} from \"../../assets/icons/column.svg\";\r\nimport {whichMonth} from \"../../util/whichMonth\";\r\n\r\nconst CourseDurationCard = ({setPaymentPopUp, payments, scheduledCourse, process}) => {\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const stopCourse = () => {\r\n\r\n    }\r\n\r\n    const finishCourse = () => {\r\n\r\n    }\r\n\r\n    const makeDate = (date) => {\r\n        const dateArray = date.split(\"-\")\r\n        const day = dateArray[2]\r\n        const month = whichMonth(dateArray[1])\r\n        return `${day} ${month}`\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CourseMonthBox>\r\n                <CourseName>\r\n                <span onClick={() => setToggle(!toggle)}>\r\n                    {`${scheduledCourse.type.courseName} | ${scheduledCourse.type.category.categoryName}`}\r\n                </span>\r\n                    {toggle &&\r\n                    <StopFinishBox>\r\n                        <Icon onClick={() => stopCourse()}>\r\n                            <Stop/>\r\n                        </Icon>\r\n                        <Icon onClick={() => finishCourse()}>\r\n                            <Finish/>\r\n                        </Icon>\r\n                    </StopFinishBox>}\r\n                    {/*</span>*/}\r\n                    <small>{scheduledCourse.format.formatName}</small>\r\n                </CourseName>\r\n                <CourseDurationBox>\r\n                    {scheduledCourse?.days?.map(({id, day}) => {\r\n                        let active = false;\r\n                        payments?.map(props => {\r\n                            if (props.scheduledCourse.id === scheduledCourse.id) {\r\n                                if (props.coursePaymentDay.id === id) {\r\n                                    active = true\r\n                                }\r\n                            }\r\n                        })\r\n                        return (\r\n                            <PaymentDay key={id}\r\n                                        active={active}\r\n                                        onClick={() => {\r\n                                            !active && setPaymentPopUp({\r\n                                                popUp: true,\r\n                                                data: {scheduledCourse, days: {id, day}}\r\n                                            })\r\n                                        }}\r\n                                        width={100 / scheduledCourse?.days?.length}>\r\n                                <Circle active={active}>\r\n                                    <Column/>\r\n                                </Circle>\r\n                                <Date>{makeDate(day)}</Date>\r\n                            </PaymentDay>)\r\n                    })}\r\n                </CourseDurationBox>\r\n                {process !== \"learning\" &&\r\n                <StopOrGraduate process={process}>\r\n                    <p>{process}</p>\r\n                </StopOrGraduate>\r\n                }\r\n            </CourseMonthBox>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CourseDurationCard","F:\\ibs-admin-front\\ibs-school-admin\\src\\components\\CourseDurationCard\\styles.js",[],{"ruleId":"616","replacedBy":"617"},{"ruleId":"618","replacedBy":"619"},{"ruleId":"620","severity":1,"message":"621","line":5,"column":8,"nodeType":"622","messageId":"623","endLine":5,"endColumn":17},{"ruleId":"620","severity":1,"message":"624","line":9,"column":12,"nodeType":"622","messageId":"623","endLine":9,"endColumn":17},{"ruleId":"625","severity":1,"message":"626","line":23,"column":29,"nodeType":"627","endLine":25,"endColumn":21},{"ruleId":"628","severity":1,"message":"629","line":190,"column":8,"nodeType":"630","endLine":190,"endColumn":10,"suggestions":"631"},{"ruleId":"620","severity":1,"message":"632","line":1,"column":16,"nodeType":"622","messageId":"623","endLine":1,"endColumn":24},{"ruleId":"620","severity":1,"message":"633","line":2,"column":8,"nodeType":"622","messageId":"623","endLine":2,"endColumn":18},{"ruleId":"620","severity":1,"message":"634","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":14},{"ruleId":"620","severity":1,"message":"635","line":4,"column":8,"nodeType":"622","messageId":"623","endLine":4,"endColumn":17},{"ruleId":"620","severity":1,"message":"636","line":5,"column":8,"nodeType":"622","messageId":"623","endLine":5,"endColumn":19},{"ruleId":"620","severity":1,"message":"637","line":10,"column":9,"nodeType":"622","messageId":"623","endLine":10,"endColumn":13},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","endLine":19,"endColumn":2},{"ruleId":"620","severity":1,"message":"641","line":1,"column":8,"nodeType":"622","messageId":"623","endLine":1,"endColumn":13},{"ruleId":"628","severity":1,"message":"642","line":26,"column":8,"nodeType":"630","endLine":26,"endColumn":10,"suggestions":"643"},{"ruleId":"620","severity":1,"message":"644","line":39,"column":12,"nodeType":"622","messageId":"623","endLine":39,"endColumn":17},{"ruleId":"620","severity":1,"message":"645","line":39,"column":19,"nodeType":"622","messageId":"623","endLine":39,"endColumn":25},{"ruleId":"620","severity":1,"message":"646","line":232,"column":11,"nodeType":"622","messageId":"623","endLine":232,"endColumn":19},{"ruleId":"628","severity":1,"message":"647","line":344,"column":8,"nodeType":"630","endLine":344,"endColumn":10,"suggestions":"648"},{"ruleId":"649","severity":1,"message":"650","line":349,"column":67,"nodeType":"651","messageId":"652","endLine":349,"endColumn":69},{"ruleId":"628","severity":1,"message":"653","line":393,"column":8,"nodeType":"630","endLine":393,"endColumn":26,"suggestions":"654"},{"ruleId":"620","severity":1,"message":"655","line":4,"column":8,"nodeType":"622","messageId":"623","endLine":4,"endColumn":24},{"ruleId":"620","severity":1,"message":"656","line":5,"column":8,"nodeType":"622","messageId":"623","endLine":5,"endColumn":24},{"ruleId":"620","severity":1,"message":"657","line":6,"column":8,"nodeType":"622","messageId":"623","endLine":6,"endColumn":24},{"ruleId":"620","severity":1,"message":"658","line":7,"column":8,"nodeType":"622","messageId":"623","endLine":7,"endColumn":21},{"ruleId":"620","severity":1,"message":"659","line":8,"column":22,"nodeType":"622","messageId":"623","endLine":8,"endColumn":33},{"ruleId":"620","severity":1,"message":"660","line":9,"column":9,"nodeType":"622","messageId":"623","endLine":9,"endColumn":29},{"ruleId":"620","severity":1,"message":"661","line":10,"column":9,"nodeType":"622","messageId":"623","endLine":10,"endColumn":26},{"ruleId":"620","severity":1,"message":"662","line":11,"column":9,"nodeType":"622","messageId":"623","endLine":11,"endColumn":29},{"ruleId":"620","severity":1,"message":"663","line":12,"column":9,"nodeType":"622","messageId":"623","endLine":12,"endColumn":29},{"ruleId":"620","severity":1,"message":"664","line":13,"column":8,"nodeType":"622","messageId":"623","endLine":13,"endColumn":19},{"ruleId":"620","severity":1,"message":"665","line":14,"column":9,"nodeType":"622","messageId":"623","endLine":14,"endColumn":23},{"ruleId":"620","severity":1,"message":"666","line":21,"column":11,"nodeType":"622","messageId":"623","endLine":21,"endColumn":19},{"ruleId":"620","severity":1,"message":"667","line":2,"column":30,"nodeType":"622","messageId":"623","endLine":2,"endColumn":35},{"ruleId":"620","severity":1,"message":"637","line":4,"column":9,"nodeType":"622","messageId":"623","endLine":4,"endColumn":13},{"ruleId":"620","severity":1,"message":"668","line":1,"column":16,"nodeType":"622","messageId":"623","endLine":1,"endColumn":25},{"ruleId":"628","severity":1,"message":"669","line":14,"column":8,"nodeType":"630","endLine":14,"endColumn":29,"suggestions":"670"},{"ruleId":"620","severity":1,"message":"671","line":4,"column":8,"nodeType":"622","messageId":"623","endLine":4,"endColumn":20},{"ruleId":"620","severity":1,"message":"672","line":5,"column":8,"nodeType":"622","messageId":"623","endLine":5,"endColumn":18},{"ruleId":"628","severity":1,"message":"642","line":19,"column":8,"nodeType":"630","endLine":19,"endColumn":10,"suggestions":"673"},{"ruleId":"620","severity":1,"message":"674","line":4,"column":5,"nodeType":"622","messageId":"623","endLine":4,"endColumn":14},{"ruleId":"620","severity":1,"message":"675","line":4,"column":16,"nodeType":"622","messageId":"623","endLine":4,"endColumn":22},{"ruleId":"620","severity":1,"message":"676","line":4,"column":24,"nodeType":"622","messageId":"623","endLine":4,"endColumn":34},{"ruleId":"620","severity":1,"message":"677","line":5,"column":5,"nodeType":"622","messageId":"623","endLine":5,"endColumn":12},{"ruleId":"620","severity":1,"message":"678","line":6,"column":5,"nodeType":"622","messageId":"623","endLine":6,"endColumn":12},{"ruleId":"620","severity":1,"message":"679","line":11,"column":5,"nodeType":"622","messageId":"623","endLine":11,"endColumn":13},{"ruleId":"620","severity":1,"message":"680","line":12,"column":5,"nodeType":"622","messageId":"623","endLine":12,"endColumn":11},{"ruleId":"620","severity":1,"message":"681","line":26,"column":9,"nodeType":"622","messageId":"623","endLine":26,"endColumn":12},{"ruleId":"620","severity":1,"message":"682","line":26,"column":14,"nodeType":"622","messageId":"623","endLine":26,"endColumn":23},{"ruleId":"620","severity":1,"message":"683","line":26,"column":25,"nodeType":"622","messageId":"623","endLine":26,"endColumn":34},{"ruleId":"620","severity":1,"message":"684","line":27,"column":27,"nodeType":"622","messageId":"623","endLine":27,"endColumn":35},{"ruleId":"628","severity":1,"message":"685","line":38,"column":8,"nodeType":"630","endLine":38,"endColumn":20,"suggestions":"686"},{"ruleId":"620","severity":1,"message":"687","line":3,"column":10,"nodeType":"622","messageId":"623","endLine":3,"endColumn":14},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":5,"column":9,"nodeType":"622","messageId":"623","endLine":5,"endColumn":13},{"ruleId":"620","severity":1,"message":"674","line":4,"column":5,"nodeType":"622","messageId":"623","endLine":4,"endColumn":14},{"ruleId":"620","severity":1,"message":"675","line":5,"column":5,"nodeType":"622","messageId":"623","endLine":5,"endColumn":11},{"ruleId":"620","severity":1,"message":"676","line":6,"column":5,"nodeType":"622","messageId":"623","endLine":6,"endColumn":15},{"ruleId":"620","severity":1,"message":"677","line":7,"column":5,"nodeType":"622","messageId":"623","endLine":7,"endColumn":12},{"ruleId":"620","severity":1,"message":"678","line":8,"column":5,"nodeType":"622","messageId":"623","endLine":8,"endColumn":12},{"ruleId":"620","severity":1,"message":"688","line":9,"column":5,"nodeType":"622","messageId":"623","endLine":9,"endColumn":16},{"ruleId":"620","severity":1,"message":"689","line":10,"column":28,"nodeType":"622","messageId":"623","endLine":10,"endColumn":37},{"ruleId":"620","severity":1,"message":"680","line":11,"column":5,"nodeType":"622","messageId":"623","endLine":11,"endColumn":11},{"ruleId":"620","severity":1,"message":"690","line":28,"column":9,"nodeType":"622","messageId":"623","endLine":28,"endColumn":20},{"ruleId":"628","severity":1,"message":"691","line":48,"column":8,"nodeType":"630","endLine":48,"endColumn":21,"suggestions":"692"},{"ruleId":"620","severity":1,"message":"681","line":4,"column":17,"nodeType":"622","messageId":"623","endLine":4,"endColumn":20},{"ruleId":"620","severity":1,"message":"693","line":10,"column":5,"nodeType":"622","messageId":"623","endLine":10,"endColumn":12},{"ruleId":"620","severity":1,"message":"682","line":14,"column":5,"nodeType":"622","messageId":"623","endLine":14,"endColumn":14},{"ruleId":"620","severity":1,"message":"683","line":14,"column":16,"nodeType":"622","messageId":"623","endLine":14,"endColumn":25},{"ruleId":"620","severity":1,"message":"684","line":22,"column":27,"nodeType":"622","messageId":"623","endLine":22,"endColumn":35},{"ruleId":"649","severity":1,"message":"650","line":48,"column":35,"nodeType":"651","messageId":"652","endLine":48,"endColumn":37},{"ruleId":"628","severity":1,"message":"694","line":62,"column":8,"nodeType":"630","endLine":62,"endColumn":10,"suggestions":"695"},{"ruleId":"696","severity":1,"message":"697","line":122,"column":25,"nodeType":"698","endLine":122,"endColumn":100},{"ruleId":"620","severity":1,"message":"637","line":9,"column":9,"nodeType":"622","messageId":"623","endLine":9,"endColumn":13},{"ruleId":"620","severity":1,"message":"662","line":10,"column":9,"nodeType":"622","messageId":"623","endLine":10,"endColumn":29},{"ruleId":"620","severity":1,"message":"699","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":17},{"ruleId":"620","severity":1,"message":"637","line":20,"column":9,"nodeType":"622","messageId":"623","endLine":20,"endColumn":13},{"ruleId":"620","severity":1,"message":"663","line":21,"column":9,"nodeType":"622","messageId":"623","endLine":21,"endColumn":29},{"ruleId":"620","severity":1,"message":"699","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":17},{"ruleId":"620","severity":1,"message":"637","line":24,"column":9,"nodeType":"622","messageId":"623","endLine":24,"endColumn":13},{"ruleId":"620","severity":1,"message":"699","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":17},{"ruleId":"620","severity":1,"message":"637","line":20,"column":9,"nodeType":"622","messageId":"623","endLine":20,"endColumn":13},{"ruleId":"620","severity":1,"message":"660","line":21,"column":9,"nodeType":"622","messageId":"623","endLine":21,"endColumn":29},{"ruleId":"620","severity":1,"message":"700","line":28,"column":5,"nodeType":"622","messageId":"623","endLine":28,"endColumn":16},{"ruleId":"620","severity":1,"message":"701","line":4,"column":9,"nodeType":"622","messageId":"623","endLine":4,"endColumn":19},{"ruleId":"620","severity":1,"message":"702","line":8,"column":8,"nodeType":"622","messageId":"623","endLine":8,"endColumn":20},{"ruleId":"620","severity":1,"message":"637","line":10,"column":9,"nodeType":"622","messageId":"623","endLine":10,"endColumn":13},{"ruleId":"620","severity":1,"message":"661","line":12,"column":9,"nodeType":"622","messageId":"623","endLine":12,"endColumn":26},{"ruleId":"620","severity":1,"message":"637","line":8,"column":9,"nodeType":"622","messageId":"623","endLine":8,"endColumn":13},{"ruleId":"620","severity":1,"message":"703","line":2,"column":30,"nodeType":"622","messageId":"623","endLine":2,"endColumn":47},{"ruleId":"620","severity":1,"message":"704","line":4,"column":5,"nodeType":"622","messageId":"623","endLine":4,"endColumn":15},{"ruleId":"620","severity":1,"message":"705","line":5,"column":5,"nodeType":"622","messageId":"623","endLine":5,"endColumn":11},{"ruleId":"620","severity":1,"message":"706","line":6,"column":5,"nodeType":"622","messageId":"623","endLine":6,"endColumn":9},{"ruleId":"620","severity":1,"message":"707","line":7,"column":5,"nodeType":"622","messageId":"623","endLine":7,"endColumn":13},{"ruleId":"620","severity":1,"message":"708","line":8,"column":5,"nodeType":"622","messageId":"623","endLine":8,"endColumn":16},{"ruleId":"620","severity":1,"message":"709","line":9,"column":5,"nodeType":"622","messageId":"623","endLine":9,"endColumn":16},{"ruleId":"620","severity":1,"message":"710","line":13,"column":5,"nodeType":"622","messageId":"623","endLine":13,"endColumn":13},{"ruleId":"620","severity":1,"message":"701","line":15,"column":9,"nodeType":"622","messageId":"623","endLine":15,"endColumn":19},{"ruleId":"620","severity":1,"message":"702","line":19,"column":8,"nodeType":"622","messageId":"623","endLine":19,"endColumn":20},{"ruleId":"620","severity":1,"message":"665","line":22,"column":9,"nodeType":"622","messageId":"623","endLine":22,"endColumn":23},{"ruleId":"620","severity":1,"message":"661","line":23,"column":9,"nodeType":"622","messageId":"623","endLine":23,"endColumn":26},{"ruleId":"620","severity":1,"message":"711","line":36,"column":12,"nodeType":"622","messageId":"623","endLine":36,"endColumn":26},{"ruleId":"620","severity":1,"message":"637","line":18,"column":9,"nodeType":"622","messageId":"623","endLine":18,"endColumn":13},{"ruleId":"628","severity":1,"message":"712","line":107,"column":8,"nodeType":"630","endLine":107,"endColumn":15,"suggestions":"713"},{"ruleId":"628","severity":1,"message":"642","line":111,"column":8,"nodeType":"630","endLine":111,"endColumn":10,"suggestions":"714"},{"ruleId":"620","severity":1,"message":"715","line":3,"column":80,"nodeType":"622","messageId":"623","endLine":3,"endColumn":88},{"ruleId":"620","severity":1,"message":"637","line":5,"column":9,"nodeType":"622","messageId":"623","endLine":5,"endColumn":13},{"ruleId":"620","severity":1,"message":"667","line":2,"column":30,"nodeType":"622","messageId":"623","endLine":2,"endColumn":35},{"ruleId":"620","severity":1,"message":"715","line":2,"column":76,"nodeType":"622","messageId":"623","endLine":2,"endColumn":84},{"ruleId":"620","severity":1,"message":"637","line":4,"column":9,"nodeType":"622","messageId":"623","endLine":4,"endColumn":13},{"ruleId":"620","severity":1,"message":"690","line":5,"column":9,"nodeType":"622","messageId":"623","endLine":5,"endColumn":20},{"ruleId":"628","severity":1,"message":"716","line":76,"column":8,"nodeType":"630","endLine":76,"endColumn":18,"suggestions":"717"},{"ruleId":"620","severity":1,"message":"718","line":79,"column":12,"nodeType":"622","messageId":"623","endLine":79,"endColumn":20},{"ruleId":"620","severity":1,"message":"719","line":79,"column":22,"nodeType":"622","messageId":"623","endLine":79,"endColumn":33},{"ruleId":"620","severity":1,"message":"720","line":1,"column":26,"nodeType":"622","messageId":"623","endLine":1,"endColumn":35},{"ruleId":"620","severity":1,"message":"700","line":7,"column":33,"nodeType":"622","messageId":"623","endLine":7,"endColumn":44},{"ruleId":"620","severity":1,"message":"721","line":21,"column":9,"nodeType":"622","messageId":"623","endLine":21,"endColumn":19},{"ruleId":"620","severity":1,"message":"722","line":22,"column":27,"nodeType":"622","messageId":"623","endLine":22,"endColumn":35},{"ruleId":"620","severity":1,"message":"637","line":30,"column":9,"nodeType":"622","messageId":"623","endLine":30,"endColumn":13},{"ruleId":"620","severity":1,"message":"675","line":29,"column":5,"nodeType":"622","messageId":"623","endLine":29,"endColumn":11},{"ruleId":"620","severity":1,"message":"637","line":51,"column":9,"nodeType":"622","messageId":"623","endLine":51,"endColumn":13},{"ruleId":"620","severity":1,"message":"723","line":193,"column":12,"nodeType":"622","messageId":"623","endLine":193,"endColumn":19},{"ruleId":"620","severity":1,"message":"724","line":193,"column":21,"nodeType":"622","messageId":"623","endLine":193,"endColumn":26},{"ruleId":"628","severity":1,"message":"725","line":209,"column":8,"nodeType":"630","endLine":209,"endColumn":10,"suggestions":"726"},{"ruleId":"620","severity":1,"message":"637","line":24,"column":9,"nodeType":"622","messageId":"623","endLine":24,"endColumn":13},{"ruleId":"628","severity":1,"message":"727","line":57,"column":8,"nodeType":"630","endLine":57,"endColumn":24,"suggestions":"728"},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","endLine":9,"endColumn":2},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"637","line":3,"column":9,"nodeType":"622","messageId":"623","endLine":3,"endColumn":13},{"ruleId":"620","severity":1,"message":"675","line":2,"column":9,"nodeType":"622","messageId":"623","endLine":2,"endColumn":15},{"ruleId":"620","severity":1,"message":"666","line":10,"column":11,"nodeType":"622","messageId":"623","endLine":10,"endColumn":19},{"ruleId":"620","severity":1,"message":"675","line":2,"column":9,"nodeType":"622","messageId":"623","endLine":2,"endColumn":15},{"ruleId":"620","severity":1,"message":"675","line":2,"column":9,"nodeType":"622","messageId":"623","endLine":2,"endColumn":15},{"ruleId":"620","severity":1,"message":"675","line":2,"column":9,"nodeType":"622","messageId":"623","endLine":2,"endColumn":15},{"ruleId":"649","severity":1,"message":"650","line":57,"column":45,"nodeType":"651","messageId":"652","endLine":57,"endColumn":47},"no-native-reassign",["729"],"no-negated-in-lhs",["730"],"no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","'login' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.","ArrayExpression",["731"],"'useState' is defined but never used.","'PageNavbar' is defined but never used.","'Route' is defined but never used.","'AddCourse' is defined but never used.","'CoursesList' is defined but never used.","'link' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["732"],"'width' is assigned a value but never used.","'height' is assigned a value but never used.","'category' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDashboardData'. Either include it or remove the dependency array.",["733"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'barChartData', 'dashboard.byCategory', 'error', and 'loading'. Either include them or remove the dependency array.",["734"],"'RequestedStudent' is defined but never used.","'UndecidedStudent' is defined but never used.","'ToGetGiftStudent' is defined but never used.","'TestedStudent' is defined but never used.","'useSelector' is defined but never used.","'getRequestedStudents' is defined but never used.","'getTestedStudents' is defined but never used.","'getUndecidedStudents' is defined but never used.","'getToGetGiftStudents' is defined but never used.","'WaitingList' is defined but never used.","'getWaitingList' is defined but never used.","'dispatch' is assigned a value but never used.","'Label' is defined but never used.","'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'getScheduledCourses' aren't valid dependencies because mutating them doesn't re-render the component.",["735"],"'TeachersList' is defined but never used.","'AddTeacher' is defined but never used.",["736"],"'BirthDate' is defined but never used.","'Button' is defined but never used.","'ButtonsBox' is defined but never used.","'CardBox' is defined but never used.","'CardImg' is defined but never used.","'HashTags' is defined but never used.","'LangIn' is defined but never used.","'Add' is defined but never used.","'NavbarBox' is defined but never used.","'PageTitle' is defined but never used.","'PlusIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'getCourses' aren't valid dependencies because mutating them doesn't re-render the component.",["737"],"'Link' is defined but never used.","'Description' is defined but never used.","'FullNames' is defined but never used.","'DisplayFlex' is defined but never used.","React Hook useEffect has a missing dependency: 'getTeachersDispatch'. Either include it or remove the dependency array. Outer scope values like 'getTeachers' aren't valid dependencies because mutating them doesn't re-render the component.",["738"],"'ImageId' is defined but never used.","React Hook useEffect has missing dependencies: 'getImages' and 'state'. Either include them or remove the dependency array.",["739"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Checkbox' is defined but never used.","'DeletionImg' is defined but never used.","'whichMonth' is defined but never used.","'NumberFormat' is defined but never used.","'PhoneNumberFormat' is defined but never used.","'ContactBox' is defined but never used.","'Course' is defined but never used.","'Date' is defined but never used.","'FullName' is defined but never used.","'FullNameBox' is defined but never used.","'PhoneNumber' is defined but never used.","'Telegram' is defined but never used.","'editingProcess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTelegramFileById'. Either include it or remove the dependency array.",["740"],["741"],"'Textarea' is defined but never used.","React Hook useEffect has a missing dependency: 'courseUtil'. Either include it or remove the dependency array.",["742"],"'duration' is assigned a value but never used.","'setDuration' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'EditIcon' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["743"],"React Hook useEffect has a missing dependency: 'getClientsListDispatch'. Either include it or remove the dependency array. Outer scope values like 'getClientsList' aren't valid dependencies because mutating them doesn't re-render the component.",["744"],"no-global-assign","no-unsafe-negation",{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"747","fix":"753"},{"desc":"747","fix":"754"},{"desc":"747","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"760","fix":"761"},{"desc":"747","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},"Update the dependencies array to be: [width]",{"range":"769","text":"770"},"Update the dependencies array to be: [dispatch]",{"range":"771","text":"772"},"Update the dependencies array to be: [getDashboardData]",{"range":"773","text":"774"},"Update the dependencies array to be: [barChartData, dashboard.byCategory, error, loading, selectedCategory]",{"range":"775","text":"776"},{"range":"777","text":"772"},{"range":"778","text":"772"},{"range":"779","text":"772"},"Update the dependencies array to be: [getTeachersDispatch]",{"range":"780","text":"781"},"Update the dependencies array to be: [getImages, state]",{"range":"782","text":"783"},"Update the dependencies array to be: [getTelegramFileById, level]",{"range":"784","text":"785"},{"range":"786","text":"772"},"Update the dependencies array to be: [constant, courseUtil]",{"range":"787","text":"788"},"Update the dependencies array to be: [dispatch, id]",{"range":"789","text":"790"},"Update the dependencies array to be: [getClientsListDispatch]",{"range":"791","text":"792"},[5641,5643],"[width]",[1288,1290],"[dispatch]",[9378,9380],"[getDashboardData]",[11337,11355],"[barChartData, dashboard.byCategory, error, loading, selectedCategory]",[580,601],[736,738],[1466,1478],[1592,1605],"[getTeachersDispatch]",[2094,2096],"[getImages, state]",[3933,3940],"[getTelegramFileById, level]",[4010,4012],[2813,2823],"[constant, courseUtil]",[6402,6404],"[dispatch, id]",[1777,1793],"[getClientsListDispatch]"]